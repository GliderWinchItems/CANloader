ARM GAS  /tmp/ccettC69.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"stm32l4xx_hal_rtc.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.HAL_RTC_MspInit,"ax",%progbits
  22              		.align	2
  23              		.weak	HAL_RTC_MspInit
  24              		.thumb
  25              		.thumb_func
  27              	HAL_RTC_MspInit:
  28              	.LFB290:
  29              		.file 1 "Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c"
   1:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
   2:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   ******************************************************************************
   3:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @file    stm32l4xx_hal_rtc.c
   4:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @author  MCD Application Team
   5:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief   RTC HAL module driver.
   6:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          functionalities of the Real-Time Clock (RTC) peripheral:
   8:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *           + Initialization/de-initialization functions
   9:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *           + Calendar (Time and Date) configuration
  10:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *           + Alarms (Alarm A and Alarm B) configuration
  11:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *           + WakeUp Timer configuration
  12:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *           + TimeStamp configuration
  13:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *           + Tampers configuration
  14:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *           + Backup Data Registers configuration
  15:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *           + RTC Tamper and TimeStamp Pins Selection
  16:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *           + Interrupts and flags management
  17:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *
  18:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   @verbatim
  19:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  ===============================================================================
  20:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                           ##### RTC Operating Condition #####
  21:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  ===============================================================================
  22:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..] The real-time clock (RTC) and the RTC backup registers can be powered
  23:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****        from the VBAT voltage when the main VDD supply is powered off.
  24:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****        To retain the content of the RTC backup registers and supply the RTC
  25:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****        when VDD is turned off, VBAT pin can be connected to an optional
  26:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****        standby voltage supplied by a battery or by another source.
  27:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
  28:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                    ##### Backup Domain Reset #####
  29:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  ===============================================================================
ARM GAS  /tmp/ccettC69.s 			page 2


  30:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..] The backup domain reset sets all RTC registers and the RCC_BDCR register
  31:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****        to their reset values.
  32:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****        A backup domain reset is generated when one of the following events occurs:
  33:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (#) Software reset, triggered by setting the BDRST bit in the
  34:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         RCC Backup domain control register (RCC_BDCR).
  35:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (#) VDD or VBAT power on, if both supplies have previously been powered off.
  36:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (#) Tamper detection event resets all data backup registers.
  37:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
  38:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                    ##### Backup Domain Access #####
  39:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   ==================================================================
  40:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..] After reset, the backup domain (RTC registers and RTC backup data registers)
  41:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****        is protected against possible unwanted write accesses.
  42:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..] To enable access to the RTC Domain and RTC registers, proceed as follows:
  43:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) Enable the Power Controller (PWR) APB1 interface clock using the
  44:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         __HAL_RCC_PWR_CLK_ENABLE() function.
  45:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) Enable access to RTC domain using the HAL_PWR_EnableBkUpAccess() function.
  46:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) Select the RTC clock source using the __HAL_RCC_RTC_CONFIG() function.
  47:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) Enable RTC Clock using the __HAL_RCC_RTC_ENABLE() function.
  48:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
  49:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..] To enable access to the RTC Domain and RTC registers, proceed as follows:
  50:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (#) Call the function HAL_RCCEx_PeriphCLKConfig with RCC_PERIPHCLK_RTC for
  51:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         PeriphClockSelection and select RTCClockSelection (LSE, LSI or HSEdiv32)
  52:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (#) Enable RTC Clock using the __HAL_RCC_RTC_ENABLE() macro.
  53:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
  54:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   ##### How to use RTC Driver #####
  55:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  ===================================================================
  56:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..]
  57:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) Enable the RTC domain access (see description in the section above).
  58:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) Configure the RTC Prescaler (Asynchronous and Synchronous) and RTC hour
  59:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         format using the HAL_RTC_Init() function.
  60:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
  61:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *** Time and Date configuration ***
  62:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   ===================================
  63:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..]
  64:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) To configure the RTC Calendar (Time and Date) use the HAL_RTC_SetTime()
  65:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         and HAL_RTC_SetDate() functions.
  66:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) To read the RTC Calendar, use the HAL_RTC_GetTime() and HAL_RTC_GetDate() functions.
  67:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
  68:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *** Alarm configuration ***
  69:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   ===========================
  70:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..]
  71:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) To configure the RTC Alarm use the HAL_RTC_SetAlarm() function.
  72:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****             You can also configure the RTC Alarm with interrupt mode using the
  73:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****             HAL_RTC_SetAlarm_IT() function.
  74:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) To read the RTC Alarm, use the HAL_RTC_GetAlarm() function.
  75:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
  76:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   ##### RTC and low power modes #####
  77:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   ==================================================================
  78:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..] The MCU can be woken up from a low power mode by an RTC alternate
  79:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****        function.
  80:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..] The RTC alternate functions are the RTC alarms (Alarm A and Alarm B),
  81:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****        RTC wakeup, RTC tamper event detection and RTC time stamp event detection.
  82:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****        These RTC alternate functions can wake up the system from the Stop and
  83:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****        Standby low power modes.
  84:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..] The system can also wake up from low power modes without depending
  85:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****        on an external interrupt (Auto-wakeup mode), by using the RTC alarm
  86:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****        or the RTC wakeup events.
ARM GAS  /tmp/ccettC69.s 			page 3


  87:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..] The RTC provides a programmable time base for waking up from the
  88:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****        Stop or Standby mode at regular intervals.
  89:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****        Wakeup from STOP and STANDBY modes is possible only when the RTC clock source
  90:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****        is LSE or LSI.
  91:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
  92:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *** Callback registration ***
  93:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   =============================================
  94:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
  95:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..]
  96:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   When The compilation define USE_HAL_RTC_REGISTER_CALLBACKS is set to 0 or
  97:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   not defined, the callback registration feature is not available and all callbacks
  98:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   are set to the corresponding weak functions. This is the recommended configuration
  99:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   in order to optimize memory/code consumption footprint/performances.
 100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..]
 102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   The compilation define  USE_RTC_REGISTER_CALLBACKS when set to 1
 103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   allows the user to configure dynamically the driver callbacks.
 104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   Use Function @ref HAL_RTC_RegisterCallback() to register an interrupt callback.
 105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..]
 107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   Function @ref HAL_RTC_RegisterCallback() allows to register following callbacks:
 108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) AlarmAEventCallback          : RTC Alarm A Event callback.
 109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) AlarmBEventCallback          : RTC Alarm B Event callback.
 110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) TimeStampEventCallback       : RTC TimeStamp Event callback.
 111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) WakeUpTimerEventCallback     : RTC WakeUpTimer Event callback.
 112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) SSRUEventCallback            : RTC SSRU Event callback.
 114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) Tamper1EventCallback         : RTC Tamper 1 Event callback.
 116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) Tamper2EventCallback         : RTC Tamper 2 Event callback.
 117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) Tamper3EventCallback         : RTC Tamper 3 Event callback.
 118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) MspInitCallback              : RTC MspInit callback.
 119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) MspDeInitCallback            : RTC MspDeInit callback.
 120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   This function takes as parameters the HAL peripheral handle, the Callback ID
 121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   and a pointer to the user callback function.
 122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..]
 124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   Use function @ref HAL_RTC_UnRegisterCallback() to reset a callback to the default
 125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   weak function.
 126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   @ref HAL_RTC_UnRegisterCallback() takes as parameters the HAL peripheral handle,
 127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   and the Callback ID.
 128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   This function allows to reset following callbacks:
 129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) AlarmAEventCallback          : RTC Alarm A Event callback.
 130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) AlarmBEventCallback          : RTC Alarm B Event callback.
 131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) TimeStampEventCallback       : RTC TimeStamp Event callback.
 132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) WakeUpTimerEventCallback     : RTC WakeUpTimer Event callback.
 133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) SSRUEventCallback            : RTC SSRU Event callback.
 135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) Tamper1EventCallback         : RTC Tamper 1 Event callback.
 137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) Tamper2EventCallback         : RTC Tamper 2 Event callback.
 138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) Tamper3EventCallback         : RTC Tamper 3 Event callback.
 139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) MspInitCallback              : RTC MspInit callback.
 140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) MspDeInitCallback            : RTC MspDeInit callback.
 141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..]
 143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   By default, after the @ref HAL_RTC_Init() and when the state is HAL_RTC_STATE_RESET,
ARM GAS  /tmp/ccettC69.s 			page 4


 144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   all callbacks are set to the corresponding weak functions :
 145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   examples @ref AlarmAEventCallback(), @ref TimeStampEventCallback().
 146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   Exception done for MspInit and MspDeInit callbacks that are reset to the legacy weak function
 147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   in the @ref HAL_RTC_Init()/@ref HAL_RTC_DeInit() only when these callbacks are null
 148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   (not registered beforehand).
 149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   If not, MspInit or MspDeInit are not null, @ref HAL_RTC_Init()/@ref HAL_RTC_DeInit()
 150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   keep and use the user MspInit/MspDeInit callbacks (registered beforehand)
 151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..]
 153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   Callbacks can be registered/unregistered in HAL_RTC_STATE_READY state only.
 154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   Exception done MspInit/MspDeInit that can be registered/unregistered
 155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   in HAL_RTC_STATE_READY or HAL_RTC_STATE_RESET state,
 156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   In that case first register the MspInit/MspDeInit user callbacks
 158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   using @ref HAL_RTC_RegisterCallback() before calling @ref HAL_RTC_DeInit()
 159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   or @ref HAL_RTC_Init() function.
 160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..]
 162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   When The compilation define USE_HAL_RTC_REGISTER_CALLBACKS is set to 0 or
 163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   not defined, the callback registration feature is not available and all callbacks
 164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   are set to the corresponding weak functions.
 165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****    @endverbatim
 167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   ******************************************************************************
 168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @attention
 169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *
 170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
 171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * All rights reserved.</center></h2>
 172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *
 173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * the "License"; You may not use this file except in compliance with the
 175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * License. You may obtain a copy of the License at:
 176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *                        opensource.org/licenses/BSD-3-Clause
 177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *
 178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   ******************************************************************************
 179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /* Includes ------------------------------------------------------------------*/
 182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #include "stm32l4xx_hal.h"
 183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /** @addtogroup STM32L4xx_HAL_Driver
 185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @{
 186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /** @addtogroup RTC
 190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief RTC HAL module driver
 191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @{
 192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #ifdef HAL_RTC_MODULE_ENABLED
 195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /* Private typedef -----------------------------------------------------------*/
 197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /* Private define ------------------------------------------------------------*/
 198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /* Private macro -------------------------------------------------------------*/
 199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /* Private variables ---------------------------------------------------------*/
 200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /* Private function prototypes -----------------------------------------------*/
ARM GAS  /tmp/ccettC69.s 			page 5


 201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /* Exported functions --------------------------------------------------------*/
 202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /** @addtogroup RTC_Exported_Functions
 204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @{
 205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /** @addtogroup RTC_Exported_Functions_Group1
 208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  *  @brief    Initialization and Configuration functions
 209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  *
 210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** @verbatim
 211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  ===============================================================================
 212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ##### Initialization and de-initialization functions #####
 213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  ===============================================================================
 214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****    [..] This section provides functions allowing to initialize and configure the
 215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****          RTC Prescaler (Synchronous and Asynchronous), RTC Hour format, disable
 216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****          RTC registers Write protection, enter and exit the RTC initialization mode,
 217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****          RTC registers synchronization check and reference clock detection enable.
 218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****          (#) The RTC Prescaler is programmed to generate the RTC 1Hz time base.
 219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****              It is split into 2 programmable prescalers to minimize power consumption.
 220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****              (++) A 7-bit asynchronous prescaler and a 15-bit synchronous prescaler.
 221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****              (++) When both prescalers are used, it is recommended to configure the
 222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                  asynchronous prescaler to a high value to minimize power consumption.
 223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****          (#) All RTC registers are Write protected. Writing to the RTC registers
 224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****              is enabled by writing a key into the Write Protection register, RTC_WPR.
 225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****          (#) To configure the RTC Calendar, user application should enter
 226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****              initialization mode. In this mode, the calendar counter is stopped
 227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****              and its value can be updated. When the initialization sequence is
 228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****              complete, the calendar restarts counting after 4 RTCCLK cycles.
 229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****          (#) To read the calendar through the shadow registers after Calendar
 230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****              initialization, calendar update or after wakeup from low power modes
 231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****              the software must first clear the RSF flag. The software must then
 232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****              wait until it is set again before reading the calendar, which means
 233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****              that the calendar registers have been correctly copied into the
 234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****              RTC_TR and RTC_DR shadow registers.The HAL_RTC_WaitForSynchro() function
 235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****              implements the above software sequence (RSF clear and RSF check).
 236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** @endverbatim
 238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @{
 239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
 242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Initialize the RTC peripheral
 243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
 244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
 245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_Init(RTC_HandleTypeDef *hrtc)
 247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check the RTC peripheral state */
 251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (hrtc != NULL)
 252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Check the parameters */
 254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ALL_INSTANCE(hrtc->Instance));
 255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_HOUR_FORMAT(hrtc->Init.HourFormat));
 256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ASYNCH_PREDIV(hrtc->Init.AsynchPrediv));
 257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_SYNCH_PREDIV(hrtc->Init.SynchPrediv));
ARM GAS  /tmp/ccettC69.s 			page 6


 258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_OUTPUT(hrtc->Init.OutPut));
 259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_OUTPUT_REMAP(hrtc->Init.OutPutRemap));
 260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_OUTPUT_POL(hrtc->Init.OutPutPolarity));
 261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_OUTPUT_TYPE(hrtc->Init.OutPutType));
 262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_OUTPUT_PULLUP(hrtc->Init.OutPutPullUp));
 264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_BINARY_MODE(hrtc->Init.BinMode));
 268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_BINARY_MIX_BCDU(hrtc->Init.BinMixBcdU));
 269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
 272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (hrtc->State == HAL_RTC_STATE_RESET)
 273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       /* Allocate lock resource and initialize it */
 275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Lock = HAL_UNLOCKED;
 276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->AlarmAEventCallback          =  HAL_RTC_AlarmAEventCallback;             /* Legacy weak
 277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->AlarmBEventCallback          =  HAL_RTCEx_AlarmBEventCallback;           /* Legacy weak
 278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->TimeStampEventCallback       =  HAL_RTCEx_TimeStampEventCallback;        /* Legacy weak
 279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->WakeUpTimerEventCallback     =  HAL_RTCEx_WakeUpTimerEventCallback;      /* Legacy weak
 280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->SSRUEventCallback            =  HAL_RTCEx_SSRUEventCallback;             /* Legacy weak
 282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(RTC_TAMPER1_SUPPORT)
 285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Tamper1EventCallback         =  HAL_RTCEx_Tamper1EventCallback;          /* Legacy weak
 286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* RTC_TAMPER1_SUPPORT */
 287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Tamper2EventCallback         =  HAL_RTCEx_Tamper2EventCallback;          /* Legacy weak
 288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(RTC_TAMPER3_SUPPORT)
 289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Tamper3EventCallback         =  HAL_RTCEx_Tamper3EventCallback;          /* Legacy weak
 290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* RTC_TAMPER3_SUPPORT */
 291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if (hrtc->MspInitCallback == NULL)
 293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->MspInitCallback = HAL_RTC_MspInit;
 295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
 296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       /* Init the low level hardware */
 297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->MspInitCallback(hrtc);
 298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if (hrtc->MspDeInitCallback == NULL)
 300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->MspDeInitCallback = HAL_RTC_MspDeInit;
 302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
 303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #else /* #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
 305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (hrtc->State == HAL_RTC_STATE_RESET)
 306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       /* Allocate lock resource and initialize it */
 308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Lock = HAL_UNLOCKED;
 309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       /* Initialize RTC MSP */
 311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       HAL_RTC_MspInit(hrtc);
 312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
 314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
ARM GAS  /tmp/ccettC69.s 			page 7


 315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Process TAMP ip offset from RTC one */
 317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->TampOffset = (TAMP_BASE - RTC_BASE);
 318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Set RTC state */
 320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_BUSY;
 321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Disable the write protection for RTC registers */
 323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Enter Initialization mode */
 326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     status = RTC_EnterInitMode(hrtc);
 327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (status == HAL_OK)
 329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       /* Clear RTC_CR FMT, OSEL, POL and TAMPOE Bits */
 332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->CR &= ~(RTC_CR_FMT | RTC_CR_POL | RTC_CR_OSEL | RTC_CR_TAMPOE);
 333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #else
 334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       /* Clear RTC_CR FMT, OSEL and POL Bits */
 335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->CR &= ~(RTC_CR_FMT | RTC_CR_OSEL | RTC_CR_POL);
 336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       /* Set RTC_CR register */
 338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->CR |= (hrtc->Init.HourFormat | hrtc->Init.OutPut | hrtc->Init.OutPutPolarity)
 339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       /* Configure the RTC PRER */
 341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->PRER = (hrtc->Init.SynchPrediv);
 342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->PRER |= (hrtc->Init.AsynchPrediv << RTC_PRER_PREDIV_A_Pos);
 343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       /* Configure the Binary mode */
 346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       MODIFY_REG(RTC->ICSR, RTC_ICSR_BIN | RTC_ICSR_BCDU, hrtc->Init.BinMode | hrtc->Init.BinMixBcd
 347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       /* Exit Initialization mode */
 350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       status = RTC_ExitInitMode(hrtc);
 351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if (status == HAL_OK)
 353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Instance->CR &= ~(RTC_CR_TAMPALRM_PU | RTC_CR_TAMPALRM_TYPE | RTC_CR_OUT2EN);
 356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Instance->CR |= (hrtc->Init.OutPutPullUp | hrtc->Init.OutPutType | hrtc->Init.OutPutR
 357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #else
 358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Instance->OR &= ~(RTC_OR_ALARMOUTTYPE | RTC_OR_OUT_RMP);
 359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Instance->OR |= (hrtc->Init.OutPutType | hrtc->Init.OutPutRemap);
 360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
 363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****           hrtc->State = HAL_RTC_STATE_READY;
 366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
 367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return status;
 371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
ARM GAS  /tmp/ccettC69.s 			page 8


 372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
 374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  DeInitialize the RTC peripheral.
 375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @note   This function does not reset the RTC Backup Data registers.
 376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
 377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
 378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_DeInit(RTC_HandleTypeDef *hrtc)
 380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check the RTC peripheral state */
 384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (hrtc != NULL)
 385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Check the parameters */
 387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ALL_INSTANCE(hrtc->Instance));
 388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Set RTC state */
 390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_BUSY;
 391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Disable the write protection for RTC registers */
 393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Enter Initialization mode */
 396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     status = RTC_EnterInitMode(hrtc);
 397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (status == HAL_OK)
 399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       /* Reset all RTC CR register bits */
 401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->TR = 0x00000000U;
 402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->DR = ((uint32_t)(RTC_DR_WDU_0 | RTC_DR_MU_0 | RTC_DR_DU_0));
 403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->CR &= 0x00000000U;
 404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->WUTR = RTC_WUTR_WUT;
 406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->PRER = ((uint32_t)(RTC_PRER_PREDIV_A | 0x000000FFU));
 407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->ALRMAR = 0x00000000U;
 408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->ALRMBR = 0x00000000U;
 409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->SHIFTR = 0x00000000U;
 410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->CALR = 0x00000000U;
 411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->ALRMASSR = 0x00000000U;
 412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->ALRMBSSR = 0x00000000U;
 413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       /* Exit initialization mode */
 415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       status = RTC_ExitInitMode(hrtc);
 416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if (status == HAL_OK)
 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Reset TAMP registers */
 422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         ((TAMP_TypeDef *)((uint32_t)hrtc->Instance + hrtc->TampOffset))->CR1 = 0xFFFF0000U;
 423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         ((TAMP_TypeDef *)((uint32_t)hrtc->Instance + hrtc->TampOffset))->CR2 = 0x00000000U;
 424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #else
 425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Reset Tamper configuration register */
 426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Instance->TAMPCR = 0x00000000U;
 427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Reset Option register */
ARM GAS  /tmp/ccettC69.s 			page 9


 429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Instance->OR = 0x00000000U;
 430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
 433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
 436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         if (hrtc->MspDeInitCallback == NULL)
 437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         {
 438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****           hrtc->MspDeInitCallback = HAL_RTC_MspDeInit;
 439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         }
 440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* DeInit the low level hardware: CLOCK, NVIC.*/
 442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->MspDeInitCallback(hrtc);
 443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #else
 444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* De-Initialize RTC MSP */
 445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         HAL_RTC_MspDeInit(hrtc);
 446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* (USE_HAL_RTC_REGISTER_CALLBACKS) */
 447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_RESET;
 449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Release Lock */
 451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
 452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
 453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return status;
 457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
 460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
 461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Register a User RTC Callback
 462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *         To be used instead of the weak predefined callback
 463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
 464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  CallbackID ID of the callback to be registered
 465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *         This parameter can be one of the following values:
 466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_ALARM_A_EVENT_CB_ID          Alarm A Event Callback ID
 467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_ALARM_B_EVENT_CB_ID          Alarm B Event Callback ID
 468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_TIMESTAMP_EVENT_CB_ID        TimeStamp Event Callback ID
 469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_WAKEUPTIMER_EVENT_CB_ID      WakeUp Timer Event Callback ID
 470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_TAMPER1_EVENT_CB_ID          Tamper 1 Callback ID
 471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_TAMPER2_EVENT_CB_ID          Tamper 2 Callback ID
 472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_TAMPER3_EVENT_CB_ID          Tamper 3 Callback ID
 473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_MSPINIT_CB_ID                Msp Init callback ID
 474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_MSPDEINIT_CB_ID              Msp DeInit callback ID
 475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  pCallback pointer to the Callback function
 476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
 477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_RegisterCallback(RTC_HandleTypeDef *hrtc, HAL_RTC_CallbackIDTypeDef Callb
 479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   HAL_StatusTypeDef status = HAL_OK;
 481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (pCallback == NULL)
 483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     return HAL_ERROR;
 485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
ARM GAS  /tmp/ccettC69.s 			page 10


 486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process locked */
 488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
 489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (HAL_RTC_STATE_READY == hrtc->State)
 491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     switch (CallbackID)
 493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_ALARM_A_EVENT_CB_ID :
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->AlarmAEventCallback = pCallback;
 496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_ALARM_B_EVENT_CB_ID :
 499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->AlarmBEventCallback = pCallback;
 500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_TIMESTAMP_EVENT_CB_ID :
 503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->TimeStampEventCallback = pCallback;
 504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_WAKEUPTIMER_EVENT_CB_ID :
 507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->WakeUpTimerEventCallback = pCallback;
 508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_SSRU_EVENT_CB_ID :
 512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->SSRUEventCallback = pCallback;
 513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(RTC_TAMPER1_SUPPORT)
 517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_TAMPER1_EVENT_CB_ID :
 518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Tamper1EventCallback = pCallback;
 519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* RTC_TAMPER1_SUPPORT */
 521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_TAMPER2_EVENT_CB_ID :
 523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Tamper2EventCallback = pCallback;
 524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(RTC_TAMPER3_SUPPORT)
 527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_TAMPER3_EVENT_CB_ID :
 528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Tamper3EventCallback = pCallback;
 529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* RTC_TAMPER3_SUPPORT */
 531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_MSPINIT_CB_ID :
 533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->MspInitCallback = pCallback;
 534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_MSPDEINIT_CB_ID :
 537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->MspDeInitCallback = pCallback;
 538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       default :
 541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Return error status */
 542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         status =  HAL_ERROR;
ARM GAS  /tmp/ccettC69.s 			page 11


 543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else if (HAL_RTC_STATE_RESET == hrtc->State)
 547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     switch (CallbackID)
 549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_MSPINIT_CB_ID :
 551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->MspInitCallback = pCallback;
 552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_MSPDEINIT_CB_ID :
 555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->MspDeInitCallback = pCallback;
 556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       default :
 559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Return error status */
 560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         status =  HAL_ERROR;
 561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else
 565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Return error status */
 567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     status =  HAL_ERROR;
 568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Release Lock */
 571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
 572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return status;
 574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
 577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Unregister an RTC Callback
 578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *         RTC callback is redirected to the weak predefined callback
 579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
 580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  CallbackID ID of the callback to be unregistered
 581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *         This parameter can be one of the following values:
 582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_ALARM_A_EVENT_CB_ID          Alarm A Event Callback ID
 583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_ALARM_B_EVENT_CB_ID          Alarm B Event Callback ID
 584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_TIMESTAMP_EVENT_CB_ID        TimeStamp Event Callback ID
 585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_SSRU_EVENT_CB_ID             SSRU Callback ID
 587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_WAKEUPTIMER_EVENT_CB_ID      WakeUp Timer Event Callback ID
 589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_TAMPER1_EVENT_CB_ID          Tamper 1 Callback ID
 590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_TAMPER2_EVENT_CB_ID          Tamper 2 Callback ID
 591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_TAMPER3_EVENT_CB_ID          Tamper 3 Callback ID
 592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_MSPINIT_CB_ID Msp Init callback ID
 593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_MSPDEINIT_CB_ID Msp DeInit callback ID
 594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
 595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_UnRegisterCallback(RTC_HandleTypeDef *hrtc, HAL_RTC_CallbackIDTypeDef Cal
 597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   HAL_StatusTypeDef status = HAL_OK;
 599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
ARM GAS  /tmp/ccettC69.s 			page 12


 600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process locked */
 601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
 602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (HAL_RTC_STATE_READY == hrtc->State)
 604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     switch (CallbackID)
 606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_ALARM_A_EVENT_CB_ID :
 608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->AlarmAEventCallback = HAL_RTC_AlarmAEventCallback;         /* Legacy weak AlarmAEvent
 609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_ALARM_B_EVENT_CB_ID :
 612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->AlarmBEventCallback = HAL_RTCEx_AlarmBEventCallback;          /* Legacy weak AlarmBEv
 613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_TIMESTAMP_EVENT_CB_ID :
 616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->TimeStampEventCallback = HAL_RTCEx_TimeStampEventCallback;    /* Legacy weak TimeStam
 617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_WAKEUPTIMER_EVENT_CB_ID :
 620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->WakeUpTimerEventCallback = HAL_RTCEx_WakeUpTimerEventCallback; /* Legacy weak WakeUpT
 621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_SSRU_EVENT_CB_ID :
 625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->SSRUEventCallback = HAL_RTCEx_SSRUEventCallback;               /* Legacy weak SSRUEve
 626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(RTC_TAMPER1_SUPPORT)
 630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_TAMPER1_EVENT_CB_ID :
 631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Tamper1EventCallback = HAL_RTCEx_Tamper1EventCallback;         /* Legacy weak Tamper1
 632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* RTC_TAMPER1_SUPPORT */
 634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_TAMPER2_EVENT_CB_ID :
 636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Tamper2EventCallback = HAL_RTCEx_Tamper2EventCallback;         /* Legacy weak Tamper2
 637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(RTC_TAMPER3_SUPPORT)
 640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_TAMPER3_EVENT_CB_ID :
 641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Tamper3EventCallback = HAL_RTCEx_Tamper3EventCallback;         /* Legacy weak Tamper3
 642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* RTC_TAMPER3_SUPPORT */
 644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_MSPINIT_CB_ID :
 646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->MspInitCallback = HAL_RTC_MspInit;
 647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_MSPDEINIT_CB_ID :
 650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->MspDeInitCallback = HAL_RTC_MspDeInit;
 651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       default :
 654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Return error status */
 655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         status =  HAL_ERROR;
 656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
ARM GAS  /tmp/ccettC69.s 			page 13


 657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else if (HAL_RTC_STATE_RESET == hrtc->State)
 660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     switch (CallbackID)
 662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_MSPINIT_CB_ID :
 664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->MspInitCallback = HAL_RTC_MspInit;
 665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_MSPDEINIT_CB_ID :
 668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->MspDeInitCallback = HAL_RTC_MspDeInit;
 669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       default :
 672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Return error status */
 673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         status =  HAL_ERROR;
 674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else
 678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Return error status */
 680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     status =  HAL_ERROR;
 681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Release Lock */
 684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
 685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return status;
 687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
 689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
 691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Initialize the RTC MSP.
 692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
 693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval None
 694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** __weak void HAL_RTC_MspInit(RTC_HandleTypeDef *hrtc)
 696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
  30              		.loc 1 696 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LVL0:
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE290:
  40 0002 00BF     		.section	.text.HAL_RTC_MspDeInit,"ax",%progbits
  41              		.align	2
  42              		.weak	HAL_RTC_MspDeInit
  43              		.thumb
  44              		.thumb_func
  46              	HAL_RTC_MspDeInit:
  47              	.LFB291:
 697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  /tmp/ccettC69.s 			page 14


 698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   UNUSED(hrtc);
 699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****             the HAL_RTC_MspInit could be implemented in the user file
 702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****    */
 703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
 706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  DeInitialize the RTC MSP.
 707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
 708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval None
 709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** __weak void HAL_RTC_MspDeInit(RTC_HandleTypeDef *hrtc)
 711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
  48              		.loc 1 711 0
  49              		.cfi_startproc
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  53              	.LVL1:
  54 0000 7047     		bx	lr
  55              		.cfi_endproc
  56              	.LFE291:
  58 0002 00BF     		.section	.text.HAL_RTC_DeactivateAlarm,"ax",%progbits
  59              		.align	2
  60              		.global	HAL_RTC_DeactivateAlarm
  61              		.thumb
  62              		.thumb_func
  64              	HAL_RTC_DeactivateAlarm:
  65              	.LFB298:
 712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
 713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   UNUSED(hrtc);
 714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****             the HAL_RTC_MspDeInit could be implemented in the user file
 717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****    */
 718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
 721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @}
 722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /** @addtogroup RTC_Exported_Functions_Group2
 725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  *  @brief   RTC Time and Date functions
 726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  *
 727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** @verbatim
 728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  ===============================================================================
 729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                  ##### RTC Time and Date functions #####
 730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  ===============================================================================
 731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  [..] This section provides functions allowing to configure Time and Date features
 733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** @endverbatim
 735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @{
 736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined (STM32L4P5xx) || defined (STM32L4Q5xx)
ARM GAS  /tmp/ccettC69.s 			page 15


 739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
 740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Set RTC current time.
 741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
 742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  sTime Pointer to Time structure
 743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          if Binary mode is RTC_BINARY_ONLY, this parameter is not used and RTC_SSR will be auto
 744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****              else sTime->SubSeconds is not used and RTC_SSR will be automatically reset to the A 7-
 745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  Format Format of sTime->Hours, sTime->Minutes and sTime->Seconds.
 746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          if Binary mode is RTC_BINARY_ONLY, this parameter is not used
 747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          else this parameter can be one of the following values
 748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BIN: Binary format
 749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BCD: BCD format
 750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
 751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetTime(RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef *sTime, uint32_t Format)
 753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tmpreg;
 755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   HAL_StatusTypeDef status;
 756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #ifdef USE_FULL_ASSERT
 758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check the parameters depending of the Binary mode with 32-bit free-running counter configurati
 759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (READ_BIT(RTC->ICSR, RTC_ICSR_BIN) == RTC_BINARY_NONE)
 760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Check the parameters */
 762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_FORMAT(Format));
 763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_DAYLIGHT_SAVING(sTime->DayLightSaving));
 764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_STORE_OPERATION(sTime->StoreOperation));
 765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process Locked */
 769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
 770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
 774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Enter Initialization mode */
 777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   status = RTC_EnterInitMode(hrtc);
 778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (status == HAL_OK)
 779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Check Binary mode ((32-bit free-running counter) */
 781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (READ_BIT(RTC->ICSR, RTC_ICSR_BIN) != RTC_BINARY_ONLY)
 782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if (Format == RTC_FORMAT_BIN)
 784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         if (READ_BIT(RTC->CR, RTC_CR_FMT) != 0U)
 786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         {
 787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****           assert_param(IS_RTC_HOUR12(sTime->Hours));
 788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****           assert_param(IS_RTC_HOURFORMAT12(sTime->TimeFormat));
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         }
 790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         else
 791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         {
 792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****           sTime->TimeFormat = 0x00U;
 793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****           assert_param(IS_RTC_HOUR24(sTime->Hours));
 794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         }
 795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_MINUTES(sTime->Minutes));
ARM GAS  /tmp/ccettC69.s 			page 16


 796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_SECONDS(sTime->Seconds));
 797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         tmpreg = (uint32_t)(((uint32_t)RTC_ByteToBcd2(sTime->Hours) << RTC_TR_HU_Pos) | \
 799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                             ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << RTC_TR_MNU_Pos) | \
 800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                             ((uint32_t)RTC_ByteToBcd2(sTime->Seconds) << RTC_TR_SU_Pos) | \
 801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                             (((uint32_t)sTime->TimeFormat) << RTC_TR_PM_Pos));
 802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
 804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       else
 805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         if (READ_BIT(RTC->CR, RTC_CR_FMT) != 0U)
 807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         {
 808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****           assert_param(IS_RTC_HOUR12(RTC_Bcd2ToByte(sTime->Hours)));
 809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****           assert_param(IS_RTC_HOURFORMAT12(sTime->TimeFormat));
 810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         }
 811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         else
 812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         {
 813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****           sTime->TimeFormat = 0x00U;
 814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****           assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sTime->Hours)));
 815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         }
 816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(sTime->Minutes)));
 817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sTime->Seconds)));
 818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         tmpreg = (((uint32_t)(sTime->Hours) << RTC_TR_HU_Pos) | \
 819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   ((uint32_t)(sTime->Minutes) << RTC_TR_MNU_Pos) | \
 820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   ((uint32_t)(sTime->Seconds) << RTC_TR_SU_Pos) | \
 821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   ((uint32_t)(sTime->TimeFormat) << RTC_TR_PM_Pos));
 822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
 823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       /* Set the RTC_TR register */
 825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       WRITE_REG(RTC->TR, (tmpreg & RTC_TR_RESERVED_MASK));
 826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       /* This interface is deprecated. To manage Daylight Saving Time, please use HAL_RTC_DST_xxx f
 828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       CLEAR_BIT(RTC->CR, RTC_CR_BKP);
 829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       /* This interface is deprecated. To manage Daylight Saving Time, please use HAL_RTC_DST_xxx f
 831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       SET_BIT(RTC->CR, (sTime->DayLightSaving | sTime->StoreOperation));
 832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Exit Initialization mode */
 836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   status = RTC_ExitInitMode(hrtc);
 837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Enable the write protection for RTC registers */
 840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (status == HAL_OK)
 843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_READY;
 845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process Unlocked */
 848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
 849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return status;
 851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
ARM GAS  /tmp/ccettC69.s 			page 17


 853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
 854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Get RTC current time.
 855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @note  You can use SubSeconds and SecondFraction (sTime structure fields returned) to convert S
 856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *        value in second fraction ratio with time unit following generic formula:
 857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *        Second fraction ratio * time_unit= [(SecondFraction-SubSeconds)/(SecondFraction+1)] * ti
 858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *        This conversion can be performed only if no shift operation is pending (ie. SHFP=0) when
 859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @note  You must call HAL_RTC_GetDate() after HAL_RTC_GetTime() to unlock the values
 860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *        in the higher-order calendar shadow registers to ensure consistency between the time and
 861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *        Reading RTC current time locks the values in calendar shadow registers until Current dat
 862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *        to ensure consistency between the time and date values.
 863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
 864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  sTime
 865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          if Binary mode is RTC_BINARY_ONLY, sTime->SubSeconds only is updated
 866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          else
 867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             Pointer to Time structure with Hours, Minutes and Seconds fields returned
 868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** *               with input format (BIN or BCD), also SubSeconds field returning the
 869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** *               RTC_SSR register content and SecondFraction field the Synchronous pre-scaler
 870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** *               factor to be used for second fraction ratio computation.
 871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  Format Format of sTime->Hours, sTime->Minutes and sTime->Seconds.
 872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          if Binary mode is RTC_BINARY_ONLY, this parameter is not used
 873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          else this parameter can be one of the following values:
 874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN: Binary format
 875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD: BCD format
 876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
 877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_GetTime(RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef *sTime, uint32_t Format)
 879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tmpreg;
 881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   UNUSED(hrtc);
 883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Get subseconds structure field from the corresponding register*/
 884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sTime->SubSeconds = READ_REG(RTC->SSR);
 885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (READ_BIT(RTC->ICSR, RTC_ICSR_BIN) != RTC_BINARY_ONLY)
 887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Check the parameters */
 889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_FORMAT(Format));
 890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Get SecondFraction structure field from the corresponding register field*/
 892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sTime->SecondFraction = (uint32_t)(READ_REG(RTC->PRER) & RTC_PRER_PREDIV_S);
 893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Get the TR register */
 895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     tmpreg = (uint32_t)(READ_REG(RTC->TR) & RTC_TR_RESERVED_MASK);
 896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Fill the structure fields with the read parameters */
 898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sTime->Hours = (uint8_t)((tmpreg & (RTC_TR_HT | RTC_TR_HU)) >> RTC_TR_HU_Pos);
 899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sTime->Minutes = (uint8_t)((tmpreg & (RTC_TR_MNT | RTC_TR_MNU)) >> RTC_TR_MNU_Pos);
 900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sTime->Seconds = (uint8_t)((tmpreg & (RTC_TR_ST | RTC_TR_SU)) >> RTC_TR_SU_Pos);
 901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sTime->TimeFormat = (uint8_t)((tmpreg & (RTC_TR_PM)) >> RTC_TR_PM_Pos);
 902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Check the input parameters format */
 904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (Format == RTC_FORMAT_BIN)
 905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       /* Convert the time structure parameters to Binary format */
 907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       sTime->Hours = (uint8_t)RTC_Bcd2ToByte(sTime->Hours);
 908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       sTime->Minutes = (uint8_t)RTC_Bcd2ToByte(sTime->Minutes);
 909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       sTime->Seconds = (uint8_t)RTC_Bcd2ToByte(sTime->Seconds);
ARM GAS  /tmp/ccettC69.s 			page 18


 910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return HAL_OK;
 914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
 917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Set RTC current date.
 918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
 919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  sDate Pointer to date structure
 920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  Format Format of sDate->Year, sDate->Month and sDate->Weekday.
 921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN: Binary format
 923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD: BCD format
 924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
 925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetDate(RTC_HandleTypeDef *hrtc, RTC_DateTypeDef *sDate, uint32_t Format)
 927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t datetmpreg;
 929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   HAL_StatusTypeDef status;
 930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check the parameters */
 932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process Locked */
 935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
 936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if ((Format == RTC_FORMAT_BIN) && ((sDate->Month & 0x10U) == 0x10U))
 940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sDate->Month = (uint8_t)((sDate->Month & (uint8_t)~(0x10U)) + (uint8_t)0x0AU);
 942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_WEEKDAY(sDate->WeekDay));
 945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (Format == RTC_FORMAT_BIN)
 947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_YEAR(sDate->Year));
 949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_MONTH(sDate->Month));
 950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_DATE(sDate->Date));
 951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     datetmpreg = (((uint32_t)RTC_ByteToBcd2(sDate->Year) << RTC_DR_YU_Pos) | \
 953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   ((uint32_t)RTC_ByteToBcd2(sDate->Month) << RTC_DR_MU_Pos) | \
 954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   ((uint32_t)RTC_ByteToBcd2(sDate->Date) << RTC_DR_DU_Pos) | \
 955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   ((uint32_t)sDate->WeekDay << RTC_DR_WDU_Pos));
 956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else
 958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_YEAR(RTC_Bcd2ToByte(sDate->Year)));
 960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_MONTH(RTC_Bcd2ToByte(sDate->Month)));
 961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_DATE(RTC_Bcd2ToByte(sDate->Date)));
 962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     datetmpreg = ((((uint32_t)sDate->Year) << RTC_DR_YU_Pos) | \
 964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   (((uint32_t)sDate->Month) << RTC_DR_MU_Pos) | \
 965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   (((uint32_t)sDate->Date) << RTC_DR_DU_Pos) | \
 966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   (((uint32_t)sDate->WeekDay) << RTC_DR_WDU_Pos));
ARM GAS  /tmp/ccettC69.s 			page 19


 967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
 970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Enter Initialization mode */
 973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   status = RTC_EnterInitMode(hrtc);
 974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (status == HAL_OK)
 975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Set the RTC_DR register */
 977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     WRITE_REG(RTC->DR, (uint32_t)(datetmpreg & RTC_DR_RESERVED_MASK));
 978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Exit Initialization mode */
 980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     status = RTC_ExitInitMode(hrtc);
 981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Enable the write protection for RTC registers */
 984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (status == HAL_OK)
 987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_READY ;
 989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process Unlocked */
 992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
 993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return status;
 995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
 998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Get RTC current date.
 999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @note  You must call HAL_RTC_GetDate() after HAL_RTC_GetTime() to unlock the values
1000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *        in the higher-order calendar shadow registers to ensure consistency between the time and
1001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *        Reading RTC current time locks the values in calendar shadow registers until Current dat
1002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
1003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  sDate Pointer to Date structure
1004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  Format Format of sDate->Year, sDate->Month and sDate->Weekday.
1005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN: Binary format
1007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD: BCD format
1008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
1009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
1010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_GetDate(RTC_HandleTypeDef *hrtc, RTC_DateTypeDef *sDate, uint32_t Format)
1011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
1012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t datetmpreg;
1013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   UNUSED(hrtc);
1015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check the parameters */
1016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
1017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Get the DR register */
1019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   datetmpreg = (uint32_t)(READ_REG(RTC->DR) & RTC_DR_RESERVED_MASK);
1020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Fill the structure fields with the read parameters */
1022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sDate->Year = (uint8_t)((datetmpreg & (RTC_DR_YT | RTC_DR_YU)) >> RTC_DR_YU_Pos);
1023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sDate->Month = (uint8_t)((datetmpreg & (RTC_DR_MT | RTC_DR_MU)) >> RTC_DR_MU_Pos);
ARM GAS  /tmp/ccettC69.s 			page 20


1024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sDate->Date = (uint8_t)((datetmpreg & (RTC_DR_DT | RTC_DR_DU)) >> RTC_DR_DU_Pos);
1025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sDate->WeekDay = (uint8_t)((datetmpreg & (RTC_DR_WDU)) >> RTC_DR_WDU_Pos);
1026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check the input parameters format */
1028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (Format == RTC_FORMAT_BIN)
1029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Convert the date structure parameters to Binary format */
1031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sDate->Year = (uint8_t)RTC_Bcd2ToByte(sDate->Year);
1032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sDate->Month = (uint8_t)RTC_Bcd2ToByte(sDate->Month);
1033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sDate->Date = (uint8_t)RTC_Bcd2ToByte(sDate->Date);
1034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return HAL_OK;
1036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
1037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
1039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @}
1040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
1041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /** @addtogroup RTC_Exported_Functions_Group3
1043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  *  @brief   RTC Alarm functions
1044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  *
1045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** @verbatim
1046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  ===============================================================================
1047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                  ##### RTC Alarm functions #####
1048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  ===============================================================================
1049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  [..] This section provides functions allowing to configure Alarm feature
1051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** @endverbatim
1053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @{
1054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
1055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
1056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Set the specified RTC Alarm.
1057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
1058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  sAlarm Pointer to Alarm structure
1059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          if Binary mode is RTC_BINARY_ONLY, 3 fields only are used
1060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             sAlarm->AlarmTime.SubSeconds
1061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             sAlarm->AlarmSubSecondMask
1062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             sAlarm->BinaryAutoClr
1063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  Format of the entered parameters.
1064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          if Binary mode is RTC_BINARY_ONLY, this parameter is not used
1065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          else this parameter can be one of the following values
1066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BIN: Binary format
1067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BCD: BCD format
1068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
1069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
1070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetAlarm(RTC_HandleTypeDef *hrtc, RTC_AlarmTypeDef *sAlarm, uint32_t Form
1071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
1072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tmpreg = 0, binaryMode;
1073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
1075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
1076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #ifdef  USE_FULL_ASSERT
1078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check the parameters depending of the Binary mode (32-bit free-running counter configuration).
1079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (READ_BIT(RTC->ICSR, RTC_ICSR_BIN) == RTC_BINARY_NONE)
1080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
ARM GAS  /tmp/ccettC69.s 			page 21


1081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_FORMAT(Format));
1082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ALARM(sAlarm->Alarm));
1083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ALARM_MASK(sAlarm->AlarmMask));
1084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ALARM_DATE_WEEKDAY_SEL(sAlarm->AlarmDateWeekDaySel));
1085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ALARM_SUB_SECOND_VALUE(sAlarm->AlarmTime.SubSeconds));
1086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ALARM_SUB_SECOND_MASK(sAlarm->AlarmSubSecondMask));
1087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else if (READ_BIT(RTC->ICSR, RTC_ICSR_BIN) == RTC_BINARY_ONLY)
1089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ALARM_SUB_SECOND_BINARY_MASK(sAlarm->AlarmSubSecondMask));
1091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ALARMSUBSECONDBIN_AUTOCLR(sAlarm->BinaryAutoClr));
1092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else /* RTC_BINARY_MIX */
1094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_FORMAT(Format));
1096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ALARM(sAlarm->Alarm));
1097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ALARM_MASK(sAlarm->AlarmMask));
1098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ALARM_DATE_WEEKDAY_SEL(sAlarm->AlarmDateWeekDaySel));
1099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* In Binary Mix Mode, the RTC can not generate an alarm on a match involving all calendar item
1100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param((sAlarm->AlarmSubSecondMask >> RTC_ALRMASSR_MASKSS_Pos) <= (8U + (READ_BIT(RTC->IC
1101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
1103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Get Binary mode (32-bit free-running counter configuration) */
1105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   binaryMode = READ_BIT(RTC->ICSR, RTC_ICSR_BIN);
1106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (binaryMode != RTC_BINARY_ONLY)
1108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (Format == RTC_FORMAT_BIN)
1110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if (READ_BIT(RTC->CR, RTC_CR_FMT) != 0U)
1112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_HOUR12(sAlarm->AlarmTime.Hours));
1114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_HOURFORMAT12(sAlarm->AlarmTime.TimeFormat));
1115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       else
1117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         sAlarm->AlarmTime.TimeFormat = 0x00U;
1119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
1120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_MINUTES(sAlarm->AlarmTime.Minutes));
1122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_SECONDS(sAlarm->AlarmTime.Seconds));
1123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if (sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
1125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(sAlarm->AlarmDateWeekDay));
1127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       else
1129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(sAlarm->AlarmDateWeekDay));
1131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       tmpreg = (((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Hours) << RTC_ALRMAR_HU_Pos) | \
1133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
1134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds) << RTC_ALRMAR_SU_Pos) | \
1135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << RTC_ALRMAR_PM_Pos) | \
1136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << RTC_ALRMAR_DU_Pos) | \
1137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
ARM GAS  /tmp/ccettC69.s 			page 22


1138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)sAlarm->AlarmMask));
1139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     else /* format BCD */
1141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if (READ_BIT(RTC->CR, RTC_CR_FMT) != 0U)
1143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_HOUR12(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
1145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_HOURFORMAT12(sAlarm->AlarmTime.TimeFormat));
1146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       else
1148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         sAlarm->AlarmTime.TimeFormat = 0x00U;
1150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
1151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)));
1154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds)));
1155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #ifdef  USE_FULL_ASSERT
1157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if (sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
1158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay)));
1160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       else
1162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay)));
1164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* USE_FULL_ASSERT */
1167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       tmpreg = (((uint32_t)(sAlarm->AlarmTime.Hours) << RTC_ALRMAR_HU_Pos) | \
1168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
1169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)(sAlarm->AlarmTime.Seconds) << RTC_ALRMAR_SU_Pos) | \
1170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << RTC_ALRMAR_PM_Pos) | \
1171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)(sAlarm->AlarmDateWeekDay) << RTC_ALRMAR_DU_Pos) | \
1172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
1173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)sAlarm->AlarmMask));
1174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
1178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
1179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Configure the Alarm register */
1181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (sAlarm->Alarm == RTC_ALARM_A)
1182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Disable the Alarm A interrupt */
1184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* In case of interrupt mode is used, the interrupt source must disabled */
1185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     CLEAR_BIT(RTC->CR, (RTC_CR_ALRAE | RTC_CR_ALRAIE));
1186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Clear flag alarm A */
1188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     WRITE_REG(RTC->SCR, RTC_SCR_CALRAF);
1189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (binaryMode == RTC_BINARY_ONLY)
1191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       WRITE_REG(RTC->ALRMASSR, sAlarm->AlarmSubSecondMask | sAlarm->BinaryAutoClr);
1193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     else
ARM GAS  /tmp/ccettC69.s 			page 23


1195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       WRITE_REG(RTC->ALRMAR, tmpreg);
1197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       WRITE_REG(RTC->ALRMASSR, sAlarm->AlarmSubSecondMask);
1198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     WRITE_REG(RTC->ALRABINR, sAlarm->AlarmTime.SubSeconds);
1201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
1203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     SET_BIT(RTC->CR, RTC_CR_ALRAE);
1204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else
1206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Disable the Alarm B interrupt */
1208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* In case of interrupt mode is used, the interrupt source must disabled */
1209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     CLEAR_BIT(RTC->CR, (RTC_CR_ALRBE | RTC_CR_ALRBIE));
1210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Clear flag alarm B */
1212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     WRITE_REG(RTC->SCR, RTC_SCR_CALRBF);
1213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (binaryMode == RTC_BINARY_ONLY)
1215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       WRITE_REG(RTC->ALRMBSSR, sAlarm->AlarmSubSecondMask | sAlarm->BinaryAutoClr);
1217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     else
1219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       WRITE_REG(RTC->ALRMBR, tmpreg);
1221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       WRITE_REG(RTC->ALRMBSSR,  sAlarm->AlarmSubSecondMask);
1222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     WRITE_REG(RTC->ALRBBINR, sAlarm->AlarmTime.SubSeconds);
1225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
1227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     SET_BIT(RTC->CR, RTC_CR_ALRBE);
1228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Enable the write protection for RTC registers */
1231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Change RTC state */
1234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY;
1235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process Unlocked */
1237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
1238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return HAL_OK;
1240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
1241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
1243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Set the specified RTC Alarm with Interrupt.
1244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
1245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  sAlarm Pointer to Alarm structure
1246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          if Binary mode is RTC_BINARY_ONLY, 3 fields only are used
1247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             sAlarm->AlarmTime.SubSeconds
1248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             sAlarm->AlarmSubSecondMask
1249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             sAlarm->BinaryAutoClr
1250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  Format Specifies the format of the entered parameters.
1251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          if Binary mode is RTC_BINARY_ONLY, this parameter is not used
ARM GAS  /tmp/ccettC69.s 			page 24


1252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          else this parameter can be one of the following values
1253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BIN: Binary format
1254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BCD: BCD format
1255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
1256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
1257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetAlarm_IT(RTC_HandleTypeDef *hrtc, RTC_AlarmTypeDef *sAlarm, uint32_t F
1258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
1259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tmpreg = 0, binaryMode;
1260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process Locked */
1262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
1263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
1264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #ifdef  USE_FULL_ASSERT
1266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check the parameters depending of the Binary mode (32-bit free-running counter configuration).
1267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (READ_BIT(RTC->ICSR, RTC_ICSR_BIN) == RTC_BINARY_NONE)
1268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_FORMAT(Format));
1270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ALARM(sAlarm->Alarm));
1271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ALARM_MASK(sAlarm->AlarmMask));
1272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ALARM_DATE_WEEKDAY_SEL(sAlarm->AlarmDateWeekDaySel));
1273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ALARM_SUB_SECOND_VALUE(sAlarm->AlarmTime.SubSeconds));
1274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ALARM_SUB_SECOND_MASK(sAlarm->AlarmSubSecondMask));
1275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else if (READ_BIT(RTC->ICSR, RTC_ICSR_BIN) == RTC_BINARY_ONLY)
1277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ALARM_SUB_SECOND_BINARY_MASK(sAlarm->AlarmSubSecondMask));
1279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ALARMSUBSECONDBIN_AUTOCLR(sAlarm->BinaryAutoClr));
1280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else /* RTC_BINARY_MIX */
1282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_FORMAT(Format));
1284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ALARM(sAlarm->Alarm));
1285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ALARM_MASK(sAlarm->AlarmMask));
1286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ALARM_DATE_WEEKDAY_SEL(sAlarm->AlarmDateWeekDaySel));
1287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* In Binary Mix Mode, the RTC can not generate an alarm on a match involving all calendar item
1288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param((sAlarm->AlarmSubSecondMask >> RTC_ALRMASSR_MASKSS_Pos) <= (8U + (READ_BIT(RTC->IC
1289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
1291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Get Binary mode (32-bit free-running counter configuration) */
1293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   binaryMode = READ_BIT(RTC->ICSR, RTC_ICSR_BIN);
1294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (binaryMode != RTC_BINARY_ONLY)
1296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (Format == RTC_FORMAT_BIN)
1298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if (READ_BIT(RTC->CR, RTC_CR_FMT) != 0U)
1300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_HOUR12(sAlarm->AlarmTime.Hours));
1302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_HOURFORMAT12(sAlarm->AlarmTime.TimeFormat));
1303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       else
1305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         sAlarm->AlarmTime.TimeFormat = 0x00U;
1307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
1308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
ARM GAS  /tmp/ccettC69.s 			page 25


1309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_MINUTES(sAlarm->AlarmTime.Minutes));
1310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_SECONDS(sAlarm->AlarmTime.Seconds));
1311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if (sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
1313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(sAlarm->AlarmDateWeekDay));
1315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       else
1317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(sAlarm->AlarmDateWeekDay));
1319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       tmpreg = (((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Hours) << RTC_ALRMAR_HU_Pos) | \
1321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
1322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds) << RTC_ALRMAR_SU_Pos) | \
1323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << RTC_ALRMAR_PM_Pos) | \
1324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << RTC_ALRMAR_DU_Pos) | \
1325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
1326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)sAlarm->AlarmMask));
1327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     else /* Format BCD */
1329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if (READ_BIT(RTC->CR, RTC_CR_FMT) != 0U)
1331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_HOUR12(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
1333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_HOURFORMAT12(sAlarm->AlarmTime.TimeFormat));
1334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       else
1336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         sAlarm->AlarmTime.TimeFormat = 0x00U;
1338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
1339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)));
1342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds)));
1343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #ifdef  USE_FULL_ASSERT
1345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if (sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
1346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay)));
1348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       else
1350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay)));
1352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* USE_FULL_ASSERT */
1355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       tmpreg = (((uint32_t)(sAlarm->AlarmTime.Hours) << RTC_ALRMAR_HU_Pos) | \
1356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
1357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)(sAlarm->AlarmTime.Seconds) << RTC_ALRMAR_SU_Pos) | \
1358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << RTC_ALRMAR_PM_Pos) | \
1359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)(sAlarm->AlarmDateWeekDay) << RTC_ALRMAR_DU_Pos) | \
1360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
1361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)sAlarm->AlarmMask));
1362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
ARM GAS  /tmp/ccettC69.s 			page 26


1366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
1367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
1368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Configure the Alarm register */
1370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (sAlarm->Alarm == RTC_ALARM_A)
1371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Disable the Alarm A interrupt */
1373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     CLEAR_BIT(RTC->CR, RTC_CR_ALRAE | RTC_CR_ALRAIE);
1374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Clear flag alarm A */
1375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     WRITE_REG(RTC->SCR, RTC_SCR_CALRAF);
1376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (binaryMode == RTC_BINARY_ONLY)
1378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       RTC->ALRMASSR = sAlarm->AlarmSubSecondMask | sAlarm->BinaryAutoClr;
1380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     else
1382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       WRITE_REG(RTC->ALRMAR, tmpreg);
1384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       WRITE_REG(RTC->ALRMASSR, sAlarm->AlarmSubSecondMask);
1385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     WRITE_REG(RTC->ALRABINR, sAlarm->AlarmTime.SubSeconds);
1388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm interrupt */
1390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     SET_BIT(RTC->CR, RTC_CR_ALRAE | RTC_CR_ALRAIE);
1391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else
1393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Disable the Alarm B interrupt */
1395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     CLEAR_BIT(RTC->CR, RTC_CR_ALRBE | RTC_CR_ALRBIE);
1396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Clear flag alarm B */
1397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     WRITE_REG(RTC->SCR, RTC_SCR_CALRBF);
1398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (binaryMode == RTC_BINARY_ONLY)
1400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       WRITE_REG(RTC->ALRMBSSR, sAlarm->AlarmSubSecondMask | sAlarm->BinaryAutoClr);
1402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     else
1404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       WRITE_REG(RTC->ALRMBR, tmpreg);
1406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       WRITE_REG(RTC->ALRMBSSR, sAlarm->AlarmSubSecondMask);
1407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     WRITE_REG(RTC->ALRBBINR, sAlarm->AlarmTime.SubSeconds);
1410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm interrupt */
1412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     SET_BIT(RTC->CR, RTC_CR_ALRBE | RTC_CR_ALRBIE);
1413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* RTC Alarm Interrupt Configuration: EXTI configuration */
1416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_ALARM_EXTI_ENABLE_IT();
1417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_ALARM_EXTI_ENABLE_RISING_EDGE();
1418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Enable the write protection for RTC registers */
1420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY;
ARM GAS  /tmp/ccettC69.s 			page 27


1423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process Unlocked */
1425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
1426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return HAL_OK;
1428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
1429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #else /* #if defined (STM32L4P5xx) || defined (STM32L4Q5xx) */
1431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
1433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Set RTC current time.
1434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
1435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  sTime Pointer to Time structure
1436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  Format Specifies the format of the entered parameters.
1437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN: Binary data format
1439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD: BCD data format
1440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
1441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
1442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetTime(RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef *sTime, uint32_t Format)
1443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
1444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tmpreg;
1445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   HAL_StatusTypeDef status;
1446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check the parameters */
1448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
1449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_DAYLIGHT_SAVING(sTime->DayLightSaving));
1450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_STORE_OPERATION(sTime->StoreOperation));
1451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process Locked */
1453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
1454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
1456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
1458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
1459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Enter Initialization mode */
1461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   status = RTC_EnterInitMode(hrtc);
1462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (status == HAL_OK)
1463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (Format == RTC_FORMAT_BIN)
1465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if ((hrtc->Instance->CR & RTC_CR_FMT) != 0U)
1467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_HOUR12(sTime->Hours));
1469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_HOURFORMAT12(sTime->TimeFormat));
1470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       else
1472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         sTime->TimeFormat = 0x00U;
1474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_HOUR24(sTime->Hours));
1475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_MINUTES(sTime->Minutes));
1477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_SECONDS(sTime->Seconds));
1478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       tmpreg = (uint32_t)(((uint32_t)RTC_ByteToBcd2(sTime->Hours) << RTC_TR_HU_Pos) | \
ARM GAS  /tmp/ccettC69.s 			page 28


1480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                           ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << RTC_TR_MNU_Pos) | \
1481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                           ((uint32_t)RTC_ByteToBcd2(sTime->Seconds) << RTC_TR_SU_Pos) | \
1482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                           (((uint32_t)sTime->TimeFormat) << RTC_TR_PM_Pos));
1483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     else
1485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if ((hrtc->Instance->CR & RTC_CR_FMT) != 0U)
1487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_HOUR12(RTC_Bcd2ToByte(sTime->Hours)));
1489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_HOURFORMAT12(sTime->TimeFormat));
1490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       else
1492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         sTime->TimeFormat = 0x00U;
1494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sTime->Hours)));
1495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(sTime->Minutes)));
1497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sTime->Seconds)));
1498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       tmpreg = (((uint32_t)(sTime->Hours) << RTC_TR_HU_Pos) | \
1499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)(sTime->Minutes) << RTC_TR_MNU_Pos) | \
1500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)(sTime->Seconds) << RTC_TR_SU_Pos) | \
1501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)(sTime->TimeFormat) << RTC_TR_PM_Pos));
1502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Set the RTC_TR register */
1505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->Instance->TR = (uint32_t)(tmpreg & RTC_TR_RESERVED_MASK);
1506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Clear the bits to be configured */
1508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->Instance->CR &= ((uint32_t)~RTC_CR_BKP);
1509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the RTC_CR register */
1511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->Instance->CR |= (uint32_t)(sTime->DayLightSaving | sTime->StoreOperation);
1512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Exit Initialization mode */
1514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     status = RTC_ExitInitMode(hrtc);
1515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Enable the write protection for RTC registers */
1518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (status == HAL_OK)
1521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_READY;
1523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process Unlocked */
1526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
1527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return status;
1529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
1530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
1532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Get RTC current time.
1533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @note  You can use SubSeconds and SecondFraction (sTime structure fields returned) to convert S
1534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *        value in second fraction ratio with time unit following generic formula:
1535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *        Second fraction ratio * time_unit= [(SecondFraction-SubSeconds)/(SecondFraction+1)] * ti
1536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *        This conversion can be performed only if no shift operation is pending (ie. SHFP=0) when
ARM GAS  /tmp/ccettC69.s 			page 29


1537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @note  You must call HAL_RTC_GetDate() after HAL_RTC_GetTime() to unlock the values
1538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *        in the higher-order calendar shadow registers to ensure consistency between the time and
1539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *        Reading RTC current time locks the values in calendar shadow registers until Current dat
1540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *        to ensure consistency between the time and date values.
1541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
1542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  sTime Pointer to Time structure with Hours, Minutes and Seconds fields returned
1543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *                with input format (BIN or BCD), also SubSeconds field returning the
1544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *                RTC_SSR register content and SecondFraction field the Synchronous pre-scaler
1545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *                factor to be used for second fraction ratio computation.
1546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  Format Specifies the format of the entered parameters.
1547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN: Binary data format
1549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD: BCD data format
1550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
1551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
1552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_GetTime(RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef *sTime, uint32_t Format)
1553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
1554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tmpreg;
1555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check the parameters */
1557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
1558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Get subseconds structure field from the corresponding register*/
1560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sTime->SubSeconds = (uint32_t)(hrtc->Instance->SSR);
1561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Get SecondFraction structure field from the corresponding register field*/
1563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sTime->SecondFraction = (uint32_t)(hrtc->Instance->PRER & RTC_PRER_PREDIV_S);
1564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Get the TR register */
1566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   tmpreg = (uint32_t)(hrtc->Instance->TR & RTC_TR_RESERVED_MASK);
1567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Fill the structure fields with the read parameters */
1569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sTime->Hours = (uint8_t)((tmpreg & (RTC_TR_HT | RTC_TR_HU)) >> RTC_TR_HU_Pos);
1570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sTime->Minutes = (uint8_t)((tmpreg & (RTC_TR_MNT | RTC_TR_MNU)) >> RTC_TR_MNU_Pos);
1571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sTime->Seconds = (uint8_t)((tmpreg & (RTC_TR_ST | RTC_TR_SU)) >> RTC_TR_SU_Pos);
1572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sTime->TimeFormat = (uint8_t)((tmpreg & (RTC_TR_PM)) >> RTC_TR_PM_Pos);
1573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check the input parameters format */
1575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (Format == RTC_FORMAT_BIN)
1576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Convert the time structure parameters to Binary format */
1578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sTime->Hours = (uint8_t)RTC_Bcd2ToByte(sTime->Hours);
1579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sTime->Minutes = (uint8_t)RTC_Bcd2ToByte(sTime->Minutes);
1580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sTime->Seconds = (uint8_t)RTC_Bcd2ToByte(sTime->Seconds);
1581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return HAL_OK;
1584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
1585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
1587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Set RTC current date.
1588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
1589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  sDate Pointer to date structure
1590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  Format specifies the format of the entered parameters.
1591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN: Binary data format
1593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD: BCD data format
ARM GAS  /tmp/ccettC69.s 			page 30


1594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
1595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
1596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetDate(RTC_HandleTypeDef *hrtc, RTC_DateTypeDef *sDate, uint32_t Format)
1597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
1598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t datetmpreg;
1599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   HAL_StatusTypeDef status;
1600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check the parameters */
1602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
1603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process Locked */
1605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
1606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
1608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if ((Format == RTC_FORMAT_BIN) && ((sDate->Month & 0x10U) == 0x10U))
1610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sDate->Month = (uint8_t)((sDate->Month & (uint8_t)~(0x10U)) + (uint8_t)0x0AU);
1612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_WEEKDAY(sDate->WeekDay));
1615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (Format == RTC_FORMAT_BIN)
1617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_YEAR(sDate->Year));
1619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_MONTH(sDate->Month));
1620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_DATE(sDate->Date));
1621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     datetmpreg = (((uint32_t)RTC_ByteToBcd2(sDate->Year) << RTC_DR_YU_Pos) | \
1623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   ((uint32_t)RTC_ByteToBcd2(sDate->Month) << RTC_DR_MU_Pos) | \
1624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   ((uint32_t)RTC_ByteToBcd2(sDate->Date) << RTC_DR_DU_Pos) | \
1625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   ((uint32_t)sDate->WeekDay << RTC_DR_WDU_Pos));
1626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else
1628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_YEAR(RTC_Bcd2ToByte(sDate->Year)));
1630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_MONTH(RTC_Bcd2ToByte(sDate->Month)));
1631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_DATE(RTC_Bcd2ToByte(sDate->Date)));
1632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     datetmpreg = ((((uint32_t)sDate->Year) << RTC_DR_YU_Pos) | \
1634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   (((uint32_t)sDate->Month) << RTC_DR_MU_Pos) | \
1635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   (((uint32_t)sDate->Date) << RTC_DR_DU_Pos) | \
1636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   (((uint32_t)sDate->WeekDay) << RTC_DR_WDU_Pos));
1637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
1640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
1641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Enter Initialization mode */
1643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   status = RTC_EnterInitMode(hrtc);
1644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (status == HAL_OK)
1645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Set the RTC_DR register */
1647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->Instance->DR = (uint32_t)(datetmpreg & RTC_DR_RESERVED_MASK);
1648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Exit Initialization mode */
1650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     status = RTC_ExitInitMode(hrtc);
ARM GAS  /tmp/ccettC69.s 			page 31


1651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Enable the write protection for RTC registers */
1654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (status == HAL_OK)
1657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_READY ;
1659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process Unlocked */
1662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
1663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return status;
1665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
1666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
1668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Get RTC current date.
1669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @note  You must call HAL_RTC_GetDate() after HAL_RTC_GetTime() to unlock the values
1670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *        in the higher-order calendar shadow registers to ensure consistency between the time and
1671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *        Reading RTC current time locks the values in calendar shadow registers until Current dat
1672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
1673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  sDate Pointer to Date structure
1674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  Format Specifies the format of the entered parameters.
1675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN:  Binary data format
1677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD:  BCD data format
1678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
1679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
1680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_GetDate(RTC_HandleTypeDef *hrtc, RTC_DateTypeDef *sDate, uint32_t Format)
1681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
1682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t datetmpreg;
1683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check the parameters */
1685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
1686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Get the DR register */
1688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   datetmpreg = (uint32_t)(hrtc->Instance->DR & RTC_DR_RESERVED_MASK);
1689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Fill the structure fields with the read parameters */
1691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sDate->Year = (uint8_t)((datetmpreg & (RTC_DR_YT | RTC_DR_YU)) >> RTC_DR_YU_Pos);
1692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sDate->Month = (uint8_t)((datetmpreg & (RTC_DR_MT | RTC_DR_MU)) >> RTC_DR_MU_Pos);
1693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sDate->Date = (uint8_t)((datetmpreg & (RTC_DR_DT | RTC_DR_DU)) >> RTC_DR_DU_Pos);
1694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sDate->WeekDay = (uint8_t)((datetmpreg & (RTC_DR_WDU)) >> RTC_DR_WDU_Pos);
1695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check the input parameters format */
1697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (Format == RTC_FORMAT_BIN)
1698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Convert the date structure parameters to Binary format */
1700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sDate->Year = (uint8_t)RTC_Bcd2ToByte(sDate->Year);
1701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sDate->Month = (uint8_t)RTC_Bcd2ToByte(sDate->Month);
1702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sDate->Date = (uint8_t)RTC_Bcd2ToByte(sDate->Date);
1703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return HAL_OK;
1705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
1706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
ARM GAS  /tmp/ccettC69.s 			page 32


1708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @}
1709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
1710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /** @addtogroup RTC_Exported_Functions_Group3
1712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  *  @brief   RTC Alarm functions
1713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  *
1714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** @verbatim
1715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  ===============================================================================
1716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                  ##### RTC Alarm functions #####
1717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  ===============================================================================
1718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  [..] This section provides functions allowing to configure Alarm feature
1720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** @endverbatim
1722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @{
1723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
1724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
1725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Set the specified RTC Alarm.
1726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
1727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  sAlarm Pointer to Alarm structure
1728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  Format Specifies the format of the entered parameters.
1729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BIN: Binary data format
1731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BCD: BCD data format
1732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
1733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
1734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetAlarm(RTC_HandleTypeDef *hrtc, RTC_AlarmTypeDef *sAlarm, uint32_t Form
1735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
1736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tmpreg, subsecondtmpreg;
1737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check the parameters */
1739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
1740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(sAlarm->Alarm));
1741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_MASK(sAlarm->AlarmMask));
1742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_DATE_WEEKDAY_SEL(sAlarm->AlarmDateWeekDaySel));
1743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_VALUE(sAlarm->AlarmTime.SubSeconds));
1744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_MASK(sAlarm->AlarmSubSecondMask));
1745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process Locked */
1747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
1748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
1750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (Format == RTC_FORMAT_BIN)
1752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if ((hrtc->Instance->CR & RTC_CR_FMT) != 0U)
1754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR12(sAlarm->AlarmTime.Hours));
1756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_HOURFORMAT12(sAlarm->AlarmTime.TimeFormat));
1757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     else
1759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       sAlarm->AlarmTime.TimeFormat = 0x00U;
1761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
1762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(sAlarm->AlarmTime.Minutes));
1764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(sAlarm->AlarmTime.Seconds));
ARM GAS  /tmp/ccettC69.s 			page 33


1765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
1767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(sAlarm->AlarmDateWeekDay));
1769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     else
1771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(sAlarm->AlarmDateWeekDay));
1773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     tmpreg = (((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Hours) << RTC_ALRMAR_HU_Pos) | \
1775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
1776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds) << RTC_ALRMAR_SU_Pos) | \
1777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << RTC_ALRMAR_PM_Pos) | \
1778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << RTC_ALRMAR_DU_Pos) | \
1779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
1780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmMask));
1781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else
1783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if ((hrtc->Instance->CR & RTC_CR_FMT) != 0U)
1785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR12(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
1787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_HOURFORMAT12(sAlarm->AlarmTime.TimeFormat));
1788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     else
1790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       sAlarm->AlarmTime.TimeFormat = 0x00U;
1792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
1793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)));
1796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds)));
1797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #ifdef  USE_FULL_ASSERT
1799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
1800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay)));
1802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     else
1804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay)));
1806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* USE_FULL_ASSERT */
1809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     tmpreg = (((uint32_t)(sAlarm->AlarmTime.Hours) << RTC_ALRMAR_HU_Pos) | \
1810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
1811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Seconds) << RTC_ALRMAR_SU_Pos) | \
1812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << RTC_ALRMAR_PM_Pos) | \
1813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmDateWeekDay) << RTC_ALRMAR_DU_Pos) | \
1814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
1815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmMask));
1816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Configure the Alarm A or Alarm B Sub Second registers */
1819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   subsecondtmpreg = (uint32_t)((uint32_t)(sAlarm->AlarmTime.SubSeconds) | (uint32_t)(sAlarm->AlarmS
1820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
ARM GAS  /tmp/ccettC69.s 			page 34


1822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
1823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Configure the Alarm register */
1825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (sAlarm->Alarm == RTC_ALARM_A)
1826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Disable the Alarm A interrupt */
1828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARMA_DISABLE(hrtc);
1829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Clear flag alarm A */
1830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRAF);
1831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* In case of interrupt mode is used, the interrupt source must disabled */
1832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARM_DISABLE_IT(hrtc, RTC_IT_ALRA);
1833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined (RTC_FLAG_ALRAWF)
1835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     uint32_t tickstart = HAL_GetTick();
1836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Wait till RTC ALRAWF flag is set and if Time out is reached exit */
1837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     while (__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAWF) == 0U)
1838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
1840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
1842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
1845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Process Unlocked */
1847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
1848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         return HAL_TIMEOUT;
1850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
1853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->Instance->ALRMAR = (uint32_t)tmpreg;
1855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm A Sub Second register */
1856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->Instance->ALRMASSR = subsecondtmpreg;
1857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
1858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARMA_ENABLE(hrtc);
1859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else
1861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Disable the Alarm B interrupt */
1863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARMB_DISABLE(hrtc);
1864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Clear flag alarm B */
1865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRBF);
1866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* In case of interrupt mode is used, the interrupt source must disabled */
1867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARM_DISABLE_IT(hrtc, RTC_IT_ALRB);
1868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined (RTC_FLAG_ALRBWF)
1870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     uint32_t tickstart = HAL_GetTick();
1871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Wait till RTC ALRBWF flag is set and if Time out is reached exit */
1872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     while (__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRBWF) == 0U)
1873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
1875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
1877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
ARM GAS  /tmp/ccettC69.s 			page 35


1879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
1880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Process Unlocked */
1882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
1883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         return HAL_TIMEOUT;
1885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
1888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->Instance->ALRMBR = (uint32_t)tmpreg;
1890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm B Sub Second register */
1891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->Instance->ALRMBSSR = subsecondtmpreg;
1892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
1893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARMB_ENABLE(hrtc);
1894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Enable the write protection for RTC registers */
1897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Change RTC state */
1900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY;
1901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process Unlocked */
1903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
1904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return HAL_OK;
1906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
1907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
1909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Set the specified RTC Alarm with Interrupt.
1910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @note   The Alarm register can only be written when the corresponding Alarm
1911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *         is disabled (Use the HAL_RTC_DeactivateAlarm()).
1912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @note   The HAL_RTC_SetTime() must be called before enabling the Alarm feature.
1913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
1914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  sAlarm Pointer to Alarm structure
1915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  Format Specifies the format of the entered parameters.
1916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BIN: Binary data format
1918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BCD: BCD data format
1919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
1920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
1921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetAlarm_IT(RTC_HandleTypeDef *hrtc, RTC_AlarmTypeDef *sAlarm, uint32_t F
1922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
1923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tmpreg, subsecondtmpreg;
1924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check the parameters */
1926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
1927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(sAlarm->Alarm));
1928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_MASK(sAlarm->AlarmMask));
1929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_DATE_WEEKDAY_SEL(sAlarm->AlarmDateWeekDaySel));
1930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_VALUE(sAlarm->AlarmTime.SubSeconds));
1931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_MASK(sAlarm->AlarmSubSecondMask));
1932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process Locked */
1934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
1935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
ARM GAS  /tmp/ccettC69.s 			page 36


1936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
1937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (Format == RTC_FORMAT_BIN)
1939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if ((hrtc->Instance->CR & RTC_CR_FMT) != 0U)
1941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR12(sAlarm->AlarmTime.Hours));
1943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_HOURFORMAT12(sAlarm->AlarmTime.TimeFormat));
1944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     else
1946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       sAlarm->AlarmTime.TimeFormat = 0x00U;
1948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
1949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(sAlarm->AlarmTime.Minutes));
1951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(sAlarm->AlarmTime.Seconds));
1952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
1954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(sAlarm->AlarmDateWeekDay));
1956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     else
1958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(sAlarm->AlarmDateWeekDay));
1960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     tmpreg = (((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Hours) << RTC_ALRMAR_HU_Pos) | \
1963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
1964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds) << RTC_ALRMAR_SU_Pos) | \
1965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << RTC_ALRMAR_PM_Pos) | \
1966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << RTC_ALRMAR_DU_Pos) | \
1967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
1968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmMask));
1969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else
1971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if ((hrtc->Instance->CR & RTC_CR_FMT) != 0U)
1973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR12(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
1975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_HOURFORMAT12(sAlarm->AlarmTime.TimeFormat));
1976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     else
1978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       sAlarm->AlarmTime.TimeFormat = 0x00U;
1980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
1981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)));
1984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds)));
1985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #ifdef  USE_FULL_ASSERT
1987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
1988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay)));
1990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     else
1992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
ARM GAS  /tmp/ccettC69.s 			page 37


1993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay)));
1994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* USE_FULL_ASSERT */
1997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     tmpreg = (((uint32_t)(sAlarm->AlarmTime.Hours) << RTC_ALRMAR_HU_Pos) | \
1998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
1999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Seconds) << RTC_ALRMAR_SU_Pos) | \
2000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << RTC_ALRMAR_PM_Pos) | \
2001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmDateWeekDay) << RTC_ALRMAR_DU_Pos) | \
2002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
2003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmMask));
2004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
2005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Configure the Alarm A or Alarm B Sub Second registers */
2006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   subsecondtmpreg = (uint32_t)((uint32_t)(sAlarm->AlarmTime.SubSeconds) | (uint32_t)(sAlarm->AlarmS
2007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
2009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
2010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Configure the Alarm register */
2012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (sAlarm->Alarm == RTC_ALARM_A)
2013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
2014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Disable the Alarm A interrupt */
2015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARMA_DISABLE(hrtc);
2016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Clear flag alarm A */
2018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRAF);
2019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined (RTC_FLAG_ALRAWF)
2021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     uint32_t tickstart = HAL_GetTick();
2022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Wait till RTC ALRAWF flag is set and if Time out is reached exit */
2023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     while (__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAWF) == 0U)
2024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
2025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
2026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
2027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
2028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
2029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
2031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Process Unlocked */
2033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
2034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         return HAL_TIMEOUT;
2036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
2037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
2038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
2039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->Instance->ALRMAR = (uint32_t)tmpreg;
2041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm A Sub Second register */
2042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->Instance->ALRMASSR = subsecondtmpreg;
2043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
2044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARMA_ENABLE(hrtc);
2045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm interrupt */
2046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARM_ENABLE_IT(hrtc, RTC_IT_ALRA);
2047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
2048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else
2049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
ARM GAS  /tmp/ccettC69.s 			page 38


2050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Disable the Alarm B interrupt */
2051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARMB_DISABLE(hrtc);
2052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Clear flag alarm B */
2054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRBF);
2055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined (RTC_FLAG_ALRBWF)
2057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     uint32_t tickstart = HAL_GetTick();
2058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Wait till RTC ALRBWF flag is set and if Time out is reached exit */
2059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     while (__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRBWF) == 0U)
2060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
2061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
2062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
2063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
2064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
2065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
2067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Process Unlocked */
2069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
2070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         return HAL_TIMEOUT;
2072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
2073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
2074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
2075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->Instance->ALRMBR = (uint32_t)tmpreg;
2077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm B Sub Second register */
2078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->Instance->ALRMBSSR = subsecondtmpreg;
2079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
2080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARMB_ENABLE(hrtc);
2081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm interrupt */
2082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARM_ENABLE_IT(hrtc, RTC_IT_ALRB);
2083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
2084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* RTC Alarm Interrupt Configuration: EXTI configuration */
2086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_ALARM_EXTI_ENABLE_IT();
2087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_ALARM_EXTI_ENABLE_RISING_EDGE();
2088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Enable the write protection for RTC registers */
2090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
2091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY;
2093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process Unlocked */
2095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
2096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return HAL_OK;
2098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
2099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* #if defined (STM32L4P5xx) || defined (STM32L4Q5xx) */
2101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
2103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Deactivate the specified RTC Alarm.
2104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
2105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  Alarm Specifies the Alarm.
2106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          This parameter can be one of the following values:
ARM GAS  /tmp/ccettC69.s 			page 39


2107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *            @arg RTC_ALARM_A:  AlarmA
2108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *            @arg RTC_ALARM_B:  AlarmB
2109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
2110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
2111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_DeactivateAlarm(RTC_HandleTypeDef *hrtc, uint32_t Alarm)
2112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
  66              		.loc 1 2112 0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 0
  69              		@ frame_needed = 0, uses_anonymous_args = 0
  70              	.LVL2:
  71              		.loc 1 2112 0
  72 0000 38B5     		push	{r3, r4, r5, lr}
  73              	.LCFI0:
  74              		.cfi_def_cfa_offset 16
  75              		.cfi_offset 3, -16
  76              		.cfi_offset 4, -12
  77              		.cfi_offset 5, -8
  78              		.cfi_offset 14, -4
2113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check the parameters */
2114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(Alarm));
2115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process Locked */
2117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
  79              		.loc 1 2117 0
  80 0002 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
  81 0006 012B     		cmp	r3, #1
  82 0008 60D0     		beq	.L11
  83 000a 0446     		mov	r4, r0
  84              		.loc 1 2117 0 is_stmt 0 discriminator 2
  85 000c 0123     		movs	r3, #1
  86 000e 80F82030 		strb	r3, [r0, #32]
2118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
  87              		.loc 1 2119 0 is_stmt 1 discriminator 2
  88 0012 0223     		movs	r3, #2
  89 0014 80F82130 		strb	r3, [r0, #33]
2120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
2122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
  90              		.loc 1 2122 0 discriminator 2
  91 0018 0368     		ldr	r3, [r0]
  92 001a CA22     		movs	r2, #202
  93 001c 5A62     		str	r2, [r3, #36]
  94 001e 0368     		ldr	r3, [r0]
  95 0020 5322     		movs	r2, #83
  96 0022 5A62     		str	r2, [r3, #36]
2123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (Alarm == RTC_ALARM_A)
  97              		.loc 1 2124 0 discriminator 2
  98 0024 B1F5807F 		cmp	r1, #256
  99 0028 23D1     		bne	.L5
 100              	.LBB2:
2125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
2126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* AlarmA */
2127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined (RTC_ALRMASSR_SSCLR)
2128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     CLEAR_BIT(RTC->ALRMASSR, RTC_ALRMASSR_SSCLR);
ARM GAS  /tmp/ccettC69.s 			page 40


2129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
2130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARMA_DISABLE(hrtc);
 101              		.loc 1 2131 0
 102 002a 0268     		ldr	r2, [r0]
 103 002c 9368     		ldr	r3, [r2, #8]
 104 002e 23F48073 		bic	r3, r3, #256
 105 0032 9360     		str	r3, [r2, #8]
2132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* In case of interrupt mode is used, the interrupt source must disabled */
2134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARM_DISABLE_IT(hrtc, RTC_IT_ALRA);
 106              		.loc 1 2134 0
 107 0034 0268     		ldr	r2, [r0]
 108 0036 9368     		ldr	r3, [r2, #8]
 109 0038 23F48053 		bic	r3, r3, #4096
 110 003c 9360     		str	r3, [r2, #8]
2135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined (RTC_FLAG_ALRAWF)
2137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     uint32_t tickstart = HAL_GetTick();
 111              		.loc 1 2137 0
 112 003e FFF7FEFF 		bl	HAL_GetTick
 113              	.LVL3:
 114 0042 0546     		mov	r5, r0
 115              	.LVL4:
2138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Wait till RTC ALRxWF flag is set and if Time out is reached exit */
2139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     while (__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAWF) == 0U)
 116              		.loc 1 2139 0
 117 0044 0FE0     		b	.L6
 118              	.LVL5:
 119              	.L7:
2140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
2141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if ((HAL_GetTick()  - tickstart) > RTC_TIMEOUT_VALUE)
 120              		.loc 1 2141 0
 121 0046 FFF7FEFF 		bl	HAL_GetTick
 122              	.LVL6:
 123 004a 401B     		subs	r0, r0, r5
 124 004c B0F57A7F 		cmp	r0, #1000
 125 0050 09D9     		bls	.L6
2142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
2143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
2144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 126              		.loc 1 2144 0
 127 0052 2368     		ldr	r3, [r4]
 128 0054 FF22     		movs	r2, #255
 129 0056 5A62     		str	r2, [r3, #36]
2145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 130              		.loc 1 2146 0
 131 0058 0320     		movs	r0, #3
 132 005a 84F82100 		strb	r0, [r4, #33]
2147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Process Unlocked */
2149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
 133              		.loc 1 2149 0
 134 005e 0023     		movs	r3, #0
 135 0060 84F82030 		strb	r3, [r4, #32]
2150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
ARM GAS  /tmp/ccettC69.s 			page 41


2151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         return HAL_TIMEOUT;
 136              		.loc 1 2151 0
 137 0064 38BD     		pop	{r3, r4, r5, pc}
 138              	.LVL7:
 139              	.L6:
2139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 140              		.loc 1 2139 0
 141 0066 2368     		ldr	r3, [r4]
 142 0068 DB68     		ldr	r3, [r3, #12]
 143 006a 13F0010F 		tst	r3, #1
 144 006e EAD0     		beq	.L7
 145 0070 22E0     		b	.L8
 146              	.LVL8:
 147              	.L5:
 148              	.LBE2:
 149              	.LBB3:
2152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
2153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
2154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
2155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
2156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else
2157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
2158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* AlarmB */
2159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined (RTC_ALRMBSSR_SSCLR)
2160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     CLEAR_BIT(RTC->ALRMBSSR, RTC_ALRMASSR_SSCLR);
2161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
2162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARMB_DISABLE(hrtc);
 150              		.loc 1 2163 0
 151 0072 0268     		ldr	r2, [r0]
 152 0074 9368     		ldr	r3, [r2, #8]
 153 0076 23F40073 		bic	r3, r3, #512
 154 007a 9360     		str	r3, [r2, #8]
2164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* In case of interrupt mode is used, the interrupt source must disabled */
2166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARM_DISABLE_IT(hrtc, RTC_IT_ALRB);
 155              		.loc 1 2166 0
 156 007c 0268     		ldr	r2, [r0]
 157 007e 9368     		ldr	r3, [r2, #8]
 158 0080 23F40053 		bic	r3, r3, #8192
 159 0084 9360     		str	r3, [r2, #8]
2167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined (RTC_FLAG_ALRBWF)
2169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     uint32_t tickstart = HAL_GetTick();
 160              		.loc 1 2169 0
 161 0086 FFF7FEFF 		bl	HAL_GetTick
 162              	.LVL9:
 163 008a 0546     		mov	r5, r0
 164              	.LVL10:
2170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Wait till RTC ALRBWF flag is set and if Time out is reached exit */
2171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     while (__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRBWF) == 0U)
 165              		.loc 1 2171 0
 166 008c 0FE0     		b	.L9
 167              	.LVL11:
 168              	.L10:
2172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
2173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
ARM GAS  /tmp/ccettC69.s 			page 42


 169              		.loc 1 2173 0
 170 008e FFF7FEFF 		bl	HAL_GetTick
 171              	.LVL12:
 172 0092 401B     		subs	r0, r0, r5
 173 0094 B0F57A7F 		cmp	r0, #1000
 174 0098 09D9     		bls	.L9
2174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
2175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
2176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 175              		.loc 1 2176 0
 176 009a 2368     		ldr	r3, [r4]
 177 009c FF22     		movs	r2, #255
 178 009e 5A62     		str	r2, [r3, #36]
2177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 179              		.loc 1 2178 0
 180 00a0 0320     		movs	r0, #3
 181 00a2 84F82100 		strb	r0, [r4, #33]
2179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Process Unlocked */
2181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
 182              		.loc 1 2181 0
 183 00a6 0023     		movs	r3, #0
 184 00a8 84F82030 		strb	r3, [r4, #32]
2182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         return HAL_TIMEOUT;
 185              		.loc 1 2183 0
 186 00ac 38BD     		pop	{r3, r4, r5, pc}
 187              	.LVL13:
 188              	.L9:
2171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 189              		.loc 1 2171 0
 190 00ae 2368     		ldr	r3, [r4]
 191 00b0 DB68     		ldr	r3, [r3, #12]
 192 00b2 13F0020F 		tst	r3, #2
 193 00b6 EAD0     		beq	.L10
 194              	.LVL14:
 195              	.L8:
 196              	.LBE3:
2184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
2185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
2186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
2187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
2188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Enable the write protection for RTC registers */
2189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 197              		.loc 1 2189 0
 198 00b8 2368     		ldr	r3, [r4]
 199 00ba FF22     		movs	r2, #255
 200 00bc 5A62     		str	r2, [r3, #36]
2190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY;
 201              		.loc 1 2191 0
 202 00be 0123     		movs	r3, #1
 203 00c0 84F82130 		strb	r3, [r4, #33]
2192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process Unlocked */
2194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
ARM GAS  /tmp/ccettC69.s 			page 43


 204              		.loc 1 2194 0
 205 00c4 0020     		movs	r0, #0
 206 00c6 84F82000 		strb	r0, [r4, #32]
2195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return HAL_OK;
 207              		.loc 1 2196 0
 208 00ca 38BD     		pop	{r3, r4, r5, pc}
 209              	.LVL15:
 210              	.L11:
2117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 211              		.loc 1 2117 0
 212 00cc 0220     		movs	r0, #2
 213              	.LVL16:
2197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 214              		.loc 1 2197 0
 215 00ce 38BD     		pop	{r3, r4, r5, pc}
 216              		.cfi_endproc
 217              	.LFE298:
 219              		.section	.text.HAL_RTC_DST_Add1Hour,"ax",%progbits
 220              		.align	2
 221              		.global	HAL_RTC_DST_Add1Hour
 222              		.thumb
 223              		.thumb_func
 225              	HAL_RTC_DST_Add1Hour:
 226              	.LFB300:
2198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
2200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Get the RTC Alarm value and masks.
2201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
2202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  sAlarm Pointer to Date structure
2203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  Alarm Specifies the Alarm.
2204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          This parameter can be one of the following values:
2205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             @arg RTC_ALARM_A: AlarmA
2206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             @arg RTC_ALARM_B: AlarmB
2207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  Format Specifies the format of the entered parameters.
2208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          This parameter can be one of the following values:
2209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BIN: Binary data format
2210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BCD: BCD data format
2211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
2212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
2213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_GetAlarm(RTC_HandleTypeDef *hrtc, RTC_AlarmTypeDef *sAlarm, uint32_t Alar
2214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
2215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tmpreg, subsecondtmpreg;
2216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check the parameters */
2218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
2219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(Alarm));
2220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (Alarm == RTC_ALARM_A)
2222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
2223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* AlarmA */
2224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->Alarm = RTC_ALARM_A;
2225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     tmpreg = (uint32_t)(hrtc->Instance->ALRMAR);
2227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     subsecondtmpreg = (uint32_t)((hrtc->Instance->ALRMASSR) & RTC_ALRMASSR_SS);
2228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Fill the structure with the read parameters */
ARM GAS  /tmp/ccettC69.s 			page 44


2230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Hours = (uint8_t)((tmpreg & (RTC_ALRMAR_HT | RTC_ALRMAR_HU)) >> RTC_ALRMAR_HU
2231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Minutes = (uint8_t)((tmpreg & (RTC_ALRMAR_MNT | RTC_ALRMAR_MNU)) >> RTC_ALRMA
2232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Seconds = (uint8_t)((tmpreg & (RTC_ALRMAR_ST | RTC_ALRMAR_SU)) >> RTC_ALRMAR_
2233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.TimeFormat = (uint8_t)((tmpreg & RTC_ALRMAR_PM) >> RTC_ALRMAR_PM_Pos);
2234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.SubSeconds = (uint32_t) subsecondtmpreg;
2235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmDateWeekDay = (uint8_t)((tmpreg & (RTC_ALRMAR_DT | RTC_ALRMAR_DU)) >> RTC_ALRMAR_D
2236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmDateWeekDaySel = (uint32_t)(tmpreg & RTC_ALRMAR_WDSEL);
2237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmMask = (uint32_t)(tmpreg & RTC_ALARMMASK_ALL);
2238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
2239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else
2240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
2241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->Alarm = RTC_ALARM_B;
2242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     tmpreg = (uint32_t)(hrtc->Instance->ALRMBR);
2244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     subsecondtmpreg = (uint32_t)((hrtc->Instance->ALRMBSSR) & RTC_ALRMBSSR_SS);
2245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Fill the structure with the read parameters */
2247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Hours = (uint8_t)((tmpreg & (RTC_ALRMBR_HT | RTC_ALRMBR_HU)) >> RTC_ALRMBR_HU
2248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Minutes = (uint8_t)((tmpreg & (RTC_ALRMBR_MNT | RTC_ALRMBR_MNU)) >> RTC_ALRMB
2249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Seconds = (uint8_t)((tmpreg & (RTC_ALRMBR_ST | RTC_ALRMBR_SU)) >> RTC_ALRMBR_
2250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.TimeFormat = (uint8_t)((tmpreg & RTC_ALRMBR_PM) >> RTC_ALRMBR_PM_Pos);
2251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.SubSeconds = (uint32_t) subsecondtmpreg;
2252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmDateWeekDay = (uint8_t)((tmpreg & (RTC_ALRMBR_DT | RTC_ALRMBR_DU)) >> RTC_ALRMBR_D
2253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmDateWeekDaySel = (uint32_t)(tmpreg & RTC_ALRMBR_WDSEL);
2254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmMask = (uint32_t)(tmpreg & RTC_ALARMMASK_ALL);
2255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
2256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (Format == RTC_FORMAT_BIN)
2258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
2259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Hours = RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours);
2260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Minutes = RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes);
2261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Seconds = RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds);
2262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmDateWeekDay = RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay);
2263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
2264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return HAL_OK;
2266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
2267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
2270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Daylight Saving Time, Add one hour to the calendar in one single operation
2271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *         without going through the initialization procedure.
2272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
2273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval None
2274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
2275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** void HAL_RTC_DST_Add1Hour(RTC_HandleTypeDef *hrtc)
2276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 227              		.loc 1 2276 0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231              		@ link register save eliminated.
 232              	.LVL17:
2277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   UNUSED(hrtc);
2278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 233              		.loc 1 2278 0
 234 0000 0368     		ldr	r3, [r0]
ARM GAS  /tmp/ccettC69.s 			page 45


 235 0002 CA22     		movs	r2, #202
 236 0004 5A62     		str	r2, [r3, #36]
 237 0006 0368     		ldr	r3, [r0]
 238 0008 5322     		movs	r2, #83
 239 000a 5A62     		str	r2, [r3, #36]
2279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   SET_BIT(RTC->CR, RTC_CR_ADD1H);
 240              		.loc 1 2279 0
 241 000c 044A     		ldr	r2, .L14
 242 000e 9368     		ldr	r3, [r2, #8]
 243 0010 43F48033 		orr	r3, r3, #65536
 244 0014 9360     		str	r3, [r2, #8]
2280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 245              		.loc 1 2280 0
 246 0016 0368     		ldr	r3, [r0]
 247 0018 FF22     		movs	r2, #255
 248 001a 5A62     		str	r2, [r3, #36]
 249 001c 7047     		bx	lr
 250              	.L15:
 251 001e 00BF     		.align	2
 252              	.L14:
 253 0020 00280040 		.word	1073752064
 254              		.cfi_endproc
 255              	.LFE300:
 257              		.section	.text.HAL_RTC_DST_Sub1Hour,"ax",%progbits
 258              		.align	2
 259              		.global	HAL_RTC_DST_Sub1Hour
 260              		.thumb
 261              		.thumb_func
 263              	HAL_RTC_DST_Sub1Hour:
 264              	.LFB301:
2281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
2282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
2284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Daylight Saving Time, Substract one hour from the calendar in one
2285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *         single operation without going through the initialization procedure.
2286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
2287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval None
2288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
2289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** void HAL_RTC_DST_Sub1Hour(RTC_HandleTypeDef *hrtc)
2290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 265              		.loc 1 2290 0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 0
 268              		@ frame_needed = 0, uses_anonymous_args = 0
 269              		@ link register save eliminated.
 270              	.LVL18:
2291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   UNUSED(hrtc);
2292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 271              		.loc 1 2292 0
 272 0000 0368     		ldr	r3, [r0]
 273 0002 CA22     		movs	r2, #202
 274 0004 5A62     		str	r2, [r3, #36]
 275 0006 0368     		ldr	r3, [r0]
 276 0008 5322     		movs	r2, #83
 277 000a 5A62     		str	r2, [r3, #36]
2293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   SET_BIT(RTC->CR, RTC_CR_SUB1H);
 278              		.loc 1 2293 0
ARM GAS  /tmp/ccettC69.s 			page 46


 279 000c 044A     		ldr	r2, .L17
 280 000e 9368     		ldr	r3, [r2, #8]
 281 0010 43F40033 		orr	r3, r3, #131072
 282 0014 9360     		str	r3, [r2, #8]
2294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 283              		.loc 1 2294 0
 284 0016 0368     		ldr	r3, [r0]
 285 0018 FF22     		movs	r2, #255
 286 001a 5A62     		str	r2, [r3, #36]
 287 001c 7047     		bx	lr
 288              	.L18:
 289 001e 00BF     		.align	2
 290              	.L17:
 291 0020 00280040 		.word	1073752064
 292              		.cfi_endproc
 293              	.LFE301:
 295              		.section	.text.HAL_RTC_DST_SetStoreOperation,"ax",%progbits
 296              		.align	2
 297              		.global	HAL_RTC_DST_SetStoreOperation
 298              		.thumb
 299              		.thumb_func
 301              	HAL_RTC_DST_SetStoreOperation:
 302              	.LFB302:
2295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
2296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
2298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Daylight Saving Time, Set the store operation bit.
2299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @note   It can be used by the software in order to memorize the DST status.
2300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
2301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval None
2302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
2303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** void HAL_RTC_DST_SetStoreOperation(RTC_HandleTypeDef *hrtc)
2304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 303              		.loc 1 2304 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307              		@ link register save eliminated.
 308              	.LVL19:
2305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   UNUSED(hrtc);
2306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 309              		.loc 1 2306 0
 310 0000 0368     		ldr	r3, [r0]
 311 0002 CA22     		movs	r2, #202
 312 0004 5A62     		str	r2, [r3, #36]
 313 0006 0368     		ldr	r3, [r0]
 314 0008 5322     		movs	r2, #83
 315 000a 5A62     		str	r2, [r3, #36]
2307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   SET_BIT(RTC->CR, RTC_CR_BKP);
 316              		.loc 1 2307 0
 317 000c 044A     		ldr	r2, .L20
 318 000e 9368     		ldr	r3, [r2, #8]
 319 0010 43F48023 		orr	r3, r3, #262144
 320 0014 9360     		str	r3, [r2, #8]
2308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 321              		.loc 1 2308 0
 322 0016 0368     		ldr	r3, [r0]
ARM GAS  /tmp/ccettC69.s 			page 47


 323 0018 FF22     		movs	r2, #255
 324 001a 5A62     		str	r2, [r3, #36]
 325 001c 7047     		bx	lr
 326              	.L21:
 327 001e 00BF     		.align	2
 328              	.L20:
 329 0020 00280040 		.word	1073752064
 330              		.cfi_endproc
 331              	.LFE302:
 333              		.section	.text.HAL_RTC_DST_ClearStoreOperation,"ax",%progbits
 334              		.align	2
 335              		.global	HAL_RTC_DST_ClearStoreOperation
 336              		.thumb
 337              		.thumb_func
 339              	HAL_RTC_DST_ClearStoreOperation:
 340              	.LFB303:
2309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
2310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
2312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Daylight Saving Time, Clear the store operation bit.
2313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
2314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval None
2315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
2316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** void HAL_RTC_DST_ClearStoreOperation(RTC_HandleTypeDef *hrtc)
2317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 341              		.loc 1 2317 0
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 0
 344              		@ frame_needed = 0, uses_anonymous_args = 0
 345              		@ link register save eliminated.
 346              	.LVL20:
2318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   UNUSED(hrtc);
2319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 347              		.loc 1 2319 0
 348 0000 0368     		ldr	r3, [r0]
 349 0002 CA22     		movs	r2, #202
 350 0004 5A62     		str	r2, [r3, #36]
 351 0006 0368     		ldr	r3, [r0]
 352 0008 5322     		movs	r2, #83
 353 000a 5A62     		str	r2, [r3, #36]
2320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   CLEAR_BIT(RTC->CR, RTC_CR_BKP);
 354              		.loc 1 2320 0
 355 000c 044A     		ldr	r2, .L23
 356 000e 9368     		ldr	r3, [r2, #8]
 357 0010 23F48023 		bic	r3, r3, #262144
 358 0014 9360     		str	r3, [r2, #8]
2321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 359              		.loc 1 2321 0
 360 0016 0368     		ldr	r3, [r0]
 361 0018 FF22     		movs	r2, #255
 362 001a 5A62     		str	r2, [r3, #36]
 363 001c 7047     		bx	lr
 364              	.L24:
 365 001e 00BF     		.align	2
 366              	.L23:
 367 0020 00280040 		.word	1073752064
 368              		.cfi_endproc
ARM GAS  /tmp/ccettC69.s 			page 48


 369              	.LFE303:
 371              		.section	.text.HAL_RTC_DST_ReadStoreOperation,"ax",%progbits
 372              		.align	2
 373              		.global	HAL_RTC_DST_ReadStoreOperation
 374              		.thumb
 375              		.thumb_func
 377              	HAL_RTC_DST_ReadStoreOperation:
 378              	.LFB304:
2322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
2323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
2325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Daylight Saving Time, Read the store operation bit.
2326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
2327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval operation see RTC_StoreOperation_Definitions
2328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
2329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** uint32_t HAL_RTC_DST_ReadStoreOperation(RTC_HandleTypeDef *hrtc)
2330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 379              		.loc 1 2330 0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 0
 382              		@ frame_needed = 0, uses_anonymous_args = 0
 383              		@ link register save eliminated.
 384              	.LVL21:
2331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   UNUSED(hrtc);
2332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return READ_BIT(RTC->CR, RTC_CR_BKP);
 385              		.loc 1 2332 0
 386 0000 024B     		ldr	r3, .L26
 387 0002 9868     		ldr	r0, [r3, #8]
 388              	.LVL22:
2333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 389              		.loc 1 2333 0
 390 0004 00F48020 		and	r0, r0, #262144
 391 0008 7047     		bx	lr
 392              	.L27:
 393 000a 00BF     		.align	2
 394              	.L26:
 395 000c 00280040 		.word	1073752064
 396              		.cfi_endproc
 397              	.LFE304:
 399              		.section	.text.HAL_RTC_AlarmAEventCallback,"ax",%progbits
 400              		.align	2
 401              		.weak	HAL_RTC_AlarmAEventCallback
 402              		.thumb
 403              		.thumb_func
 405              	HAL_RTC_AlarmAEventCallback:
 406              	.LFB306:
2334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
2336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Handle Alarm interrupt request.
2337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
2338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval None
2339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
2340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** void HAL_RTC_AlarmIRQHandler(RTC_HandleTypeDef *hrtc)
2341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
2342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Clear the EXTI's line Flag for RTC Alarm */
2343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_ALARM_EXTI_CLEAR_FLAG();
2344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
ARM GAS  /tmp/ccettC69.s 			page 49


2345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
2346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Get interrupt status */
2347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tmp = hrtc->Instance->MISR;
2348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if ((tmp & RTC_MISR_ALRAMF) != 0u)
2350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
2351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Clear the AlarmA interrupt pending bit */
2352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->Instance->SCR = RTC_SCR_CALRAF;
2353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
2355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Call Compare Match registered Callback */
2356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->AlarmAEventCallback(hrtc);
2357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #else  /* (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
2358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     HAL_RTC_AlarmAEventCallback(hrtc);
2359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
2360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
2361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if ((tmp & RTC_MISR_ALRBMF) != 0u)
2363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
2364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Clear the AlarmB interrupt pending bit */
2365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->Instance->SCR = RTC_SCR_CALRBF;
2366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
2368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Call Compare Match registered Callback */
2369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->AlarmBEventCallback(hrtc);
2370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #else
2371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     HAL_RTCEx_AlarmBEventCallback(hrtc);
2372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
2373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
2374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #else /* #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM3
2376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Get the AlarmA interrupt source enable status */
2378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (__HAL_RTC_ALARM_GET_IT_SOURCE(hrtc, RTC_IT_ALRA) != 0U)
2379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
2380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Get the pending status of the AlarmA Interrupt */
2381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAF) != 0U)
2382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
2383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       /* Clear the AlarmA interrupt pending bit */
2384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRAF);
2385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
2387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->AlarmAEventCallback(hrtc);
2388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #else
2389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       HAL_RTC_AlarmAEventCallback(hrtc);
2390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
2391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
2392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
2393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Get the AlarmB interrupt source enable status */
2395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (__HAL_RTC_ALARM_GET_IT_SOURCE(hrtc, RTC_IT_ALRB) != 0U)
2396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
2397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Get the pending status of the AlarmB Interrupt */
2398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRBF) != 0U)
2399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
2400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       /* Clear the AlarmB interrupt pending bit */
2401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRBF);
ARM GAS  /tmp/ccettC69.s 			page 50


2402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
2404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->AlarmBEventCallback(hrtc);
2405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #else
2406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       HAL_RTCEx_AlarmBEventCallback(hrtc);
2407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
2408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
2409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
2410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM
2411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Change RTC state */
2413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY;
2414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
2415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
2417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Alarm A callback.
2418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
2419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval None
2420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
2421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** __weak void HAL_RTC_AlarmAEventCallback(RTC_HandleTypeDef *hrtc)
2422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 407              		.loc 1 2422 0
 408              		.cfi_startproc
 409              		@ args = 0, pretend = 0, frame = 0
 410              		@ frame_needed = 0, uses_anonymous_args = 0
 411              		@ link register save eliminated.
 412              	.LVL23:
 413 0000 7047     		bx	lr
 414              		.cfi_endproc
 415              	.LFE306:
 417 0002 00BF     		.section	.text.HAL_RTC_AlarmIRQHandler,"ax",%progbits
 418              		.align	2
 419              		.global	HAL_RTC_AlarmIRQHandler
 420              		.thumb
 421              		.thumb_func
 423              	HAL_RTC_AlarmIRQHandler:
 424              	.LFB305:
2341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Clear the EXTI's line Flag for RTC Alarm */
 425              		.loc 1 2341 0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 0
 428              		@ frame_needed = 0, uses_anonymous_args = 0
 429              	.LVL24:
2341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Clear the EXTI's line Flag for RTC Alarm */
 430              		.loc 1 2341 0
 431 0000 10B5     		push	{r4, lr}
 432              	.LCFI1:
 433              		.cfi_def_cfa_offset 8
 434              		.cfi_offset 4, -8
 435              		.cfi_offset 14, -4
 436 0002 0446     		mov	r4, r0
2343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 437              		.loc 1 2343 0
 438 0004 4FF48022 		mov	r2, #262144
 439 0008 134B     		ldr	r3, .L33
 440 000a 5A61     		str	r2, [r3, #20]
2378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
ARM GAS  /tmp/ccettC69.s 			page 51


 441              		.loc 1 2378 0
 442 000c 0368     		ldr	r3, [r0]
 443 000e 9A68     		ldr	r2, [r3, #8]
 444 0010 12F4805F 		tst	r2, #4096
 445 0014 0AD0     		beq	.L30
2381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 446              		.loc 1 2381 0
 447 0016 DA68     		ldr	r2, [r3, #12]
 448 0018 12F4807F 		tst	r2, #256
 449 001c 06D0     		beq	.L30
2384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 450              		.loc 1 2384 0
 451 001e DA68     		ldr	r2, [r3, #12]
 452 0020 D2B2     		uxtb	r2, r2
 453 0022 62F4C072 		orn	r2, r2, #384
 454 0026 DA60     		str	r2, [r3, #12]
2389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 455              		.loc 1 2389 0
 456 0028 FFF7FEFF 		bl	HAL_RTC_AlarmAEventCallback
 457              	.LVL25:
 458              	.L30:
2395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 459              		.loc 1 2395 0
 460 002c 2368     		ldr	r3, [r4]
 461 002e 9A68     		ldr	r2, [r3, #8]
 462 0030 12F4005F 		tst	r2, #8192
 463 0034 0BD0     		beq	.L31
2398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 464              		.loc 1 2398 0
 465 0036 DA68     		ldr	r2, [r3, #12]
 466 0038 12F4007F 		tst	r2, #512
 467 003c 07D0     		beq	.L31
2401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 468              		.loc 1 2401 0
 469 003e DA68     		ldr	r2, [r3, #12]
 470 0040 D2B2     		uxtb	r2, r2
 471 0042 62F42072 		orn	r2, r2, #640
 472 0046 DA60     		str	r2, [r3, #12]
2406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 473              		.loc 1 2406 0
 474 0048 2046     		mov	r0, r4
 475 004a FFF7FEFF 		bl	HAL_RTCEx_AlarmBEventCallback
 476              	.LVL26:
 477              	.L31:
2413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 478              		.loc 1 2413 0
 479 004e 0123     		movs	r3, #1
 480 0050 84F82130 		strb	r3, [r4, #33]
 481 0054 10BD     		pop	{r4, pc}
 482              	.LVL27:
 483              	.L34:
 484 0056 00BF     		.align	2
 485              	.L33:
 486 0058 00040140 		.word	1073808384
 487              		.cfi_endproc
 488              	.LFE305:
 490              		.section	.text.HAL_RTC_PollForAlarmAEvent,"ax",%progbits
ARM GAS  /tmp/ccettC69.s 			page 52


 491              		.align	2
 492              		.global	HAL_RTC_PollForAlarmAEvent
 493              		.thumb
 494              		.thumb_func
 496              	HAL_RTC_PollForAlarmAEvent:
 497              	.LFB307:
2423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
2424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   UNUSED(hrtc);
2425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****             the HAL_RTC_AlarmAEventCallback could be implemented in the user file
2428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****    */
2429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
2430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
2432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Handle AlarmA Polling request.
2433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
2434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  Timeout Timeout duration
2435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
2436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
2437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_PollForAlarmAEvent(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
2438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 498              		.loc 1 2438 0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 0
 501              		@ frame_needed = 0, uses_anonymous_args = 0
 502              	.LVL28:
 503 0000 70B5     		push	{r4, r5, r6, lr}
 504              	.LCFI2:
 505              		.cfi_def_cfa_offset 16
 506              		.cfi_offset 4, -16
 507              		.cfi_offset 5, -12
 508              		.cfi_offset 6, -8
 509              		.cfi_offset 14, -4
 510 0002 0446     		mov	r4, r0
 511 0004 0D46     		mov	r5, r1
2439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tickstart = HAL_GetTick();
 512              		.loc 1 2440 0
 513 0006 FFF7FEFF 		bl	HAL_GetTick
 514              	.LVL29:
 515 000a 0646     		mov	r6, r0
 516              	.LVL30:
2441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   while (__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAF) == 0U)
 517              		.loc 1 2442 0
 518 000c 0CE0     		b	.L37
 519              	.LVL31:
 520              	.L40:
2443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
2444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (Timeout != HAL_MAX_DELAY)
 521              		.loc 1 2444 0
 522 000e B5F1FF3F 		cmp	r5, #-1
 523 0012 09D0     		beq	.L37
2445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
2446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 524              		.loc 1 2446 0
ARM GAS  /tmp/ccettC69.s 			page 53


 525 0014 FFF7FEFF 		bl	HAL_GetTick
 526              	.LVL32:
 527 0018 801B     		subs	r0, r0, r6
 528 001a 8542     		cmp	r5, r0
 529 001c 00D3     		bcc	.L38
 530              		.loc 1 2446 0 is_stmt 0 discriminator 1
 531 001e 1DB9     		cbnz	r5, .L37
 532              	.L38:
2447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
2448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 533              		.loc 1 2448 0 is_stmt 1
 534 0020 0320     		movs	r0, #3
 535 0022 84F82100 		strb	r0, [r4, #33]
2449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         return HAL_TIMEOUT;
 536              		.loc 1 2449 0
 537 0026 70BD     		pop	{r4, r5, r6, pc}
 538              	.LVL33:
 539              	.L37:
2442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 540              		.loc 1 2442 0
 541 0028 2368     		ldr	r3, [r4]
 542 002a DA68     		ldr	r2, [r3, #12]
 543 002c 12F4807F 		tst	r2, #256
 544 0030 EDD0     		beq	.L40
2450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
2451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
2452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
2453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Clear the Alarm interrupt pending bit */
2455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRAF);
 545              		.loc 1 2455 0
 546 0032 DA68     		ldr	r2, [r3, #12]
 547 0034 D2B2     		uxtb	r2, r2
 548 0036 62F4C072 		orn	r2, r2, #384
 549 003a DA60     		str	r2, [r3, #12]
2456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Change RTC state */
2458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY;
 550              		.loc 1 2458 0
 551 003c 0123     		movs	r3, #1
 552 003e 84F82130 		strb	r3, [r4, #33]
2459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return HAL_OK;
 553              		.loc 1 2460 0
 554 0042 0020     		movs	r0, #0
2461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 555              		.loc 1 2461 0
 556 0044 70BD     		pop	{r4, r5, r6, pc}
 557              		.cfi_endproc
 558              	.LFE307:
 560 0046 00BF     		.section	.text.HAL_RTC_WaitForSynchro,"ax",%progbits
 561              		.align	2
 562              		.global	HAL_RTC_WaitForSynchro
 563              		.thumb
 564              		.thumb_func
 566              	HAL_RTC_WaitForSynchro:
 567              	.LFB308:
ARM GAS  /tmp/ccettC69.s 			page 54


2462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
2464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @}
2465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
2466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /** @addtogroup RTC_Exported_Functions_Group4
2468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  *  @brief   Peripheral Control functions
2469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  *
2470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** @verbatim
2471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  ===============================================================================
2472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                      ##### Peripheral Control functions #####
2473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  ===============================================================================
2474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     [..]
2475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     This subsection provides functions allowing to
2476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       (+) Wait for RTC Time and Date Synchronization
2477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** @endverbatim
2479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @{
2480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
2481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
2483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Wait until the RTC Time and Date registers (RTC_TR and RTC_DR) are
2484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *         synchronized with RTC APB clock.
2485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @note   The RTC Resynchronization mode is write protected, use the
2486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *         __HAL_RTC_WRITEPROTECTION_DISABLE() before calling this function.
2487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @note   To read the calendar through the shadow registers after Calendar
2488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *         initialization, calendar update or after wakeup from low power modes
2489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *         the software must first clear the RSF flag.
2490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *         The software must then wait until it is set again before reading
2491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *         the calendar, which means that the calendar registers have been
2492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *         correctly copied into the RTC_TR and RTC_DR shadow registers.
2493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
2494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
2495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
2496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_WaitForSynchro(RTC_HandleTypeDef *hrtc)
2497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 568              		.loc 1 2497 0
 569              		.cfi_startproc
 570              		@ args = 0, pretend = 0, frame = 0
 571              		@ frame_needed = 0, uses_anonymous_args = 0
 572              	.LVL34:
 573 0000 38B5     		push	{r3, r4, r5, lr}
 574              	.LCFI3:
 575              		.cfi_def_cfa_offset 16
 576              		.cfi_offset 3, -16
 577              		.cfi_offset 4, -12
 578              		.cfi_offset 5, -8
 579              		.cfi_offset 14, -4
 580 0002 0446     		mov	r4, r0
2498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tickstart;
2499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Clear RSF flag */
2501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
2502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->Instance->ICSR &= (uint32_t)RTC_RSF_MASK;
2503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #else
2504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->Instance->ISR &= (uint32_t)RTC_RSF_MASK;
 581              		.loc 1 2504 0
ARM GAS  /tmp/ccettC69.s 			page 55


 582 0004 0268     		ldr	r2, [r0]
 583 0006 D368     		ldr	r3, [r2, #12]
 584 0008 23F0A003 		bic	r3, r3, #160
 585 000c D360     		str	r3, [r2, #12]
2505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
2506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   tickstart = HAL_GetTick();
 586              		.loc 1 2507 0
 587 000e FFF7FEFF 		bl	HAL_GetTick
 588              	.LVL35:
 589 0012 0546     		mov	r5, r0
 590              	.LVL36:
2508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Wait the registers to be synchronised */
2510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
2511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   while ((hrtc->Instance->ICSR & RTC_ICSR_RSF) == 0U)
2512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #else
2513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   while ((hrtc->Instance->ISR & RTC_ISR_RSF) == 0U)
 591              		.loc 1 2513 0
 592 0014 05E0     		b	.L43
 593              	.LVL37:
 594              	.L45:
2514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
2515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
2516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
 595              		.loc 1 2516 0
 596 0016 FFF7FEFF 		bl	HAL_GetTick
 597              	.LVL38:
 598 001a 401B     		subs	r0, r0, r5
 599 001c B0F57A7F 		cmp	r0, #1000
 600 0020 06D8     		bhi	.L46
 601              	.L43:
2513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 602              		.loc 1 2513 0
 603 0022 2368     		ldr	r3, [r4]
 604 0024 DB68     		ldr	r3, [r3, #12]
 605 0026 13F0200F 		tst	r3, #32
 606 002a F4D0     		beq	.L45
2517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
2518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       return HAL_TIMEOUT;
2519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
2520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
2521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return HAL_OK;
 607              		.loc 1 2522 0
 608 002c 0020     		movs	r0, #0
 609 002e 38BD     		pop	{r3, r4, r5, pc}
 610              	.LVL39:
 611              	.L46:
2518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 612              		.loc 1 2518 0
 613 0030 0320     		movs	r0, #3
2523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 614              		.loc 1 2523 0
 615 0032 38BD     		pop	{r3, r4, r5, pc}
 616              		.cfi_endproc
 617              	.LFE308:
ARM GAS  /tmp/ccettC69.s 			page 56


 619              		.section	.text.HAL_RTC_GetState,"ax",%progbits
 620              		.align	2
 621              		.global	HAL_RTC_GetState
 622              		.thumb
 623              		.thumb_func
 625              	HAL_RTC_GetState:
 626              	.LFB309:
2524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
2526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @}
2527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
2528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /** @addtogroup RTC_Exported_Functions_Group5
2530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  *  @brief   Peripheral State functions
2531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  *
2532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** @verbatim
2533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  ===============================================================================
2534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                      ##### Peripheral State functions #####
2535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  ===============================================================================
2536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     [..]
2537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     This subsection provides functions allowing to
2538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       (+) Get RTC state
2539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** @endverbatim
2541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @{
2542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
2543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
2544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Return the RTC handle state.
2545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
2546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL state
2547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
2548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_RTCStateTypeDef HAL_RTC_GetState(RTC_HandleTypeDef *hrtc)
2549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 627              		.loc 1 2549 0
 628              		.cfi_startproc
 629              		@ args = 0, pretend = 0, frame = 0
 630              		@ frame_needed = 0, uses_anonymous_args = 0
 631              		@ link register save eliminated.
 632              	.LVL40:
2550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Return RTC handle state */
2551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return hrtc->State;
 633              		.loc 1 2551 0
 634 0000 90F82100 		ldrb	r0, [r0, #33]	@ zero_extendqisi2
 635              	.LVL41:
2552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 636              		.loc 1 2552 0
 637 0004 7047     		bx	lr
 638              		.cfi_endproc
 639              	.LFE309:
 641 0006 00BF     		.section	.text.RTC_EnterInitMode,"ax",%progbits
 642              		.align	2
 643              		.global	RTC_EnterInitMode
 644              		.thumb
 645              		.thumb_func
 647              	RTC_EnterInitMode:
 648              	.LFB310:
2553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
ARM GAS  /tmp/ccettC69.s 			page 57


2554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
2555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @}
2556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
2557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
2559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @}
2560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
2561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /** @addtogroup RTC_Private_Functions
2563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @{
2564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
2565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
2566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Enter the RTC Initialization mode.
2567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @note   The RTC Initialization mode is write protected, use the
2568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *         __HAL_RTC_WRITEPROTECTION_DISABLE() before calling this function.
2569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
2570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
2571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
2572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef RTC_EnterInitMode(RTC_HandleTypeDef *hrtc)
2573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 649              		.loc 1 2573 0
 650              		.cfi_startproc
 651              		@ args = 0, pretend = 0, frame = 0
 652              		@ frame_needed = 0, uses_anonymous_args = 0
 653              	.LVL42:
 654 0000 70B5     		push	{r4, r5, r6, lr}
 655              	.LCFI4:
 656              		.cfi_def_cfa_offset 16
 657              		.cfi_offset 4, -16
 658              		.cfi_offset 5, -12
 659              		.cfi_offset 6, -8
 660              		.cfi_offset 14, -4
 661              	.LVL43:
2574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tickstart;
2575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   HAL_StatusTypeDef status = HAL_OK;
2576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check if the Initialization mode is set */
2578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
2579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if ((hrtc->Instance->ICSR & RTC_ICSR_INITF) == 0U)
2580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
2581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Set the Initialization mode */
2582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     SET_BIT(hrtc->Instance->ICSR, RTC_ICSR_INIT);
2583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     tickstart = HAL_GetTick();
2585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Wait till RTC is in INIT state and if Time out is reached exit */
2586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     while ((READ_BIT(hrtc->Instance->ICSR, RTC_ICSR_INITF) == 0U) && (status != HAL_TIMEOUT))
2587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
2588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if ((HAL_GetTick()  - tickstart) > RTC_TIMEOUT_VALUE)
2589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
2590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         status = HAL_TIMEOUT;
2591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
2592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
2593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
2594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
2595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #else /* #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM3
2596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if ((hrtc->Instance->ISR & RTC_ISR_INITF) == 0U)
 662              		.loc 1 2596 0
ARM GAS  /tmp/ccettC69.s 			page 58


 663 0002 0368     		ldr	r3, [r0]
 664 0004 DA68     		ldr	r2, [r3, #12]
 665 0006 12F0400F 		tst	r2, #64
 666 000a 19D1     		bne	.L54
 667 000c 0446     		mov	r4, r0
2597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
2598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Set the Initialization mode */
2599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->Instance->ISR = (uint32_t)RTC_INIT_MASK;
 668              		.loc 1 2599 0
 669 000e 4FF0FF32 		mov	r2, #-1
 670 0012 DA60     		str	r2, [r3, #12]
2600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     tickstart = HAL_GetTick();
 671              		.loc 1 2601 0
 672 0014 FFF7FEFF 		bl	HAL_GetTick
 673              	.LVL44:
 674 0018 0646     		mov	r6, r0
 675              	.LVL45:
2575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 676              		.loc 1 2575 0
 677 001a 0025     		movs	r5, #0
2602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Wait till RTC is in INIT state and if Time out is reached exit */
2603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     while ((READ_BIT(hrtc->Instance->ISR, RTC_ISR_INITF) == 0U) && (status != HAL_TIMEOUT))
 678              		.loc 1 2603 0
 679 001c 08E0     		b	.L52
 680              	.LVL46:
 681              	.L53:
2604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
2605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if ((HAL_GetTick()  - tickstart) > RTC_TIMEOUT_VALUE)
 682              		.loc 1 2605 0
 683 001e FFF7FEFF 		bl	HAL_GetTick
 684              	.LVL47:
 685 0022 801B     		subs	r0, r0, r6
 686 0024 B0F57A7F 		cmp	r0, #1000
 687 0028 02D9     		bls	.L52
 688              	.LVL48:
2606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
2607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         status = HAL_TIMEOUT;
2608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 689              		.loc 1 2608 0
 690 002a 0325     		movs	r5, #3
 691 002c 84F82150 		strb	r5, [r4, #33]
 692              	.LVL49:
 693              	.L52:
2603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 694              		.loc 1 2603 0
 695 0030 2368     		ldr	r3, [r4]
 696 0032 DB68     		ldr	r3, [r3, #12]
 697 0034 13F0400F 		tst	r3, #64
 698 0038 03D1     		bne	.L50
2603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 699              		.loc 1 2603 0 is_stmt 0 discriminator 1
 700 003a 032D     		cmp	r5, #3
 701 003c EFD1     		bne	.L53
 702 003e 00E0     		b	.L50
 703              	.LVL50:
 704              	.L54:
ARM GAS  /tmp/ccettC69.s 			page 59


2575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 705              		.loc 1 2575 0 is_stmt 1
 706 0040 0025     		movs	r5, #0
 707              	.LVL51:
 708              	.L50:
2609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
2610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
2611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
2612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM
2613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return status;
2615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 709              		.loc 1 2615 0
 710 0042 2846     		mov	r0, r5
 711 0044 70BD     		pop	{r4, r5, r6, pc}
 712              		.cfi_endproc
 713              	.LFE310:
 715 0046 00BF     		.section	.text.RTC_ExitInitMode,"ax",%progbits
 716              		.align	2
 717              		.global	RTC_ExitInitMode
 718              		.thumb
 719              		.thumb_func
 721              	RTC_ExitInitMode:
 722              	.LFB311:
2616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
2618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Exit the RTC Initialization mode.
2619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
2620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
2621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
2622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef RTC_ExitInitMode(RTC_HandleTypeDef *hrtc)
2623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 723              		.loc 1 2623 0
 724              		.cfi_startproc
 725              		@ args = 0, pretend = 0, frame = 0
 726              		@ frame_needed = 0, uses_anonymous_args = 0
 727              	.LVL52:
 728 0000 10B5     		push	{r4, lr}
 729              	.LCFI5:
 730              		.cfi_def_cfa_offset 8
 731              		.cfi_offset 4, -8
 732              		.cfi_offset 14, -4
 733 0002 0446     		mov	r4, r0
 734              	.LVL53:
2624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   HAL_StatusTypeDef status = HAL_OK;
2625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Exit Initialization mode */
2627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined(STM32L4P5xx) || defined(STM32L4Q5xx)
2628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   CLEAR_BIT(RTC->ICSR, RTC_ICSR_INIT);
2629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #else
2630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Exit Initialization mode */
2631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   CLEAR_BIT(RTC->ISR, RTC_ISR_INIT);
 735              		.loc 1 2631 0
 736 0004 124B     		ldr	r3, .L63
 737 0006 DA68     		ldr	r2, [r3, #12]
 738 0008 22F08002 		bic	r2, r2, #128
 739 000c DA60     		str	r2, [r3, #12]
ARM GAS  /tmp/ccettC69.s 			page 60


2632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
2633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* If CR_BYPSHAD bit = 0, wait for synchro */
2635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (READ_BIT(RTC->CR, RTC_CR_BYPSHAD) == 0U)
 740              		.loc 1 2635 0
 741 000e 9B68     		ldr	r3, [r3, #8]
 742 0010 13F0200F 		tst	r3, #32
 743 0014 06D1     		bne	.L57
2636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
2637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
 744              		.loc 1 2637 0
 745 0016 FFF7FEFF 		bl	HAL_RTC_WaitForSynchro
 746              	.LVL54:
 747 001a B0B1     		cbz	r0, .L60
2638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
2639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->State = HAL_RTC_STATE_TIMEOUT;
 748              		.loc 1 2639 0
 749 001c 0320     		movs	r0, #3
 750 001e 84F82100 		strb	r0, [r4, #33]
 751              	.LVL55:
 752 0022 10BD     		pop	{r4, pc}
 753              	.LVL56:
 754              	.L57:
2640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       status = HAL_TIMEOUT;
2641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
2642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
2643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else /* WA 2.9.6 Calendar initialization may fail in case of consecutive INIT mode entry */
2644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
2645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Clear BYPSHAD bit */
2646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     CLEAR_BIT(RTC->CR, RTC_CR_BYPSHAD);
 755              		.loc 1 2646 0
 756 0024 0A4A     		ldr	r2, .L63
 757 0026 9368     		ldr	r3, [r2, #8]
 758 0028 23F02003 		bic	r3, r3, #32
 759 002c 9360     		str	r3, [r2, #8]
2647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
 760              		.loc 1 2647 0
 761 002e FFF7FEFF 		bl	HAL_RTC_WaitForSynchro
 762              	.LVL57:
 763 0032 18B1     		cbz	r0, .L61
2648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
2649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->State = HAL_RTC_STATE_TIMEOUT;
 764              		.loc 1 2649 0
 765 0034 0320     		movs	r0, #3
 766 0036 84F82100 		strb	r0, [r4, #33]
 767              	.LVL58:
 768 003a 00E0     		b	.L59
 769              	.LVL59:
 770              	.L61:
2624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 771              		.loc 1 2624 0
 772 003c 0020     		movs	r0, #0
 773              	.LVL60:
 774              	.L59:
2650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       status = HAL_TIMEOUT;
2651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
2652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Restore BYPSHAD bit */
ARM GAS  /tmp/ccettC69.s 			page 61


2653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     SET_BIT(RTC->CR, RTC_CR_BYPSHAD);
 775              		.loc 1 2653 0
 776 003e 044A     		ldr	r2, .L63
 777 0040 9368     		ldr	r3, [r2, #8]
 778 0042 43F02003 		orr	r3, r3, #32
 779 0046 9360     		str	r3, [r2, #8]
 780 0048 10BD     		pop	{r4, pc}
 781              	.LVL61:
 782              	.L60:
2624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 783              		.loc 1 2624 0
 784 004a 0020     		movs	r0, #0
 785              	.LVL62:
2654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
2655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return status;
2657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 786              		.loc 1 2657 0
 787 004c 10BD     		pop	{r4, pc}
 788              	.LVL63:
 789              	.L64:
 790 004e 00BF     		.align	2
 791              	.L63:
 792 0050 00280040 		.word	1073752064
 793              		.cfi_endproc
 794              	.LFE311:
 796              		.section	.text.HAL_RTC_Init,"ax",%progbits
 797              		.align	2
 798              		.global	HAL_RTC_Init
 799              		.thumb
 800              		.thumb_func
 802              	HAL_RTC_Init:
 803              	.LFB288:
 247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 804              		.loc 1 247 0
 805              		.cfi_startproc
 806              		@ args = 0, pretend = 0, frame = 0
 807              		@ frame_needed = 0, uses_anonymous_args = 0
 808              	.LVL64:
 809 0000 38B5     		push	{r3, r4, r5, lr}
 810              	.LCFI6:
 811              		.cfi_def_cfa_offset 16
 812              		.cfi_offset 3, -16
 813              		.cfi_offset 4, -12
 814              		.cfi_offset 5, -8
 815              		.cfi_offset 14, -4
 816              	.LVL65:
 251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 817              		.loc 1 251 0
 818 0002 0028     		cmp	r0, #0
 819 0004 4AD0     		beq	.L68
 820 0006 0446     		mov	r4, r0
 305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 821              		.loc 1 305 0
 822 0008 90F82130 		ldrb	r3, [r0, #33]	@ zero_extendqisi2
 823 000c 13F0FF0F 		tst	r3, #255
 824 0010 04D1     		bne	.L67
ARM GAS  /tmp/ccettC69.s 			page 62


 308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 825              		.loc 1 308 0
 826 0012 0023     		movs	r3, #0
 827 0014 80F82030 		strb	r3, [r0, #32]
 311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 828              		.loc 1 311 0
 829 0018 FFF7FEFF 		bl	HAL_RTC_MspInit
 830              	.LVL66:
 831              	.L67:
 320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 832              		.loc 1 320 0
 833 001c 0223     		movs	r3, #2
 834 001e 84F82130 		strb	r3, [r4, #33]
 323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 835              		.loc 1 323 0
 836 0022 2368     		ldr	r3, [r4]
 837 0024 CA22     		movs	r2, #202
 838 0026 5A62     		str	r2, [r3, #36]
 839 0028 2368     		ldr	r3, [r4]
 840 002a 5322     		movs	r2, #83
 841 002c 5A62     		str	r2, [r3, #36]
 326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 842              		.loc 1 326 0
 843 002e 2046     		mov	r0, r4
 844 0030 FFF7FEFF 		bl	RTC_EnterInitMode
 845              	.LVL67:
 328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 846              		.loc 1 328 0
 847 0034 0346     		mov	r3, r0
 848 0036 0028     		cmp	r0, #0
 849 0038 31D1     		bne	.L66
 335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 850              		.loc 1 335 0
 851 003a 2268     		ldr	r2, [r4]
 852 003c 9368     		ldr	r3, [r2, #8]
 853 003e 23F4E003 		bic	r3, r3, #7340032
 854 0042 23F04003 		bic	r3, r3, #64
 855 0046 9360     		str	r3, [r2, #8]
 338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 856              		.loc 1 338 0
 857 0048 2168     		ldr	r1, [r4]
 858 004a 8868     		ldr	r0, [r1, #8]
 859              	.LVL68:
 860 004c 6368     		ldr	r3, [r4, #4]
 861 004e 2269     		ldr	r2, [r4, #16]
 862 0050 1A43     		orrs	r2, r2, r3
 863 0052 A369     		ldr	r3, [r4, #24]
 864 0054 1343     		orrs	r3, r3, r2
 865 0056 0343     		orrs	r3, r3, r0
 866 0058 8B60     		str	r3, [r1, #8]
 341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->PRER |= (hrtc->Init.AsynchPrediv << RTC_PRER_PREDIV_A_Pos);
 867              		.loc 1 341 0
 868 005a 2368     		ldr	r3, [r4]
 869 005c E268     		ldr	r2, [r4, #12]
 870 005e 1A61     		str	r2, [r3, #16]
 342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 871              		.loc 1 342 0
ARM GAS  /tmp/ccettC69.s 			page 63


 872 0060 2268     		ldr	r2, [r4]
 873 0062 1369     		ldr	r3, [r2, #16]
 874 0064 A168     		ldr	r1, [r4, #8]
 875 0066 43EA0143 		orr	r3, r3, r1, lsl #16
 876 006a 1361     		str	r3, [r2, #16]
 350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 877              		.loc 1 350 0
 878 006c 2046     		mov	r0, r4
 879 006e FFF7FEFF 		bl	RTC_ExitInitMode
 880              	.LVL69:
 352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 881              		.loc 1 352 0
 882 0072 0346     		mov	r3, r0
 883 0074 98B9     		cbnz	r0, .L66
 358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Instance->OR |= (hrtc->Init.OutPutType | hrtc->Init.OutPutRemap);
 884              		.loc 1 358 0
 885 0076 2168     		ldr	r1, [r4]
 886 0078 CA6C     		ldr	r2, [r1, #76]
 887 007a 22F00302 		bic	r2, r2, #3
 888 007e CA64     		str	r2, [r1, #76]
 359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 889              		.loc 1 359 0
 890 0080 2168     		ldr	r1, [r4]
 891 0082 C86C     		ldr	r0, [r1, #76]
 892              	.LVL70:
 893 0084 E569     		ldr	r5, [r4, #28]
 894 0086 6269     		ldr	r2, [r4, #20]
 895 0088 2A43     		orrs	r2, r2, r5
 896 008a 0243     		orrs	r2, r2, r0
 897 008c CA64     		str	r2, [r1, #76]
 363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 898              		.loc 1 363 0
 899 008e 2268     		ldr	r2, [r4]
 900 0090 FF21     		movs	r1, #255
 901 0092 5162     		str	r1, [r2, #36]
 365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
 902              		.loc 1 365 0
 903 0094 0122     		movs	r2, #1
 904 0096 84F82120 		strb	r2, [r4, #33]
 905 009a 00E0     		b	.L66
 906              	.LVL71:
 907              	.L68:
 248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 908              		.loc 1 248 0
 909 009c 0123     		movs	r3, #1
 910              	.LVL72:
 911              	.L66:
 371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 912              		.loc 1 371 0
 913 009e 1846     		mov	r0, r3
 914 00a0 38BD     		pop	{r3, r4, r5, pc}
 915              		.cfi_endproc
 916              	.LFE288:
 918 00a2 00BF     		.section	.text.HAL_RTC_DeInit,"ax",%progbits
 919              		.align	2
 920              		.global	HAL_RTC_DeInit
 921              		.thumb
ARM GAS  /tmp/ccettC69.s 			page 64


 922              		.thumb_func
 924              	HAL_RTC_DeInit:
 925              	.LFB289:
 380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 926              		.loc 1 380 0
 927              		.cfi_startproc
 928              		@ args = 0, pretend = 0, frame = 0
 929              		@ frame_needed = 0, uses_anonymous_args = 0
 930              	.LVL73:
 931 0000 70B5     		push	{r4, r5, r6, lr}
 932              	.LCFI7:
 933              		.cfi_def_cfa_offset 16
 934              		.cfi_offset 4, -16
 935              		.cfi_offset 5, -12
 936              		.cfi_offset 6, -8
 937              		.cfi_offset 14, -4
 938              	.LVL74:
 384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 939              		.loc 1 384 0
 940 0002 0028     		cmp	r0, #0
 941 0004 40D0     		beq	.L72
 942 0006 0446     		mov	r4, r0
 390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 943              		.loc 1 390 0
 944 0008 0223     		movs	r3, #2
 945 000a 80F82130 		strb	r3, [r0, #33]
 393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 946              		.loc 1 393 0
 947 000e 0368     		ldr	r3, [r0]
 948 0010 CA22     		movs	r2, #202
 949 0012 5A62     		str	r2, [r3, #36]
 950 0014 0368     		ldr	r3, [r0]
 951 0016 5322     		movs	r2, #83
 952 0018 5A62     		str	r2, [r3, #36]
 396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 953              		.loc 1 396 0
 954 001a FFF7FEFF 		bl	RTC_EnterInitMode
 955              	.LVL75:
 398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 956              		.loc 1 398 0
 957 001e 0546     		mov	r5, r0
 958 0020 0028     		cmp	r0, #0
 959 0022 32D1     		bne	.L71
 401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->DR = ((uint32_t)(RTC_DR_WDU_0 | RTC_DR_MU_0 | RTC_DR_DU_0));
 960              		.loc 1 401 0
 961 0024 2268     		ldr	r2, [r4]
 962 0026 0023     		movs	r3, #0
 963 0028 1360     		str	r3, [r2]
 402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->CR &= 0x00000000U;
 964              		.loc 1 402 0
 965 002a 2268     		ldr	r2, [r4]
 966 002c 42F20111 		movw	r1, #8449
 967 0030 5160     		str	r1, [r2, #4]
 403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 968              		.loc 1 403 0
 969 0032 2268     		ldr	r2, [r4]
 970 0034 9168     		ldr	r1, [r2, #8]
ARM GAS  /tmp/ccettC69.s 			page 65


 971 0036 9360     		str	r3, [r2, #8]
 405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->PRER = ((uint32_t)(RTC_PRER_PREDIV_A | 0x000000FFU));
 972              		.loc 1 405 0
 973 0038 2268     		ldr	r2, [r4]
 974 003a 4FF6FF71 		movw	r1, #65535
 975 003e 5161     		str	r1, [r2, #20]
 406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->ALRMAR = 0x00000000U;
 976              		.loc 1 406 0
 977 0040 2268     		ldr	r2, [r4]
 978 0042 1349     		ldr	r1, .L74
 979 0044 1161     		str	r1, [r2, #16]
 407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->ALRMBR = 0x00000000U;
 980              		.loc 1 407 0
 981 0046 2268     		ldr	r2, [r4]
 982 0048 D361     		str	r3, [r2, #28]
 408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->SHIFTR = 0x00000000U;
 983              		.loc 1 408 0
 984 004a 2268     		ldr	r2, [r4]
 985 004c 1362     		str	r3, [r2, #32]
 409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->CALR = 0x00000000U;
 986              		.loc 1 409 0
 987 004e 2268     		ldr	r2, [r4]
 988 0050 D362     		str	r3, [r2, #44]
 410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->ALRMASSR = 0x00000000U;
 989              		.loc 1 410 0
 990 0052 2268     		ldr	r2, [r4]
 991 0054 D363     		str	r3, [r2, #60]
 411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->ALRMBSSR = 0x00000000U;
 992              		.loc 1 411 0
 993 0056 2268     		ldr	r2, [r4]
 994 0058 5364     		str	r3, [r2, #68]
 412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 995              		.loc 1 412 0
 996 005a 2268     		ldr	r2, [r4]
 997 005c 9364     		str	r3, [r2, #72]
 415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 998              		.loc 1 415 0
 999 005e 2046     		mov	r0, r4
 1000              	.LVL76:
 1001 0060 FFF7FEFF 		bl	RTC_ExitInitMode
 1002              	.LVL77:
 418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 1003              		.loc 1 418 0
 1004 0064 0546     		mov	r5, r0
 1005 0066 80B9     		cbnz	r0, .L71
 426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1006              		.loc 1 426 0
 1007 0068 2368     		ldr	r3, [r4]
 1008 006a 0026     		movs	r6, #0
 1009 006c 1E64     		str	r6, [r3, #64]
 429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 1010              		.loc 1 429 0
 1011 006e 2368     		ldr	r3, [r4]
 1012 0070 DE64     		str	r6, [r3, #76]
 433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1013              		.loc 1 433 0
 1014 0072 2368     		ldr	r3, [r4]
ARM GAS  /tmp/ccettC69.s 			page 66


 1015 0074 FF22     		movs	r2, #255
 1016 0076 5A62     		str	r2, [r3, #36]
 445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* (USE_HAL_RTC_REGISTER_CALLBACKS) */
 1017              		.loc 1 445 0
 1018 0078 2046     		mov	r0, r4
 1019              	.LVL78:
 1020 007a FFF7FEFF 		bl	HAL_RTC_MspDeInit
 1021              	.LVL79:
 448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1022              		.loc 1 448 0
 1023 007e 84F82160 		strb	r6, [r4, #33]
 451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
 1024              		.loc 1 451 0
 1025 0082 84F82060 		strb	r6, [r4, #32]
 1026 0086 00E0     		b	.L71
 1027              	.LVL80:
 1028              	.L72:
 381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1029              		.loc 1 381 0
 1030 0088 0125     		movs	r5, #1
 1031              	.LVL81:
 1032              	.L71:
 457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1033              		.loc 1 457 0
 1034 008a 2846     		mov	r0, r5
 1035 008c 70BD     		pop	{r4, r5, r6, pc}
 1036              	.LVL82:
 1037              	.L75:
 1038 008e 00BF     		.align	2
 1039              	.L74:
 1040 0090 FF007F00 		.word	8323327
 1041              		.cfi_endproc
 1042              	.LFE289:
 1044              		.section	.text.RTC_ByteToBcd2,"ax",%progbits
 1045              		.align	2
 1046              		.global	RTC_ByteToBcd2
 1047              		.thumb
 1048              		.thumb_func
 1050              	RTC_ByteToBcd2:
 1051              	.LFB312:
2658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
2662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Convert a 2 digit decimal to BCD format.
2663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  Value Byte to be converted
2664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval Converted byte
2665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
2666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** uint8_t RTC_ByteToBcd2(uint8_t Value)
2667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 1052              		.loc 1 2667 0
 1053              		.cfi_startproc
 1054              		@ args = 0, pretend = 0, frame = 0
 1055              		@ frame_needed = 0, uses_anonymous_args = 0
 1056              		@ link register save eliminated.
 1057              	.LVL83:
2668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t bcdhigh = 0U;
ARM GAS  /tmp/ccettC69.s 			page 67


 1058              		.loc 1 2668 0
 1059 0000 0023     		movs	r3, #0
2669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint8_t temp = Value;
2670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   while (temp >= 10U)
 1060              		.loc 1 2671 0
 1061 0002 02E0     		b	.L77
 1062              	.LVL84:
 1063              	.L78:
2672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
2673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     bcdhigh++;
 1064              		.loc 1 2673 0
 1065 0004 0133     		adds	r3, r3, #1
 1066              	.LVL85:
2674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     temp -= 10U;
 1067              		.loc 1 2674 0
 1068 0006 0A38     		subs	r0, r0, #10
 1069              	.LVL86:
 1070 0008 C0B2     		uxtb	r0, r0
 1071              	.LVL87:
 1072              	.L77:
2671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 1073              		.loc 1 2671 0
 1074 000a 0928     		cmp	r0, #9
 1075 000c FAD8     		bhi	.L78
2675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
2676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return ((uint8_t)(bcdhigh << 4U) | temp);
 1076              		.loc 1 2677 0
 1077 000e 1B01     		lsls	r3, r3, #4
 1078              	.LVL88:
 1079 0010 DBB2     		uxtb	r3, r3
2678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 1080              		.loc 1 2678 0
 1081 0012 1843     		orrs	r0, r0, r3
 1082              	.LVL89:
 1083 0014 7047     		bx	lr
 1084              		.cfi_endproc
 1085              	.LFE312:
 1087 0016 00BF     		.section	.text.HAL_RTC_SetTime,"ax",%progbits
 1088              		.align	2
 1089              		.global	HAL_RTC_SetTime
 1090              		.thumb
 1091              		.thumb_func
 1093              	HAL_RTC_SetTime:
 1094              	.LFB292:
1443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tmpreg;
 1095              		.loc 1 1443 0
 1096              		.cfi_startproc
 1097              		@ args = 0, pretend = 0, frame = 0
 1098              		@ frame_needed = 0, uses_anonymous_args = 0
 1099              	.LVL90:
1453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1100              		.loc 1 1453 0
 1101 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1102 0004 012B     		cmp	r3, #1
 1103 0006 60D0     		beq	.L87
ARM GAS  /tmp/ccettC69.s 			page 68


1443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tmpreg;
 1104              		.loc 1 1443 0 discriminator 2
 1105 0008 70B5     		push	{r4, r5, r6, lr}
 1106              	.LCFI8:
 1107              		.cfi_def_cfa_offset 16
 1108              		.cfi_offset 4, -16
 1109              		.cfi_offset 5, -12
 1110              		.cfi_offset 6, -8
 1111              		.cfi_offset 14, -4
 1112 000a 1646     		mov	r6, r2
 1113 000c 0D46     		mov	r5, r1
 1114 000e 0446     		mov	r4, r0
1453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1115              		.loc 1 1453 0 discriminator 2
 1116 0010 0123     		movs	r3, #1
 1117 0012 80F82030 		strb	r3, [r0, #32]
1455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1118              		.loc 1 1455 0 discriminator 2
 1119 0016 0223     		movs	r3, #2
 1120 0018 80F82130 		strb	r3, [r0, #33]
1458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1121              		.loc 1 1458 0 discriminator 2
 1122 001c 0368     		ldr	r3, [r0]
 1123 001e CA22     		movs	r2, #202
 1124              	.LVL91:
 1125 0020 5A62     		str	r2, [r3, #36]
 1126 0022 0368     		ldr	r3, [r0]
 1127 0024 5322     		movs	r2, #83
 1128 0026 5A62     		str	r2, [r3, #36]
1461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (status == HAL_OK)
 1129              		.loc 1 1461 0 discriminator 2
 1130 0028 FFF7FEFF 		bl	RTC_EnterInitMode
 1131              	.LVL92:
1462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 1132              		.loc 1 1462 0 discriminator 2
 1133 002c 0346     		mov	r3, r0
 1134 002e 0028     		cmp	r0, #0
 1135 0030 3FD1     		bne	.L81
1464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 1136              		.loc 1 1464 0
 1137 0032 BEB9     		cbnz	r6, .L82
1466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 1138              		.loc 1 1466 0
 1139 0034 2368     		ldr	r3, [r4]
 1140 0036 9B68     		ldr	r3, [r3, #8]
 1141 0038 13F0400F 		tst	r3, #64
 1142 003c 01D1     		bne	.L83
1473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_HOUR24(sTime->Hours));
 1143              		.loc 1 1473 0
 1144 003e 0023     		movs	r3, #0
 1145 0040 EB70     		strb	r3, [r5, #3]
 1146              	.L83:
1479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                           ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << RTC_TR_MNU_Pos) | \
 1147              		.loc 1 1479 0
 1148 0042 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 1149              	.LVL93:
 1150 0044 FFF7FEFF 		bl	RTC_ByteToBcd2
ARM GAS  /tmp/ccettC69.s 			page 69


 1151              	.LVL94:
 1152 0048 0604     		lsls	r6, r0, #16
 1153              	.LVL95:
1480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                           ((uint32_t)RTC_ByteToBcd2(sTime->Seconds) << RTC_TR_SU_Pos) | \
 1154              		.loc 1 1480 0
 1155 004a 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2
 1156 004c FFF7FEFF 		bl	RTC_ByteToBcd2
 1157              	.LVL96:
1479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                           ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << RTC_TR_MNU_Pos) | \
 1158              		.loc 1 1479 0
 1159 0050 46EA0026 		orr	r6, r6, r0, lsl #8
1481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                           (((uint32_t)sTime->TimeFormat) << RTC_TR_PM_Pos));
 1160              		.loc 1 1481 0
 1161 0054 A878     		ldrb	r0, [r5, #2]	@ zero_extendqisi2
 1162 0056 FFF7FEFF 		bl	RTC_ByteToBcd2
 1163              	.LVL97:
1480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                           ((uint32_t)RTC_ByteToBcd2(sTime->Seconds) << RTC_TR_SU_Pos) | \
 1164              		.loc 1 1480 0
 1165 005a 3043     		orrs	r0, r0, r6
1482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 1166              		.loc 1 1482 0
 1167 005c EB78     		ldrb	r3, [r5, #3]	@ zero_extendqisi2
1479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                           ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << RTC_TR_MNU_Pos) | \
 1168              		.loc 1 1479 0
 1169 005e 40EA8350 		orr	r0, r0, r3, lsl #22
 1170              	.LVL98:
 1171 0062 10E0     		b	.L84
 1172              	.LVL99:
 1173              	.L82:
1486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 1174              		.loc 1 1486 0
 1175 0064 2368     		ldr	r3, [r4]
 1176 0066 9B68     		ldr	r3, [r3, #8]
 1177 0068 13F0400F 		tst	r3, #64
 1178 006c 01D1     		bne	.L85
1493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sTime->Hours)));
 1179              		.loc 1 1493 0
 1180 006e 0023     		movs	r3, #0
 1181 0070 EB70     		strb	r3, [r5, #3]
 1182              	.L85:
1498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)(sTime->Minutes) << RTC_TR_MNU_Pos) | \
 1183              		.loc 1 1498 0
 1184 0072 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 1185              	.LVL100:
1499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)(sTime->Seconds) << RTC_TR_SU_Pos) | \
 1186              		.loc 1 1499 0
 1187 0074 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 1188 0076 1B02     		lsls	r3, r3, #8
1498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)(sTime->Minutes) << RTC_TR_MNU_Pos) | \
 1189              		.loc 1 1498 0
 1190 0078 43EA0040 		orr	r0, r3, r0, lsl #16
1500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)(sTime->TimeFormat) << RTC_TR_PM_Pos));
 1191              		.loc 1 1500 0
 1192 007c AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2
1499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)(sTime->Seconds) << RTC_TR_SU_Pos) | \
 1193              		.loc 1 1499 0
 1194 007e 0343     		orrs	r3, r3, r0
ARM GAS  /tmp/ccettC69.s 			page 70


1501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 1195              		.loc 1 1501 0
 1196 0080 E878     		ldrb	r0, [r5, #3]	@ zero_extendqisi2
1498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)(sTime->Minutes) << RTC_TR_MNU_Pos) | \
 1197              		.loc 1 1498 0
 1198 0082 43EA8050 		orr	r0, r3, r0, lsl #22
 1199              	.LVL101:
 1200              	.L84:
1505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1201              		.loc 1 1505 0
 1202 0086 2368     		ldr	r3, [r4]
 1203 0088 00F07F30 		and	r0, r0, #2139062143
 1204              	.LVL102:
 1205 008c 20F0FE40 		bic	r0, r0, #2130706432
 1206 0090 1860     		str	r0, [r3]
1508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1207              		.loc 1 1508 0
 1208 0092 2268     		ldr	r2, [r4]
 1209 0094 9368     		ldr	r3, [r2, #8]
 1210 0096 23F48023 		bic	r3, r3, #262144
 1211 009a 9360     		str	r3, [r2, #8]
1511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1212              		.loc 1 1511 0
 1213 009c 2168     		ldr	r1, [r4]
 1214 009e 8868     		ldr	r0, [r1, #8]
 1215 00a0 EB68     		ldr	r3, [r5, #12]
 1216 00a2 2A69     		ldr	r2, [r5, #16]
 1217 00a4 1343     		orrs	r3, r3, r2
 1218 00a6 0343     		orrs	r3, r3, r0
 1219 00a8 8B60     		str	r3, [r1, #8]
1514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 1220              		.loc 1 1514 0
 1221 00aa 2046     		mov	r0, r4
 1222 00ac FFF7FEFF 		bl	RTC_ExitInitMode
 1223              	.LVL103:
 1224 00b0 0346     		mov	r3, r0
 1225              	.LVL104:
 1226              	.L81:
1518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1227              		.loc 1 1518 0
 1228 00b2 2268     		ldr	r2, [r4]
 1229 00b4 FF21     		movs	r1, #255
 1230 00b6 5162     		str	r1, [r2, #36]
1520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 1231              		.loc 1 1520 0
 1232 00b8 13B9     		cbnz	r3, .L86
1522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 1233              		.loc 1 1522 0
 1234 00ba 0122     		movs	r2, #1
 1235 00bc 84F82120 		strb	r2, [r4, #33]
 1236              	.L86:
1526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1237              		.loc 1 1526 0
 1238 00c0 0022     		movs	r2, #0
 1239 00c2 84F82020 		strb	r2, [r4, #32]
1528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 1240              		.loc 1 1528 0
ARM GAS  /tmp/ccettC69.s 			page 71


 1241 00c6 1846     		mov	r0, r3
 1242 00c8 70BD     		pop	{r4, r5, r6, pc}
 1243              	.LVL105:
 1244              	.L87:
 1245              	.LCFI9:
 1246              		.cfi_def_cfa_offset 0
 1247              		.cfi_restore 4
 1248              		.cfi_restore 5
 1249              		.cfi_restore 6
 1250              		.cfi_restore 14
1453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1251              		.loc 1 1453 0
 1252 00ca 0220     		movs	r0, #2
 1253              	.LVL106:
 1254 00cc 7047     		bx	lr
 1255              		.cfi_endproc
 1256              	.LFE292:
 1258 00ce 00BF     		.section	.text.HAL_RTC_SetDate,"ax",%progbits
 1259              		.align	2
 1260              		.global	HAL_RTC_SetDate
 1261              		.thumb
 1262              		.thumb_func
 1264              	HAL_RTC_SetDate:
 1265              	.LFB294:
1597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t datetmpreg;
 1266              		.loc 1 1597 0
 1267              		.cfi_startproc
 1268              		@ args = 0, pretend = 0, frame = 0
 1269              		@ frame_needed = 0, uses_anonymous_args = 0
 1270              	.LVL107:
1605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1271              		.loc 1 1605 0
 1272 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1273 0004 012B     		cmp	r3, #1
 1274 0006 4ED0     		beq	.L97
1597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t datetmpreg;
 1275              		.loc 1 1597 0 discriminator 2
 1276 0008 70B5     		push	{r4, r5, r6, lr}
 1277              	.LCFI10:
 1278              		.cfi_def_cfa_offset 16
 1279              		.cfi_offset 4, -16
 1280              		.cfi_offset 5, -12
 1281              		.cfi_offset 6, -8
 1282              		.cfi_offset 14, -4
1605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1283              		.loc 1 1605 0 discriminator 2
 1284 000a 0123     		movs	r3, #1
 1285 000c 80F82030 		strb	r3, [r0, #32]
1607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1286              		.loc 1 1607 0 discriminator 2
 1287 0010 0223     		movs	r3, #2
 1288 0012 80F82130 		strb	r3, [r0, #33]
1609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 1289              		.loc 1 1609 0 discriminator 2
 1290 0016 3AB9     		cbnz	r2, .L92
1609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 1291              		.loc 1 1609 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccettC69.s 			page 72


 1292 0018 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 1293 001a 13F0100F 		tst	r3, #16
 1294 001e 03D0     		beq	.L92
1611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 1295              		.loc 1 1611 0 is_stmt 1
 1296 0020 23F01003 		bic	r3, r3, #16
 1297 0024 0A33     		adds	r3, r3, #10
 1298 0026 4B70     		strb	r3, [r1, #1]
 1299              	.L92:
 1300 0028 0D46     		mov	r5, r1
 1301 002a 0446     		mov	r4, r0
1616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 1302              		.loc 1 1616 0
 1303 002c 82B9     		cbnz	r2, .L93
1622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   ((uint32_t)RTC_ByteToBcd2(sDate->Month) << RTC_DR_MU_Pos) | \
 1304              		.loc 1 1622 0
 1305 002e C878     		ldrb	r0, [r1, #3]	@ zero_extendqisi2
 1306              	.LVL108:
 1307 0030 FFF7FEFF 		bl	RTC_ByteToBcd2
 1308              	.LVL109:
 1309 0034 0604     		lsls	r6, r0, #16
1623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   ((uint32_t)RTC_ByteToBcd2(sDate->Date) << RTC_DR_DU_Pos) | \
 1310              		.loc 1 1623 0
 1311 0036 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2
 1312 0038 FFF7FEFF 		bl	RTC_ByteToBcd2
 1313              	.LVL110:
1622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   ((uint32_t)RTC_ByteToBcd2(sDate->Month) << RTC_DR_MU_Pos) | \
 1314              		.loc 1 1622 0
 1315 003c 46EA0026 		orr	r6, r6, r0, lsl #8
1624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   ((uint32_t)sDate->WeekDay << RTC_DR_WDU_Pos));
 1316              		.loc 1 1624 0
 1317 0040 A878     		ldrb	r0, [r5, #2]	@ zero_extendqisi2
 1318 0042 FFF7FEFF 		bl	RTC_ByteToBcd2
 1319              	.LVL111:
1623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   ((uint32_t)RTC_ByteToBcd2(sDate->Date) << RTC_DR_DU_Pos) | \
 1320              		.loc 1 1623 0
 1321 0046 3043     		orrs	r0, r0, r6
1625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 1322              		.loc 1 1625 0
 1323 0048 2D78     		ldrb	r5, [r5]	@ zero_extendqisi2
 1324              	.LVL112:
1622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   ((uint32_t)RTC_ByteToBcd2(sDate->Month) << RTC_DR_MU_Pos) | \
 1325              		.loc 1 1622 0
 1326 004a 40EA4535 		orr	r5, r0, r5, lsl #13
 1327              	.LVL113:
 1328 004e 09E0     		b	.L94
 1329              	.LVL114:
 1330              	.L93:
1633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   (((uint32_t)sDate->Month) << RTC_DR_MU_Pos) | \
 1331              		.loc 1 1633 0
 1332 0050 C878     		ldrb	r0, [r1, #3]	@ zero_extendqisi2
 1333              	.LVL115:
1634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   (((uint32_t)sDate->Date) << RTC_DR_DU_Pos) | \
 1334              		.loc 1 1634 0
 1335 0052 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 1336 0054 1B02     		lsls	r3, r3, #8
1633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   (((uint32_t)sDate->Month) << RTC_DR_MU_Pos) | \
ARM GAS  /tmp/ccettC69.s 			page 73


 1337              		.loc 1 1633 0
 1338 0056 43EA0040 		orr	r0, r3, r0, lsl #16
1635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   (((uint32_t)sDate->WeekDay) << RTC_DR_WDU_Pos));
 1339              		.loc 1 1635 0
 1340 005a 8B78     		ldrb	r3, [r1, #2]	@ zero_extendqisi2
1634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   (((uint32_t)sDate->Date) << RTC_DR_DU_Pos) | \
 1341              		.loc 1 1634 0
 1342 005c 0343     		orrs	r3, r3, r0
1636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 1343              		.loc 1 1636 0
 1344 005e 0D78     		ldrb	r5, [r1]	@ zero_extendqisi2
1633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   (((uint32_t)sDate->Month) << RTC_DR_MU_Pos) | \
 1345              		.loc 1 1633 0
 1346 0060 43EA4535 		orr	r5, r3, r5, lsl #13
 1347              	.LVL116:
 1348              	.L94:
1640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1349              		.loc 1 1640 0
 1350 0064 2368     		ldr	r3, [r4]
 1351 0066 CA22     		movs	r2, #202
 1352 0068 5A62     		str	r2, [r3, #36]
 1353 006a 2368     		ldr	r3, [r4]
 1354 006c 5322     		movs	r2, #83
 1355 006e 5A62     		str	r2, [r3, #36]
1643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (status == HAL_OK)
 1356              		.loc 1 1643 0
 1357 0070 2046     		mov	r0, r4
 1358 0072 FFF7FEFF 		bl	RTC_EnterInitMode
 1359              	.LVL117:
1644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 1360              		.loc 1 1644 0
 1361 0076 0346     		mov	r3, r0
 1362 0078 48B9     		cbnz	r0, .L95
1647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1363              		.loc 1 1647 0
 1364 007a 2368     		ldr	r3, [r4]
 1365 007c 25F07F45 		bic	r5, r5, #-16777216
 1366              	.LVL118:
 1367 0080 25F0C005 		bic	r5, r5, #192
 1368 0084 5D60     		str	r5, [r3, #4]
1650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 1369              		.loc 1 1650 0
 1370 0086 2046     		mov	r0, r4
 1371              	.LVL119:
 1372 0088 FFF7FEFF 		bl	RTC_ExitInitMode
 1373              	.LVL120:
 1374 008c 0346     		mov	r3, r0
 1375              	.LVL121:
 1376              	.L95:
1654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1377              		.loc 1 1654 0
 1378 008e 2268     		ldr	r2, [r4]
 1379 0090 FF21     		movs	r1, #255
 1380 0092 5162     		str	r1, [r2, #36]
1656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 1381              		.loc 1 1656 0
 1382 0094 13B9     		cbnz	r3, .L96
ARM GAS  /tmp/ccettC69.s 			page 74


1658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 1383              		.loc 1 1658 0
 1384 0096 0122     		movs	r2, #1
 1385 0098 84F82120 		strb	r2, [r4, #33]
 1386              	.L96:
1662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1387              		.loc 1 1662 0
 1388 009c 0022     		movs	r2, #0
 1389 009e 84F82020 		strb	r2, [r4, #32]
1664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 1390              		.loc 1 1664 0
 1391 00a2 1846     		mov	r0, r3
 1392 00a4 70BD     		pop	{r4, r5, r6, pc}
 1393              	.LVL122:
 1394              	.L97:
 1395              	.LCFI11:
 1396              		.cfi_def_cfa_offset 0
 1397              		.cfi_restore 4
 1398              		.cfi_restore 5
 1399              		.cfi_restore 6
 1400              		.cfi_restore 14
1605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1401              		.loc 1 1605 0
 1402 00a6 0220     		movs	r0, #2
 1403              	.LVL123:
 1404 00a8 7047     		bx	lr
 1405              		.cfi_endproc
 1406              	.LFE294:
 1408 00aa 00BF     		.section	.text.HAL_RTC_SetAlarm,"ax",%progbits
 1409              		.align	2
 1410              		.global	HAL_RTC_SetAlarm
 1411              		.thumb
 1412              		.thumb_func
 1414              	HAL_RTC_SetAlarm:
 1415              	.LFB296:
1735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tmpreg, subsecondtmpreg;
 1416              		.loc 1 1735 0
 1417              		.cfi_startproc
 1418              		@ args = 0, pretend = 0, frame = 0
 1419              		@ frame_needed = 0, uses_anonymous_args = 0
 1420              	.LVL124:
 1421 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1422              	.LCFI12:
 1423              		.cfi_def_cfa_offset 24
 1424              		.cfi_offset 3, -24
 1425              		.cfi_offset 4, -20
 1426              		.cfi_offset 5, -16
 1427              		.cfi_offset 6, -12
 1428              		.cfi_offset 7, -8
 1429              		.cfi_offset 14, -4
1747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1430              		.loc 1 1747 0
 1431 0002 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1432 0006 012B     		cmp	r3, #1
 1433 0008 00F0BE80 		beq	.L112
 1434 000c 0D46     		mov	r5, r1
 1435 000e 0446     		mov	r4, r0
ARM GAS  /tmp/ccettC69.s 			page 75


1747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1436              		.loc 1 1747 0 is_stmt 0 discriminator 2
 1437 0010 0123     		movs	r3, #1
 1438 0012 80F82030 		strb	r3, [r0, #32]
1749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1439              		.loc 1 1749 0 is_stmt 1 discriminator 2
 1440 0016 0223     		movs	r3, #2
 1441 0018 80F82130 		strb	r3, [r0, #33]
1751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 1442              		.loc 1 1751 0 discriminator 2
 1443 001c 0ABB     		cbnz	r2, .L102
1753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 1444              		.loc 1 1753 0
 1445 001e 0368     		ldr	r3, [r0]
 1446 0020 9B68     		ldr	r3, [r3, #8]
 1447 0022 13F0400F 		tst	r3, #64
 1448 0026 01D1     		bne	.L103
1760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
 1449              		.loc 1 1760 0
 1450 0028 0023     		movs	r3, #0
 1451 002a CB70     		strb	r3, [r1, #3]
 1452              	.L103:
1774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 1453              		.loc 1 1774 0
 1454 002c 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 1455              	.LVL125:
 1456 002e FFF7FEFF 		bl	RTC_ByteToBcd2
 1457              	.LVL126:
 1458 0032 0604     		lsls	r6, r0, #16
1775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds) << RTC_ALRMAR_SU_Pos) | \
 1459              		.loc 1 1775 0
 1460 0034 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2
 1461 0036 FFF7FEFF 		bl	RTC_ByteToBcd2
 1462              	.LVL127:
1774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 1463              		.loc 1 1774 0
 1464 003a 46EA0026 		orr	r6, r6, r0, lsl #8
1776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << RTC_ALRMAR_PM_Pos) | \
 1465              		.loc 1 1776 0
 1466 003e A878     		ldrb	r0, [r5, #2]	@ zero_extendqisi2
 1467 0040 FFF7FEFF 		bl	RTC_ByteToBcd2
 1468              	.LVL128:
1775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds) << RTC_ALRMAR_SU_Pos) | \
 1469              		.loc 1 1775 0
 1470 0044 3043     		orrs	r0, r0, r6
1777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << RTC_ALRMAR_DU_Pos) | \
 1471              		.loc 1 1777 0
 1472 0046 EE78     		ldrb	r6, [r5, #3]	@ zero_extendqisi2
1776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << RTC_ALRMAR_PM_Pos) | \
 1473              		.loc 1 1776 0
 1474 0048 40EA8656 		orr	r6, r0, r6, lsl #22
1778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1475              		.loc 1 1778 0
 1476 004c 95F82400 		ldrb	r0, [r5, #36]	@ zero_extendqisi2
 1477 0050 FFF7FEFF 		bl	RTC_ByteToBcd2
 1478              	.LVL129:
1777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << RTC_ALRMAR_DU_Pos) | \
ARM GAS  /tmp/ccettC69.s 			page 76


 1479              		.loc 1 1777 0
 1480 0054 46EA0060 		orr	r0, r6, r0, lsl #24
1779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmMask));
 1481              		.loc 1 1779 0
 1482 0058 2E6A     		ldr	r6, [r5, #32]
1778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1483              		.loc 1 1778 0
 1484 005a 0643     		orrs	r6, r6, r0
1780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 1485              		.loc 1 1780 0
 1486 005c 6F69     		ldr	r7, [r5, #20]
1774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 1487              		.loc 1 1774 0
 1488 005e 3743     		orrs	r7, r7, r6
 1489              	.LVL130:
 1490 0060 18E0     		b	.L104
 1491              	.LVL131:
 1492              	.L102:
1784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 1493              		.loc 1 1784 0
 1494 0062 0368     		ldr	r3, [r0]
 1495 0064 9B68     		ldr	r3, [r3, #8]
 1496 0066 13F0400F 		tst	r3, #64
 1497 006a 01D1     		bne	.L105
1791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
 1498              		.loc 1 1791 0
 1499 006c 0023     		movs	r3, #0
 1500 006e CB70     		strb	r3, [r1, #3]
 1501              	.L105:
1809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 1502              		.loc 1 1809 0
 1503 0070 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 1504              	.LVL132:
1810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Seconds) << RTC_ALRMAR_SU_Pos) | \
 1505              		.loc 1 1810 0
 1506 0072 6A78     		ldrb	r2, [r5, #1]	@ zero_extendqisi2
 1507              	.LVL133:
 1508 0074 1302     		lsls	r3, r2, #8
1809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 1509              		.loc 1 1809 0
 1510 0076 43EA0142 		orr	r2, r3, r1, lsl #16
1811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << RTC_ALRMAR_PM_Pos) | \
 1511              		.loc 1 1811 0
 1512 007a AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2
1810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Seconds) << RTC_ALRMAR_SU_Pos) | \
 1513              		.loc 1 1810 0
 1514 007c 1343     		orrs	r3, r3, r2
1812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmDateWeekDay) << RTC_ALRMAR_DU_Pos) | \
 1515              		.loc 1 1812 0
 1516 007e EA78     		ldrb	r2, [r5, #3]	@ zero_extendqisi2
1811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << RTC_ALRMAR_PM_Pos) | \
 1517              		.loc 1 1811 0
 1518 0080 43EA8253 		orr	r3, r3, r2, lsl #22
1813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1519              		.loc 1 1813 0
 1520 0084 95F82470 		ldrb	r7, [r5, #36]	@ zero_extendqisi2
1812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmDateWeekDay) << RTC_ALRMAR_DU_Pos) | \
ARM GAS  /tmp/ccettC69.s 			page 77


 1521              		.loc 1 1812 0
 1522 0088 43EA0763 		orr	r3, r3, r7, lsl #24
1814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmMask));
 1523              		.loc 1 1814 0
 1524 008c 2F6A     		ldr	r7, [r5, #32]
1813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1525              		.loc 1 1813 0
 1526 008e 1F43     		orrs	r7, r7, r3
1815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 1527              		.loc 1 1815 0
 1528 0090 6B69     		ldr	r3, [r5, #20]
1809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 1529              		.loc 1 1809 0
 1530 0092 1F43     		orrs	r7, r7, r3
 1531              	.LVL134:
 1532              	.L104:
1819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1533              		.loc 1 1819 0
 1534 0094 6E68     		ldr	r6, [r5, #4]
 1535 0096 EB69     		ldr	r3, [r5, #28]
 1536 0098 1E43     		orrs	r6, r6, r3
 1537              	.LVL135:
1822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1538              		.loc 1 1822 0
 1539 009a 2368     		ldr	r3, [r4]
 1540 009c CA22     		movs	r2, #202
 1541 009e 5A62     		str	r2, [r3, #36]
 1542 00a0 2368     		ldr	r3, [r4]
 1543 00a2 5322     		movs	r2, #83
 1544 00a4 5A62     		str	r2, [r3, #36]
1825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 1545              		.loc 1 1825 0
 1546 00a6 AB6A     		ldr	r3, [r5, #40]
 1547 00a8 B3F5807F 		cmp	r3, #256
 1548 00ac 31D1     		bne	.L106
 1549              	.LBB4:
1828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Clear flag alarm A */
 1550              		.loc 1 1828 0
 1551 00ae 2268     		ldr	r2, [r4]
 1552 00b0 9368     		ldr	r3, [r2, #8]
 1553 00b2 23F48073 		bic	r3, r3, #256
 1554 00b6 9360     		str	r3, [r2, #8]
1830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* In case of interrupt mode is used, the interrupt source must disabled */
 1555              		.loc 1 1830 0
 1556 00b8 2268     		ldr	r2, [r4]
 1557 00ba D368     		ldr	r3, [r2, #12]
 1558 00bc DBB2     		uxtb	r3, r3
 1559 00be 63F4C073 		orn	r3, r3, #384
 1560 00c2 D360     		str	r3, [r2, #12]
1832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1561              		.loc 1 1832 0
 1562 00c4 2268     		ldr	r2, [r4]
 1563 00c6 9368     		ldr	r3, [r2, #8]
 1564 00c8 23F48053 		bic	r3, r3, #4096
 1565 00cc 9360     		str	r3, [r2, #8]
1835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Wait till RTC ALRAWF flag is set and if Time out is reached exit */
 1566              		.loc 1 1835 0
ARM GAS  /tmp/ccettC69.s 			page 78


 1567 00ce FFF7FEFF 		bl	HAL_GetTick
 1568              	.LVL136:
 1569 00d2 0546     		mov	r5, r0
 1570              	.LVL137:
1837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 1571              		.loc 1 1837 0
 1572 00d4 0FE0     		b	.L107
 1573              	.LVL138:
 1574              	.L108:
1839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 1575              		.loc 1 1839 0
 1576 00d6 FFF7FEFF 		bl	HAL_GetTick
 1577              	.LVL139:
 1578 00da 401B     		subs	r0, r0, r5
 1579 00dc B0F57A7F 		cmp	r0, #1000
 1580 00e0 09D9     		bls	.L107
1842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1581              		.loc 1 1842 0
 1582 00e2 2368     		ldr	r3, [r4]
 1583 00e4 FF22     		movs	r2, #255
 1584 00e6 5A62     		str	r2, [r3, #36]
1844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1585              		.loc 1 1844 0
 1586 00e8 0320     		movs	r0, #3
 1587 00ea 84F82100 		strb	r0, [r4, #33]
1847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1588              		.loc 1 1847 0
 1589 00ee 0023     		movs	r3, #0
 1590 00f0 84F82030 		strb	r3, [r4, #32]
1849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
 1591              		.loc 1 1849 0
 1592 00f4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1593              	.LVL140:
 1594              	.L107:
1837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 1595              		.loc 1 1837 0
 1596 00f6 2368     		ldr	r3, [r4]
 1597 00f8 DA68     		ldr	r2, [r3, #12]
 1598 00fa 12F0010F 		tst	r2, #1
 1599 00fe EAD0     		beq	.L108
1854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm A Sub Second register */
 1600              		.loc 1 1854 0
 1601 0100 DF61     		str	r7, [r3, #28]
1856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
 1602              		.loc 1 1856 0
 1603 0102 2368     		ldr	r3, [r4]
 1604 0104 5E64     		str	r6, [r3, #68]
1858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 1605              		.loc 1 1858 0
 1606 0106 2268     		ldr	r2, [r4]
 1607 0108 9368     		ldr	r3, [r2, #8]
 1608 010a 43F48073 		orr	r3, r3, #256
 1609 010e 9360     		str	r3, [r2, #8]
 1610              	.LBE4:
 1611 0110 30E0     		b	.L109
 1612              	.LVL141:
 1613              	.L106:
ARM GAS  /tmp/ccettC69.s 			page 79


 1614              	.LBB5:
1863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Clear flag alarm B */
 1615              		.loc 1 1863 0
 1616 0112 2268     		ldr	r2, [r4]
 1617 0114 9368     		ldr	r3, [r2, #8]
 1618 0116 23F40073 		bic	r3, r3, #512
 1619 011a 9360     		str	r3, [r2, #8]
1865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* In case of interrupt mode is used, the interrupt source must disabled */
 1620              		.loc 1 1865 0
 1621 011c 2268     		ldr	r2, [r4]
 1622 011e D368     		ldr	r3, [r2, #12]
 1623 0120 DBB2     		uxtb	r3, r3
 1624 0122 63F42073 		orn	r3, r3, #640
 1625 0126 D360     		str	r3, [r2, #12]
1867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1626              		.loc 1 1867 0
 1627 0128 2268     		ldr	r2, [r4]
 1628 012a 9368     		ldr	r3, [r2, #8]
 1629 012c 23F40053 		bic	r3, r3, #8192
 1630 0130 9360     		str	r3, [r2, #8]
1870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Wait till RTC ALRBWF flag is set and if Time out is reached exit */
 1631              		.loc 1 1870 0
 1632 0132 FFF7FEFF 		bl	HAL_GetTick
 1633              	.LVL142:
 1634 0136 0546     		mov	r5, r0
 1635              	.LVL143:
1872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 1636              		.loc 1 1872 0
 1637 0138 0FE0     		b	.L110
 1638              	.LVL144:
 1639              	.L111:
1874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 1640              		.loc 1 1874 0
 1641 013a FFF7FEFF 		bl	HAL_GetTick
 1642              	.LVL145:
 1643 013e 401B     		subs	r0, r0, r5
 1644 0140 B0F57A7F 		cmp	r0, #1000
 1645 0144 09D9     		bls	.L110
1877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1646              		.loc 1 1877 0
 1647 0146 2368     		ldr	r3, [r4]
 1648 0148 FF22     		movs	r2, #255
 1649 014a 5A62     		str	r2, [r3, #36]
1879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1650              		.loc 1 1879 0
 1651 014c 0320     		movs	r0, #3
 1652 014e 84F82100 		strb	r0, [r4, #33]
1882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1653              		.loc 1 1882 0
 1654 0152 0023     		movs	r3, #0
 1655 0154 84F82030 		strb	r3, [r4, #32]
1884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
 1656              		.loc 1 1884 0
 1657 0158 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1658              	.LVL146:
 1659              	.L110:
1872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
ARM GAS  /tmp/ccettC69.s 			page 80


 1660              		.loc 1 1872 0
 1661 015a 2368     		ldr	r3, [r4]
 1662 015c DA68     		ldr	r2, [r3, #12]
 1663 015e 12F0020F 		tst	r2, #2
 1664 0162 EAD0     		beq	.L111
1889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm B Sub Second register */
 1665              		.loc 1 1889 0
 1666 0164 1F62     		str	r7, [r3, #32]
1891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
 1667              		.loc 1 1891 0
 1668 0166 2368     		ldr	r3, [r4]
 1669 0168 9E64     		str	r6, [r3, #72]
1893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 1670              		.loc 1 1893 0
 1671 016a 2268     		ldr	r2, [r4]
 1672 016c 9368     		ldr	r3, [r2, #8]
 1673 016e 43F40073 		orr	r3, r3, #512
 1674 0172 9360     		str	r3, [r2, #8]
 1675              	.LVL147:
 1676              	.L109:
 1677              	.LBE5:
1897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1678              		.loc 1 1897 0
 1679 0174 2368     		ldr	r3, [r4]
 1680 0176 FF22     		movs	r2, #255
 1681 0178 5A62     		str	r2, [r3, #36]
1900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1682              		.loc 1 1900 0
 1683 017a 0123     		movs	r3, #1
 1684 017c 84F82130 		strb	r3, [r4, #33]
1903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1685              		.loc 1 1903 0
 1686 0180 0020     		movs	r0, #0
 1687 0182 84F82000 		strb	r0, [r4, #32]
1905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 1688              		.loc 1 1905 0
 1689 0186 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1690              	.LVL148:
 1691              	.L112:
1747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1692              		.loc 1 1747 0
 1693 0188 0220     		movs	r0, #2
 1694              	.LVL149:
1906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1695              		.loc 1 1906 0
 1696 018a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1697              		.cfi_endproc
 1698              	.LFE296:
 1700              		.section	.text.HAL_RTC_SetAlarm_IT,"ax",%progbits
 1701              		.align	2
 1702              		.global	HAL_RTC_SetAlarm_IT
 1703              		.thumb
 1704              		.thumb_func
 1706              	HAL_RTC_SetAlarm_IT:
 1707              	.LFB297:
1922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tmpreg, subsecondtmpreg;
 1708              		.loc 1 1922 0
ARM GAS  /tmp/ccettC69.s 			page 81


 1709              		.cfi_startproc
 1710              		@ args = 0, pretend = 0, frame = 0
 1711              		@ frame_needed = 0, uses_anonymous_args = 0
 1712              	.LVL150:
 1713 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1714              	.LCFI13:
 1715              		.cfi_def_cfa_offset 24
 1716              		.cfi_offset 3, -24
 1717              		.cfi_offset 4, -20
 1718              		.cfi_offset 5, -16
 1719              		.cfi_offset 6, -12
 1720              		.cfi_offset 7, -8
 1721              		.cfi_offset 14, -4
1934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1722              		.loc 1 1934 0
 1723 0002 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1724 0006 012B     		cmp	r3, #1
 1725 0008 00F0C780 		beq	.L126
 1726 000c 0D46     		mov	r5, r1
 1727 000e 0446     		mov	r4, r0
1934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1728              		.loc 1 1934 0 is_stmt 0 discriminator 2
 1729 0010 0123     		movs	r3, #1
 1730 0012 80F82030 		strb	r3, [r0, #32]
1936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1731              		.loc 1 1936 0 is_stmt 1 discriminator 2
 1732 0016 0223     		movs	r3, #2
 1733 0018 80F82130 		strb	r3, [r0, #33]
1938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 1734              		.loc 1 1938 0 discriminator 2
 1735 001c 0ABB     		cbnz	r2, .L116
1940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 1736              		.loc 1 1940 0
 1737 001e 0368     		ldr	r3, [r0]
 1738 0020 9B68     		ldr	r3, [r3, #8]
 1739 0022 13F0400F 		tst	r3, #64
 1740 0026 01D1     		bne	.L117
1947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
 1741              		.loc 1 1947 0
 1742 0028 0023     		movs	r3, #0
 1743 002a CB70     		strb	r3, [r1, #3]
 1744              	.L117:
1962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 1745              		.loc 1 1962 0
 1746 002c 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 1747              	.LVL151:
 1748 002e FFF7FEFF 		bl	RTC_ByteToBcd2
 1749              	.LVL152:
 1750 0032 0604     		lsls	r6, r0, #16
1963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds) << RTC_ALRMAR_SU_Pos) | \
 1751              		.loc 1 1963 0
 1752 0034 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2
 1753 0036 FFF7FEFF 		bl	RTC_ByteToBcd2
 1754              	.LVL153:
1962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 1755              		.loc 1 1962 0
 1756 003a 46EA0026 		orr	r6, r6, r0, lsl #8
ARM GAS  /tmp/ccettC69.s 			page 82


1964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << RTC_ALRMAR_PM_Pos) | \
 1757              		.loc 1 1964 0
 1758 003e A878     		ldrb	r0, [r5, #2]	@ zero_extendqisi2
 1759 0040 FFF7FEFF 		bl	RTC_ByteToBcd2
 1760              	.LVL154:
1963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds) << RTC_ALRMAR_SU_Pos) | \
 1761              		.loc 1 1963 0
 1762 0044 3043     		orrs	r0, r0, r6
1965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << RTC_ALRMAR_DU_Pos) | \
 1763              		.loc 1 1965 0
 1764 0046 EE78     		ldrb	r6, [r5, #3]	@ zero_extendqisi2
1964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << RTC_ALRMAR_PM_Pos) | \
 1765              		.loc 1 1964 0
 1766 0048 40EA8656 		orr	r6, r0, r6, lsl #22
1966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1767              		.loc 1 1966 0
 1768 004c 95F82400 		ldrb	r0, [r5, #36]	@ zero_extendqisi2
 1769 0050 FFF7FEFF 		bl	RTC_ByteToBcd2
 1770              	.LVL155:
1965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << RTC_ALRMAR_DU_Pos) | \
 1771              		.loc 1 1965 0
 1772 0054 46EA0060 		orr	r0, r6, r0, lsl #24
1967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmMask));
 1773              		.loc 1 1967 0
 1774 0058 2E6A     		ldr	r6, [r5, #32]
1966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1775              		.loc 1 1966 0
 1776 005a 0643     		orrs	r6, r6, r0
1968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 1777              		.loc 1 1968 0
 1778 005c 6F69     		ldr	r7, [r5, #20]
1962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 1779              		.loc 1 1962 0
 1780 005e 3743     		orrs	r7, r7, r6
 1781              	.LVL156:
 1782 0060 18E0     		b	.L118
 1783              	.LVL157:
 1784              	.L116:
1972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 1785              		.loc 1 1972 0
 1786 0062 0368     		ldr	r3, [r0]
 1787 0064 9B68     		ldr	r3, [r3, #8]
 1788 0066 13F0400F 		tst	r3, #64
 1789 006a 01D1     		bne	.L119
1979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
 1790              		.loc 1 1979 0
 1791 006c 0023     		movs	r3, #0
 1792 006e CB70     		strb	r3, [r1, #3]
 1793              	.L119:
1997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 1794              		.loc 1 1997 0
 1795 0070 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 1796              	.LVL158:
1998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Seconds) << RTC_ALRMAR_SU_Pos) | \
 1797              		.loc 1 1998 0
 1798 0072 6A78     		ldrb	r2, [r5, #1]	@ zero_extendqisi2
 1799              	.LVL159:
ARM GAS  /tmp/ccettC69.s 			page 83


 1800 0074 1302     		lsls	r3, r2, #8
1997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 1801              		.loc 1 1997 0
 1802 0076 43EA0142 		orr	r2, r3, r1, lsl #16
1999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << RTC_ALRMAR_PM_Pos) | \
 1803              		.loc 1 1999 0
 1804 007a AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2
1998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Seconds) << RTC_ALRMAR_SU_Pos) | \
 1805              		.loc 1 1998 0
 1806 007c 1343     		orrs	r3, r3, r2
2000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmDateWeekDay) << RTC_ALRMAR_DU_Pos) | \
 1807              		.loc 1 2000 0
 1808 007e EA78     		ldrb	r2, [r5, #3]	@ zero_extendqisi2
1999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << RTC_ALRMAR_PM_Pos) | \
 1809              		.loc 1 1999 0
 1810 0080 43EA8253 		orr	r3, r3, r2, lsl #22
2001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1811              		.loc 1 2001 0
 1812 0084 95F82470 		ldrb	r7, [r5, #36]	@ zero_extendqisi2
2000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmDateWeekDay) << RTC_ALRMAR_DU_Pos) | \
 1813              		.loc 1 2000 0
 1814 0088 43EA0763 		orr	r3, r3, r7, lsl #24
2002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmMask));
 1815              		.loc 1 2002 0
 1816 008c 2F6A     		ldr	r7, [r5, #32]
2001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1817              		.loc 1 2001 0
 1818 008e 1F43     		orrs	r7, r7, r3
2003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 1819              		.loc 1 2003 0
 1820 0090 6B69     		ldr	r3, [r5, #20]
1997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 1821              		.loc 1 1997 0
 1822 0092 1F43     		orrs	r7, r7, r3
 1823              	.LVL160:
 1824              	.L118:
2006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1825              		.loc 1 2006 0
 1826 0094 6E68     		ldr	r6, [r5, #4]
 1827 0096 EB69     		ldr	r3, [r5, #28]
 1828 0098 1E43     		orrs	r6, r6, r3
 1829              	.LVL161:
2009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1830              		.loc 1 2009 0
 1831 009a 2368     		ldr	r3, [r4]
 1832 009c CA22     		movs	r2, #202
 1833 009e 5A62     		str	r2, [r3, #36]
 1834 00a0 2368     		ldr	r3, [r4]
 1835 00a2 5322     		movs	r2, #83
 1836 00a4 5A62     		str	r2, [r3, #36]
2012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 1837              		.loc 1 2012 0
 1838 00a6 AB6A     		ldr	r3, [r5, #40]
 1839 00a8 B3F5807F 		cmp	r3, #256
 1840 00ac 31D1     		bne	.L120
 1841              	.LBB6:
2015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
ARM GAS  /tmp/ccettC69.s 			page 84


 1842              		.loc 1 2015 0
 1843 00ae 2268     		ldr	r2, [r4]
 1844 00b0 9368     		ldr	r3, [r2, #8]
 1845 00b2 23F48073 		bic	r3, r3, #256
 1846 00b6 9360     		str	r3, [r2, #8]
2018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1847              		.loc 1 2018 0
 1848 00b8 2268     		ldr	r2, [r4]
 1849 00ba D368     		ldr	r3, [r2, #12]
 1850 00bc DBB2     		uxtb	r3, r3
 1851 00be 63F4C073 		orn	r3, r3, #384
 1852 00c2 D360     		str	r3, [r2, #12]
2021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Wait till RTC ALRAWF flag is set and if Time out is reached exit */
 1853              		.loc 1 2021 0
 1854 00c4 FFF7FEFF 		bl	HAL_GetTick
 1855              	.LVL162:
 1856 00c8 0546     		mov	r5, r0
 1857              	.LVL163:
2023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 1858              		.loc 1 2023 0
 1859 00ca 0FE0     		b	.L121
 1860              	.LVL164:
 1861              	.L122:
2025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 1862              		.loc 1 2025 0
 1863 00cc FFF7FEFF 		bl	HAL_GetTick
 1864              	.LVL165:
 1865 00d0 401B     		subs	r0, r0, r5
 1866 00d2 B0F57A7F 		cmp	r0, #1000
 1867 00d6 09D9     		bls	.L121
2028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1868              		.loc 1 2028 0
 1869 00d8 2368     		ldr	r3, [r4]
 1870 00da FF22     		movs	r2, #255
 1871 00dc 5A62     		str	r2, [r3, #36]
2030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1872              		.loc 1 2030 0
 1873 00de 0320     		movs	r0, #3
 1874 00e0 84F82100 		strb	r0, [r4, #33]
2033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1875              		.loc 1 2033 0
 1876 00e4 0023     		movs	r3, #0
 1877 00e6 84F82030 		strb	r3, [r4, #32]
2035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
 1878              		.loc 1 2035 0
 1879 00ea F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1880              	.LVL166:
 1881              	.L121:
2023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 1882              		.loc 1 2023 0
 1883 00ec 2368     		ldr	r3, [r4]
 1884 00ee DA68     		ldr	r2, [r3, #12]
 1885 00f0 12F0010F 		tst	r2, #1
 1886 00f4 EAD0     		beq	.L122
2040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm A Sub Second register */
 1887              		.loc 1 2040 0
 1888 00f6 DF61     		str	r7, [r3, #28]
ARM GAS  /tmp/ccettC69.s 			page 85


2042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
 1889              		.loc 1 2042 0
 1890 00f8 2368     		ldr	r3, [r4]
 1891 00fa 5E64     		str	r6, [r3, #68]
2044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm interrupt */
 1892              		.loc 1 2044 0
 1893 00fc 2268     		ldr	r2, [r4]
 1894 00fe 9368     		ldr	r3, [r2, #8]
 1895 0100 43F48073 		orr	r3, r3, #256
 1896 0104 9360     		str	r3, [r2, #8]
2046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 1897              		.loc 1 2046 0
 1898 0106 2268     		ldr	r2, [r4]
 1899 0108 9368     		ldr	r3, [r2, #8]
 1900 010a 43F48053 		orr	r3, r3, #4096
 1901 010e 9360     		str	r3, [r2, #8]
 1902              	.LBE6:
 1903 0110 30E0     		b	.L123
 1904              	.LVL167:
 1905              	.L120:
 1906              	.LBB7:
2051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1907              		.loc 1 2051 0
 1908 0112 2268     		ldr	r2, [r4]
 1909 0114 9368     		ldr	r3, [r2, #8]
 1910 0116 23F40073 		bic	r3, r3, #512
 1911 011a 9360     		str	r3, [r2, #8]
2054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1912              		.loc 1 2054 0
 1913 011c 2268     		ldr	r2, [r4]
 1914 011e D368     		ldr	r3, [r2, #12]
 1915 0120 DBB2     		uxtb	r3, r3
 1916 0122 63F42073 		orn	r3, r3, #640
 1917 0126 D360     		str	r3, [r2, #12]
2057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Wait till RTC ALRBWF flag is set and if Time out is reached exit */
 1918              		.loc 1 2057 0
 1919 0128 FFF7FEFF 		bl	HAL_GetTick
 1920              	.LVL168:
 1921 012c 0546     		mov	r5, r0
 1922              	.LVL169:
2059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 1923              		.loc 1 2059 0
 1924 012e 0FE0     		b	.L124
 1925              	.LVL170:
 1926              	.L125:
2061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 1927              		.loc 1 2061 0
 1928 0130 FFF7FEFF 		bl	HAL_GetTick
 1929              	.LVL171:
 1930 0134 401B     		subs	r0, r0, r5
 1931 0136 B0F57A7F 		cmp	r0, #1000
 1932 013a 09D9     		bls	.L124
2064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1933              		.loc 1 2064 0
 1934 013c 2368     		ldr	r3, [r4]
 1935 013e FF22     		movs	r2, #255
 1936 0140 5A62     		str	r2, [r3, #36]
ARM GAS  /tmp/ccettC69.s 			page 86


2066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1937              		.loc 1 2066 0
 1938 0142 0320     		movs	r0, #3
 1939 0144 84F82100 		strb	r0, [r4, #33]
2069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1940              		.loc 1 2069 0
 1941 0148 0023     		movs	r3, #0
 1942 014a 84F82030 		strb	r3, [r4, #32]
2071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
 1943              		.loc 1 2071 0
 1944 014e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1945              	.LVL172:
 1946              	.L124:
2059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 1947              		.loc 1 2059 0
 1948 0150 2368     		ldr	r3, [r4]
 1949 0152 DA68     		ldr	r2, [r3, #12]
 1950 0154 12F0020F 		tst	r2, #2
 1951 0158 EAD0     		beq	.L125
2076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm B Sub Second register */
 1952              		.loc 1 2076 0
 1953 015a 1F62     		str	r7, [r3, #32]
2078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
 1954              		.loc 1 2078 0
 1955 015c 2368     		ldr	r3, [r4]
 1956 015e 9E64     		str	r6, [r3, #72]
2080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm interrupt */
 1957              		.loc 1 2080 0
 1958 0160 2268     		ldr	r2, [r4]
 1959 0162 9368     		ldr	r3, [r2, #8]
 1960 0164 43F40073 		orr	r3, r3, #512
 1961 0168 9360     		str	r3, [r2, #8]
2082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 1962              		.loc 1 2082 0
 1963 016a 2268     		ldr	r2, [r4]
 1964 016c 9368     		ldr	r3, [r2, #8]
 1965 016e 43F40053 		orr	r3, r3, #8192
 1966 0172 9360     		str	r3, [r2, #8]
 1967              	.LVL173:
 1968              	.L123:
 1969              	.LBE7:
2086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_ALARM_EXTI_ENABLE_RISING_EDGE();
 1970              		.loc 1 2086 0
 1971 0174 0A4B     		ldr	r3, .L128
 1972 0176 1A68     		ldr	r2, [r3]
 1973 0178 42F48022 		orr	r2, r2, #262144
 1974 017c 1A60     		str	r2, [r3]
2087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1975              		.loc 1 2087 0
 1976 017e 9A68     		ldr	r2, [r3, #8]
 1977 0180 42F48022 		orr	r2, r2, #262144
 1978 0184 9A60     		str	r2, [r3, #8]
2090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1979              		.loc 1 2090 0
 1980 0186 2368     		ldr	r3, [r4]
 1981 0188 FF22     		movs	r2, #255
 1982 018a 5A62     		str	r2, [r3, #36]
ARM GAS  /tmp/ccettC69.s 			page 87


2092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1983              		.loc 1 2092 0
 1984 018c 0123     		movs	r3, #1
 1985 018e 84F82130 		strb	r3, [r4, #33]
2095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1986              		.loc 1 2095 0
 1987 0192 0020     		movs	r0, #0
 1988 0194 84F82000 		strb	r0, [r4, #32]
2097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 1989              		.loc 1 2097 0
 1990 0198 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1991              	.LVL174:
 1992              	.L126:
1934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1993              		.loc 1 1934 0
 1994 019a 0220     		movs	r0, #2
 1995              	.LVL175:
2098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 1996              		.loc 1 2098 0
 1997 019c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1998              	.L129:
 1999 019e 00BF     		.align	2
 2000              	.L128:
 2001 01a0 00040140 		.word	1073808384
 2002              		.cfi_endproc
 2003              	.LFE297:
 2005              		.section	.text.RTC_Bcd2ToByte,"ax",%progbits
 2006              		.align	2
 2007              		.global	RTC_Bcd2ToByte
 2008              		.thumb
 2009              		.thumb_func
 2011              	RTC_Bcd2ToByte:
 2012              	.LFB313:
2679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
2680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
2681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Convert from 2 digit BCD to Binary.
2682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  Value BCD value to be converted
2683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval Converted word
2684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
2685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** uint8_t RTC_Bcd2ToByte(uint8_t Value)
2686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 2013              		.loc 1 2686 0
 2014              		.cfi_startproc
 2015              		@ args = 0, pretend = 0, frame = 0
 2016              		@ frame_needed = 0, uses_anonymous_args = 0
 2017              		@ link register save eliminated.
 2018              	.LVL176:
2687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint8_t tmp;
2688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   tmp = ((Value & 0xF0U) >> 4U) * 10U;
 2019              		.loc 1 2688 0
 2020 0000 0309     		lsrs	r3, r0, #4
 2021 0002 03EB8303 		add	r3, r3, r3, lsl #2
 2022 0006 5A00     		lsls	r2, r3, #1
 2023 0008 D2B2     		uxtb	r2, r2
 2024              	.LVL177:
2689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return (tmp + (Value & 0x0FU));
 2025              		.loc 1 2689 0
ARM GAS  /tmp/ccettC69.s 			page 88


 2026 000a 00F00F00 		and	r0, r0, #15
 2027              	.LVL178:
 2028 000e 1044     		add	r0, r0, r2
2690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 2029              		.loc 1 2690 0
 2030 0010 C0B2     		uxtb	r0, r0
 2031 0012 7047     		bx	lr
 2032              		.cfi_endproc
 2033              	.LFE313:
 2035              		.section	.text.HAL_RTC_GetTime,"ax",%progbits
 2036              		.align	2
 2037              		.global	HAL_RTC_GetTime
 2038              		.thumb
 2039              		.thumb_func
 2041              	HAL_RTC_GetTime:
 2042              	.LFB293:
1553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tmpreg;
 2043              		.loc 1 1553 0
 2044              		.cfi_startproc
 2045              		@ args = 0, pretend = 0, frame = 0
 2046              		@ frame_needed = 0, uses_anonymous_args = 0
 2047              	.LVL179:
 2048 0000 70B5     		push	{r4, r5, r6, lr}
 2049              	.LCFI14:
 2050              		.cfi_def_cfa_offset 16
 2051              		.cfi_offset 4, -16
 2052              		.cfi_offset 5, -12
 2053              		.cfi_offset 6, -8
 2054              		.cfi_offset 14, -4
1560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2055              		.loc 1 1560 0
 2056 0002 0368     		ldr	r3, [r0]
 2057 0004 9B6A     		ldr	r3, [r3, #40]
 2058 0006 4B60     		str	r3, [r1, #4]
1563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2059              		.loc 1 1563 0
 2060 0008 0368     		ldr	r3, [r0]
 2061 000a 1B69     		ldr	r3, [r3, #16]
 2062 000c C3F30E03 		ubfx	r3, r3, #0, #15
 2063 0010 8B60     		str	r3, [r1, #8]
1566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2064              		.loc 1 1566 0
 2065 0012 0368     		ldr	r3, [r0]
 2066 0014 1B68     		ldr	r3, [r3]
 2067 0016 03F07F33 		and	r3, r3, #2139062143
 2068 001a 23F0FE43 		bic	r3, r3, #2130706432
 2069              	.LVL180:
1569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sTime->Minutes = (uint8_t)((tmpreg & (RTC_TR_MNT | RTC_TR_MNU)) >> RTC_TR_MNU_Pos);
 2070              		.loc 1 1569 0
 2071 001e C3F30540 		ubfx	r0, r3, #16, #6
 2072              	.LVL181:
 2073 0022 0870     		strb	r0, [r1]
1570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sTime->Seconds = (uint8_t)((tmpreg & (RTC_TR_ST | RTC_TR_SU)) >> RTC_TR_SU_Pos);
 2074              		.loc 1 1570 0
 2075 0024 C3F30626 		ubfx	r6, r3, #8, #7
 2076 0028 4E70     		strb	r6, [r1, #1]
1571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sTime->TimeFormat = (uint8_t)((tmpreg & (RTC_TR_PM)) >> RTC_TR_PM_Pos);
ARM GAS  /tmp/ccettC69.s 			page 89


 2077              		.loc 1 1571 0
 2078 002a 03F07F05 		and	r5, r3, #127
 2079 002e 8D70     		strb	r5, [r1, #2]
1572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2080              		.loc 1 1572 0
 2081 0030 9B0D     		lsrs	r3, r3, #22
 2082              	.LVL182:
 2083 0032 CB70     		strb	r3, [r1, #3]
1575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 2084              		.loc 1 1575 0
 2085 0034 5AB9     		cbnz	r2, .L132
 2086 0036 0C46     		mov	r4, r1
1578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sTime->Minutes = (uint8_t)RTC_Bcd2ToByte(sTime->Minutes);
 2087              		.loc 1 1578 0
 2088 0038 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2089              	.LVL183:
 2090 003c 2070     		strb	r0, [r4]
1579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sTime->Seconds = (uint8_t)RTC_Bcd2ToByte(sTime->Seconds);
 2091              		.loc 1 1579 0
 2092 003e 3046     		mov	r0, r6
 2093 0040 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2094              	.LVL184:
 2095 0044 6070     		strb	r0, [r4, #1]
1580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 2096              		.loc 1 1580 0
 2097 0046 2846     		mov	r0, r5
 2098 0048 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2099              	.LVL185:
 2100 004c A070     		strb	r0, [r4, #2]
 2101              	.LVL186:
 2102              	.L132:
1584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2103              		.loc 1 1584 0
 2104 004e 0020     		movs	r0, #0
 2105 0050 70BD     		pop	{r4, r5, r6, pc}
 2106              		.cfi_endproc
 2107              	.LFE293:
 2109 0052 00BF     		.section	.text.HAL_RTC_GetDate,"ax",%progbits
 2110              		.align	2
 2111              		.global	HAL_RTC_GetDate
 2112              		.thumb
 2113              		.thumb_func
 2115              	HAL_RTC_GetDate:
 2116              	.LFB295:
1681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t datetmpreg;
 2117              		.loc 1 1681 0
 2118              		.cfi_startproc
 2119              		@ args = 0, pretend = 0, frame = 0
 2120              		@ frame_needed = 0, uses_anonymous_args = 0
 2121              	.LVL187:
 2122 0000 70B5     		push	{r4, r5, r6, lr}
 2123              	.LCFI15:
 2124              		.cfi_def_cfa_offset 16
 2125              		.cfi_offset 4, -16
 2126              		.cfi_offset 5, -12
 2127              		.cfi_offset 6, -8
 2128              		.cfi_offset 14, -4
ARM GAS  /tmp/ccettC69.s 			page 90


1688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2129              		.loc 1 1688 0
 2130 0002 0368     		ldr	r3, [r0]
 2131 0004 5B68     		ldr	r3, [r3, #4]
 2132 0006 23F07F43 		bic	r3, r3, #-16777216
 2133 000a 23F0C003 		bic	r3, r3, #192
 2134              	.LVL188:
1691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sDate->Month = (uint8_t)((datetmpreg & (RTC_DR_MT | RTC_DR_MU)) >> RTC_DR_MU_Pos);
 2135              		.loc 1 1691 0
 2136 000e 180C     		lsrs	r0, r3, #16
 2137              	.LVL189:
 2138 0010 C870     		strb	r0, [r1, #3]
1692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sDate->Date = (uint8_t)((datetmpreg & (RTC_DR_DT | RTC_DR_DU)) >> RTC_DR_DU_Pos);
 2139              		.loc 1 1692 0
 2140 0012 C3F30426 		ubfx	r6, r3, #8, #5
 2141 0016 4E70     		strb	r6, [r1, #1]
1693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sDate->WeekDay = (uint8_t)((datetmpreg & (RTC_DR_WDU)) >> RTC_DR_WDU_Pos);
 2142              		.loc 1 1693 0
 2143 0018 03F03F05 		and	r5, r3, #63
 2144 001c 8D70     		strb	r5, [r1, #2]
1694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2145              		.loc 1 1694 0
 2146 001e C3F34233 		ubfx	r3, r3, #13, #3
 2147              	.LVL190:
 2148 0022 0B70     		strb	r3, [r1]
1697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 2149              		.loc 1 1697 0
 2150 0024 5AB9     		cbnz	r2, .L135
 2151 0026 0C46     		mov	r4, r1
1700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sDate->Month = (uint8_t)RTC_Bcd2ToByte(sDate->Month);
 2152              		.loc 1 1700 0
 2153 0028 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2154              	.LVL191:
 2155 002c E070     		strb	r0, [r4, #3]
1701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sDate->Date = (uint8_t)RTC_Bcd2ToByte(sDate->Date);
 2156              		.loc 1 1701 0
 2157 002e 3046     		mov	r0, r6
 2158 0030 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2159              	.LVL192:
 2160 0034 6070     		strb	r0, [r4, #1]
1702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 2161              		.loc 1 1702 0
 2162 0036 2846     		mov	r0, r5
 2163 0038 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2164              	.LVL193:
 2165 003c A070     		strb	r0, [r4, #2]
 2166              	.LVL194:
 2167              	.L135:
1705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2168              		.loc 1 1705 0
 2169 003e 0020     		movs	r0, #0
 2170 0040 70BD     		pop	{r4, r5, r6, pc}
 2171              		.cfi_endproc
 2172              	.LFE295:
 2174 0042 00BF     		.section	.text.HAL_RTC_GetAlarm,"ax",%progbits
 2175              		.align	2
 2176              		.global	HAL_RTC_GetAlarm
ARM GAS  /tmp/ccettC69.s 			page 91


 2177              		.thumb
 2178              		.thumb_func
 2180              	HAL_RTC_GetAlarm:
 2181              	.LFB299:
2214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tmpreg, subsecondtmpreg;
 2182              		.loc 1 2214 0
 2183              		.cfi_startproc
 2184              		@ args = 0, pretend = 0, frame = 0
 2185              		@ frame_needed = 0, uses_anonymous_args = 0
 2186              	.LVL195:
 2187 0000 10B5     		push	{r4, lr}
 2188              	.LCFI16:
 2189              		.cfi_def_cfa_offset 8
 2190              		.cfi_offset 4, -8
 2191              		.cfi_offset 14, -4
2221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 2192              		.loc 1 2221 0
 2193 0002 B2F5807F 		cmp	r2, #256
 2194 0006 1DD1     		bne	.L138
2224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2195              		.loc 1 2224 0
 2196 0008 8A62     		str	r2, [r1, #40]
2226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     subsecondtmpreg = (uint32_t)((hrtc->Instance->ALRMASSR) & RTC_ALRMASSR_SS);
 2197              		.loc 1 2226 0
 2198 000a 0068     		ldr	r0, [r0]
 2199              	.LVL196:
 2200 000c C269     		ldr	r2, [r0, #28]
 2201              	.LVL197:
2227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2202              		.loc 1 2227 0
 2203 000e 406C     		ldr	r0, [r0, #68]
 2204 0010 C0F30E00 		ubfx	r0, r0, #0, #15
 2205              	.LVL198:
2230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Minutes = (uint8_t)((tmpreg & (RTC_ALRMAR_MNT | RTC_ALRMAR_MNU)) >> RTC_ALRMA
 2206              		.loc 1 2230 0
 2207 0014 C2F30544 		ubfx	r4, r2, #16, #6
 2208 0018 0C70     		strb	r4, [r1]
2231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Seconds = (uint8_t)((tmpreg & (RTC_ALRMAR_ST | RTC_ALRMAR_SU)) >> RTC_ALRMAR_
 2209              		.loc 1 2231 0
 2210 001a C2F30624 		ubfx	r4, r2, #8, #7
 2211 001e 4C70     		strb	r4, [r1, #1]
2232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.TimeFormat = (uint8_t)((tmpreg & RTC_ALRMAR_PM) >> RTC_ALRMAR_PM_Pos);
 2212              		.loc 1 2232 0
 2213 0020 02F07F04 		and	r4, r2, #127
 2214 0024 8C70     		strb	r4, [r1, #2]
2233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.SubSeconds = (uint32_t) subsecondtmpreg;
 2215              		.loc 1 2233 0
 2216 0026 C2F38054 		ubfx	r4, r2, #22, #1
 2217 002a CC70     		strb	r4, [r1, #3]
2234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmDateWeekDay = (uint8_t)((tmpreg & (RTC_ALRMAR_DT | RTC_ALRMAR_DU)) >> RTC_ALRMAR_D
 2218              		.loc 1 2234 0
 2219 002c 4860     		str	r0, [r1, #4]
2235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmDateWeekDaySel = (uint32_t)(tmpreg & RTC_ALRMAR_WDSEL);
 2220              		.loc 1 2235 0
 2221 002e C2F30560 		ubfx	r0, r2, #24, #6
 2222              	.LVL199:
 2223 0032 81F82400 		strb	r0, [r1, #36]
ARM GAS  /tmp/ccettC69.s 			page 92


2236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmMask = (uint32_t)(tmpreg & RTC_ALARMMASK_ALL);
 2224              		.loc 1 2236 0
 2225 0036 02F08040 		and	r0, r2, #1073741824
 2226 003a 0862     		str	r0, [r1, #32]
2237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 2227              		.loc 1 2237 0
 2228 003c 02F08032 		and	r2, r2, #-2139062144
 2229              	.LVL200:
 2230 0040 4A61     		str	r2, [r1, #20]
 2231 0042 1EE0     		b	.L139
 2232              	.LVL201:
 2233              	.L138:
2241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2234              		.loc 1 2241 0
 2235 0044 4FF40072 		mov	r2, #512
 2236              	.LVL202:
 2237 0048 8A62     		str	r2, [r1, #40]
2243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     subsecondtmpreg = (uint32_t)((hrtc->Instance->ALRMBSSR) & RTC_ALRMBSSR_SS);
 2238              		.loc 1 2243 0
 2239 004a 0068     		ldr	r0, [r0]
 2240              	.LVL203:
 2241 004c 026A     		ldr	r2, [r0, #32]
 2242              	.LVL204:
2244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2243              		.loc 1 2244 0
 2244 004e 806C     		ldr	r0, [r0, #72]
 2245 0050 C0F30E00 		ubfx	r0, r0, #0, #15
 2246              	.LVL205:
2247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Minutes = (uint8_t)((tmpreg & (RTC_ALRMBR_MNT | RTC_ALRMBR_MNU)) >> RTC_ALRMB
 2247              		.loc 1 2247 0
 2248 0054 C2F30544 		ubfx	r4, r2, #16, #6
 2249 0058 0C70     		strb	r4, [r1]
2248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Seconds = (uint8_t)((tmpreg & (RTC_ALRMBR_ST | RTC_ALRMBR_SU)) >> RTC_ALRMBR_
 2250              		.loc 1 2248 0
 2251 005a C2F30624 		ubfx	r4, r2, #8, #7
 2252 005e 4C70     		strb	r4, [r1, #1]
2249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.TimeFormat = (uint8_t)((tmpreg & RTC_ALRMBR_PM) >> RTC_ALRMBR_PM_Pos);
 2253              		.loc 1 2249 0
 2254 0060 02F07F04 		and	r4, r2, #127
 2255 0064 8C70     		strb	r4, [r1, #2]
2250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.SubSeconds = (uint32_t) subsecondtmpreg;
 2256              		.loc 1 2250 0
 2257 0066 C2F38054 		ubfx	r4, r2, #22, #1
 2258 006a CC70     		strb	r4, [r1, #3]
2251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmDateWeekDay = (uint8_t)((tmpreg & (RTC_ALRMBR_DT | RTC_ALRMBR_DU)) >> RTC_ALRMBR_D
 2259              		.loc 1 2251 0
 2260 006c 4860     		str	r0, [r1, #4]
2252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmDateWeekDaySel = (uint32_t)(tmpreg & RTC_ALRMBR_WDSEL);
 2261              		.loc 1 2252 0
 2262 006e C2F30560 		ubfx	r0, r2, #24, #6
 2263              	.LVL206:
 2264 0072 81F82400 		strb	r0, [r1, #36]
2253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmMask = (uint32_t)(tmpreg & RTC_ALARMMASK_ALL);
 2265              		.loc 1 2253 0
 2266 0076 02F08040 		and	r0, r2, #1073741824
 2267 007a 0862     		str	r0, [r1, #32]
2254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
ARM GAS  /tmp/ccettC69.s 			page 93


 2268              		.loc 1 2254 0
 2269 007c 02F08032 		and	r2, r2, #-2139062144
 2270              	.LVL207:
 2271 0080 4A61     		str	r2, [r1, #20]
 2272              	.LVL208:
 2273              	.L139:
2257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 2274              		.loc 1 2257 0
 2275 0082 93B9     		cbnz	r3, .L140
 2276 0084 0C46     		mov	r4, r1
2259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Minutes = RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes);
 2277              		.loc 1 2259 0
 2278 0086 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 2279 0088 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2280              	.LVL209:
 2281 008c 2070     		strb	r0, [r4]
2260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Seconds = RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds);
 2282              		.loc 1 2260 0
 2283 008e 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2284 0090 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2285              	.LVL210:
 2286 0094 6070     		strb	r0, [r4, #1]
2261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmDateWeekDay = RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay);
 2287              		.loc 1 2261 0
 2288 0096 A078     		ldrb	r0, [r4, #2]	@ zero_extendqisi2
 2289 0098 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2290              	.LVL211:
 2291 009c A070     		strb	r0, [r4, #2]
2262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 2292              		.loc 1 2262 0
 2293 009e 94F82400 		ldrb	r0, [r4, #36]	@ zero_extendqisi2
 2294 00a2 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2295              	.LVL212:
 2296 00a6 84F82400 		strb	r0, [r4, #36]
 2297              	.LVL213:
 2298              	.L140:
2266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 2299              		.loc 1 2266 0
 2300 00aa 0020     		movs	r0, #0
 2301 00ac 10BD     		pop	{r4, pc}
 2302              		.cfi_endproc
 2303              	.LFE299:
 2305 00ae 00BF     		.text
 2306              	.Letext0:
 2307              		.file 2 "/home/deh/launchpad/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_t
 2308              		.file 3 "/home/deh/launchpad/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 2309              		.file 4 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l431xx.h"
 2310              		.file 5 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 2311              		.file 6 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rtc.h"
 2312              		.file 7 "Drivers/CMSIS/Include/cmsis_gcc.h"
 2313              		.file 8 "Drivers/CMSIS/Include/core_cm4.h"
 2314              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 2315              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rtc_ex.h"
ARM GAS  /tmp/ccettC69.s 			page 94


DEFINED SYMBOLS
                            *ABS*:00000000 stm32l4xx_hal_rtc.c
     /tmp/ccettC69.s:22     .text.HAL_RTC_MspInit:00000000 $t
     /tmp/ccettC69.s:27     .text.HAL_RTC_MspInit:00000000 HAL_RTC_MspInit
     /tmp/ccettC69.s:41     .text.HAL_RTC_MspDeInit:00000000 $t
     /tmp/ccettC69.s:46     .text.HAL_RTC_MspDeInit:00000000 HAL_RTC_MspDeInit
     /tmp/ccettC69.s:59     .text.HAL_RTC_DeactivateAlarm:00000000 $t
     /tmp/ccettC69.s:64     .text.HAL_RTC_DeactivateAlarm:00000000 HAL_RTC_DeactivateAlarm
     /tmp/ccettC69.s:220    .text.HAL_RTC_DST_Add1Hour:00000000 $t
     /tmp/ccettC69.s:225    .text.HAL_RTC_DST_Add1Hour:00000000 HAL_RTC_DST_Add1Hour
     /tmp/ccettC69.s:253    .text.HAL_RTC_DST_Add1Hour:00000020 $d
     /tmp/ccettC69.s:258    .text.HAL_RTC_DST_Sub1Hour:00000000 $t
     /tmp/ccettC69.s:263    .text.HAL_RTC_DST_Sub1Hour:00000000 HAL_RTC_DST_Sub1Hour
     /tmp/ccettC69.s:291    .text.HAL_RTC_DST_Sub1Hour:00000020 $d
     /tmp/ccettC69.s:296    .text.HAL_RTC_DST_SetStoreOperation:00000000 $t
     /tmp/ccettC69.s:301    .text.HAL_RTC_DST_SetStoreOperation:00000000 HAL_RTC_DST_SetStoreOperation
     /tmp/ccettC69.s:329    .text.HAL_RTC_DST_SetStoreOperation:00000020 $d
     /tmp/ccettC69.s:334    .text.HAL_RTC_DST_ClearStoreOperation:00000000 $t
     /tmp/ccettC69.s:339    .text.HAL_RTC_DST_ClearStoreOperation:00000000 HAL_RTC_DST_ClearStoreOperation
     /tmp/ccettC69.s:367    .text.HAL_RTC_DST_ClearStoreOperation:00000020 $d
     /tmp/ccettC69.s:372    .text.HAL_RTC_DST_ReadStoreOperation:00000000 $t
     /tmp/ccettC69.s:377    .text.HAL_RTC_DST_ReadStoreOperation:00000000 HAL_RTC_DST_ReadStoreOperation
     /tmp/ccettC69.s:395    .text.HAL_RTC_DST_ReadStoreOperation:0000000c $d
     /tmp/ccettC69.s:400    .text.HAL_RTC_AlarmAEventCallback:00000000 $t
     /tmp/ccettC69.s:405    .text.HAL_RTC_AlarmAEventCallback:00000000 HAL_RTC_AlarmAEventCallback
     /tmp/ccettC69.s:418    .text.HAL_RTC_AlarmIRQHandler:00000000 $t
     /tmp/ccettC69.s:423    .text.HAL_RTC_AlarmIRQHandler:00000000 HAL_RTC_AlarmIRQHandler
     /tmp/ccettC69.s:486    .text.HAL_RTC_AlarmIRQHandler:00000058 $d
     /tmp/ccettC69.s:491    .text.HAL_RTC_PollForAlarmAEvent:00000000 $t
     /tmp/ccettC69.s:496    .text.HAL_RTC_PollForAlarmAEvent:00000000 HAL_RTC_PollForAlarmAEvent
     /tmp/ccettC69.s:561    .text.HAL_RTC_WaitForSynchro:00000000 $t
     /tmp/ccettC69.s:566    .text.HAL_RTC_WaitForSynchro:00000000 HAL_RTC_WaitForSynchro
     /tmp/ccettC69.s:620    .text.HAL_RTC_GetState:00000000 $t
     /tmp/ccettC69.s:625    .text.HAL_RTC_GetState:00000000 HAL_RTC_GetState
     /tmp/ccettC69.s:642    .text.RTC_EnterInitMode:00000000 $t
     /tmp/ccettC69.s:647    .text.RTC_EnterInitMode:00000000 RTC_EnterInitMode
     /tmp/ccettC69.s:716    .text.RTC_ExitInitMode:00000000 $t
     /tmp/ccettC69.s:721    .text.RTC_ExitInitMode:00000000 RTC_ExitInitMode
     /tmp/ccettC69.s:792    .text.RTC_ExitInitMode:00000050 $d
     /tmp/ccettC69.s:797    .text.HAL_RTC_Init:00000000 $t
     /tmp/ccettC69.s:802    .text.HAL_RTC_Init:00000000 HAL_RTC_Init
     /tmp/ccettC69.s:919    .text.HAL_RTC_DeInit:00000000 $t
     /tmp/ccettC69.s:924    .text.HAL_RTC_DeInit:00000000 HAL_RTC_DeInit
     /tmp/ccettC69.s:1040   .text.HAL_RTC_DeInit:00000090 $d
     /tmp/ccettC69.s:1045   .text.RTC_ByteToBcd2:00000000 $t
     /tmp/ccettC69.s:1050   .text.RTC_ByteToBcd2:00000000 RTC_ByteToBcd2
     /tmp/ccettC69.s:1088   .text.HAL_RTC_SetTime:00000000 $t
     /tmp/ccettC69.s:1093   .text.HAL_RTC_SetTime:00000000 HAL_RTC_SetTime
     /tmp/ccettC69.s:1259   .text.HAL_RTC_SetDate:00000000 $t
     /tmp/ccettC69.s:1264   .text.HAL_RTC_SetDate:00000000 HAL_RTC_SetDate
     /tmp/ccettC69.s:1409   .text.HAL_RTC_SetAlarm:00000000 $t
     /tmp/ccettC69.s:1414   .text.HAL_RTC_SetAlarm:00000000 HAL_RTC_SetAlarm
     /tmp/ccettC69.s:1701   .text.HAL_RTC_SetAlarm_IT:00000000 $t
     /tmp/ccettC69.s:1706   .text.HAL_RTC_SetAlarm_IT:00000000 HAL_RTC_SetAlarm_IT
     /tmp/ccettC69.s:2001   .text.HAL_RTC_SetAlarm_IT:000001a0 $d
     /tmp/ccettC69.s:2006   .text.RTC_Bcd2ToByte:00000000 $t
     /tmp/ccettC69.s:2011   .text.RTC_Bcd2ToByte:00000000 RTC_Bcd2ToByte
ARM GAS  /tmp/ccettC69.s 			page 95


     /tmp/ccettC69.s:2036   .text.HAL_RTC_GetTime:00000000 $t
     /tmp/ccettC69.s:2041   .text.HAL_RTC_GetTime:00000000 HAL_RTC_GetTime
     /tmp/ccettC69.s:2110   .text.HAL_RTC_GetDate:00000000 $t
     /tmp/ccettC69.s:2115   .text.HAL_RTC_GetDate:00000000 HAL_RTC_GetDate
     /tmp/ccettC69.s:2175   .text.HAL_RTC_GetAlarm:00000000 $t
     /tmp/ccettC69.s:2180   .text.HAL_RTC_GetAlarm:00000000 HAL_RTC_GetAlarm
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_RTCEx_AlarmBEventCallback
